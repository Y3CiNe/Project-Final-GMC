{"version":3,"sources":["../../../../node_modules/@babel/runtime/helpers/classCallCheck.js","../../../../node_modules/@babel/runtime/helpers/createClass.js","../../../../node_modules/@babel/runtime/helpers/defineProperty.js","../../../../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","../../../../node_modules/@babel/runtime/helpers/assertThisInitialized.js","../../../../node_modules/@babel/runtime/helpers/getPrototypeOf.js","../../../../node_modules/@babel/runtime/helpers/inherits.js","../../../../node_modules/react-bootstrap/esm/Spinner.js","../../../../node_modules/@babel/runtime/helpers/extends.js","../../../../node_modules/react-bootstrap/esm/ListGroupItem.js","../../../../node_modules/react-bootstrap/esm/ListGroup.js","../../../../node_modules/@babel/runtime/helpers/objectWithoutProperties.js","../../../../node_modules/dom-helpers/esm/scrollbarSize.js","../../../../node_modules/react-virtualized/dist/es/vendor/detectElementResize.js","../../../../node_modules/@babel/runtime/helpers/arrayLikeToArray.js","../../../../node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","../../../../node_modules/@babel/runtime/helpers/typeof.js","../../../../node_modules/@babel/runtime/helpers/setPrototypeOf.js","../../../../node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose.js","../../../../node_modules/@babel/runtime/helpers/toConsumableArray.js","../../../../node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","../../../../node_modules/@babel/runtime/helpers/iterableToArray.js","../../../../node_modules/@babel/runtime/helpers/nonIterableSpread.js","../../../../node_modules/@babel/runtime/helpers/slicedToArray.js","../../../../node_modules/@babel/runtime/helpers/arrayWithHoles.js","../../../../node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","../../../../node_modules/@babel/runtime/helpers/nonIterableRest.js","../../../../node_modules/clsx/dist/clsx.m.js","../../../../node_modules/react-virtualized/dist/es/Grid/utils/calculateSizeAndPositionDataAndUpdateScrollOffset.js","../../../../node_modules/react-virtualized/dist/es/Grid/utils/CellSizeAndPositionManager.js","../../../../node_modules/react-virtualized/dist/es/Grid/utils/maxElementSize.js","../../../../node_modules/react-virtualized/dist/es/Grid/utils/ScalingCellSizeAndPositionManager.js","../../../../node_modules/react-virtualized/dist/es/utils/createCallbackMemoizer.js","../../../../node_modules/react-virtualized/dist/es/Grid/utils/updateScrollIndexHelper.js","../../../../node_modules/react-virtualized/dist/es/utils/animationFrame.js","../../../../node_modules/react-virtualized/dist/es/Grid/Grid.js","../../../../node_modules/react-virtualized/dist/es/utils/requestAnimationTimeout.js","../../../../node_modules/react-virtualized/dist/es/Grid/defaultOverscanIndicesGetter.js","../../../../node_modules/react-virtualized/dist/es/Grid/defaultCellRangeRenderer.js","../../../../node_modules/react-virtualized/dist/es/Grid/accessibilityOverscanIndicesGetter.js","../../../../node_modules/react-virtualized/dist/es/ArrowKeyStepper/types.js","../../../../node_modules/react-virtualized/dist/es/ArrowKeyStepper/ArrowKeyStepper.js","../../../../node_modules/react-virtualized/dist/es/AutoSizer/AutoSizer.js","../../../../node_modules/react-virtualized/dist/es/CellMeasurer/CellMeasurer.js","../../../../node_modules/react-virtualized/dist/es/CellMeasurer/CellMeasurerCache.js","../../../../node_modules/react-virtualized/dist/es/Collection/CollectionView.js","../../../../node_modules/react-virtualized/dist/es/Collection/Section.js","../../../../node_modules/react-virtualized/dist/es/Collection/SectionManager.js","../../../../node_modules/react-virtualized/dist/es/utils/getUpdatedOffsetForIndex.js","../../../../node_modules/react-virtualized/dist/es/Collection/Collection.js","../../../../node_modules/react-virtualized/dist/es/Collection/utils/calculateSizeAndPositionData.js","../../../../node_modules/react-virtualized/dist/es/Collection/index.js","../../../../node_modules/react-virtualized/dist/es/ColumnSizer/ColumnSizer.js","../../../../node_modules/react-virtualized/dist/es/ColumnSizer/index.js","../../../../node_modules/react-virtualized/dist/es/InfiniteLoader/InfiniteLoader.js","../../../../node_modules/react-virtualized/dist/es/InfiniteLoader/index.js","../../../../node_modules/react-virtualized/dist/es/List/List.js","../../../../node_modules/react-virtualized/dist/es/vendor/binarySearchBounds.js","../../../../node_modules/react-virtualized/dist/es/vendor/intervalTree.js","../../../../node_modules/react-virtualized/dist/es/Masonry/PositionCache.js","../../../../node_modules/react-virtualized/dist/es/Masonry/Masonry.js","../../../../node_modules/react-virtualized/dist/es/Masonry/index.js","../../../../node_modules/react-virtualized/dist/es/MultiGrid/CellMeasurerCacheDecorator.js","../../../../node_modules/react-virtualized/dist/es/MultiGrid/MultiGrid.js","../../../../node_modules/react-virtualized/dist/es/ScrollSync/ScrollSync.js","../../../../node_modules/react-virtualized/dist/es/Table/defaultHeaderRowRenderer.js","../../../../node_modules/react-virtualized/dist/es/Table/SortDirection.js","../../../../node_modules/react-virtualized/dist/es/Table/SortIndicator.js","../../../../node_modules/react-virtualized/dist/es/Table/defaultHeaderRenderer.js","../../../../node_modules/react-virtualized/dist/es/Table/defaultRowRenderer.js","../../../../node_modules/react-virtualized/dist/es/Table/Column.js","../../../../node_modules/react-virtualized/dist/es/Table/Table.js","../../../../node_modules/react-virtualized/dist/es/Table/defaultCellDataGetter.js","../../../../node_modules/react-virtualized/dist/es/Table/defaultCellRenderer.js","../../../../node_modules/react-virtualized/dist/es/Table/index.js","../../../../node_modules/react-virtualized/dist/es/WindowScroller/utils/onScroll.js","../../../../node_modules/react-virtualized/dist/es/WindowScroller/utils/dimensions.js","../../../../node_modules/react-virtualized/dist/es/WindowScroller/WindowScroller.js"],"names":["module","exports","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","obj","value","_typeof","assertThisInitialized","self","call","ReferenceError","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","subClass","superClass","create","constructor","Spinner","React","forwardRef","_ref","ref","bsPrefix","variant","animation","size","children","_ref$as","as","Component","className","_objectWithoutPropertiesLoose","bsSpinnerPrefix","useBootstrapPrefix","createElement","_extends","classNames","displayName","assign","arguments","source","hasOwnProperty","apply","this","defaultProps","undefined","active","disabled","ListGroupItem","action","eventKey","onClick","handleClick","useCallback","event","preventDefault","stopPropagation","AbstractNavItem","makeEventKey","href","horizontal","ListGroup","horizontalVariant","_useUncontrolled","useUncontrolled","activeKey","initialBsPrefix","_useUncontrolled$as","controlledProps","AbstractNav","Item","objectWithoutPropertiesLoose","excluded","getOwnPropertySymbols","sourceSymbolKeys","indexOf","propertyIsEnumerable","scrollbarSize","recalc","canUseDOM","scrollDiv","document","style","position","top","width","height","overflow","body","appendChild","offsetWidth","clientWidth","removeChild","createDetectElementResize","nonce","hostWindow","_window","attachEvent","window","global","requestFrame","raf","requestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","fn","setTimeout","cancelFrame","cancel","cancelAnimationFrame","mozCancelAnimationFrame","webkitCancelAnimationFrame","clearTimeout","id","resetTriggers","element","triggers","__resizeTriggers__","expand","firstElementChild","contract","lastElementChild","expandChild","scrollLeft","scrollWidth","scrollTop","scrollHeight","offsetHeight","scrollListener","e","__resizeRAF__","__resizeLast__","checkTriggers","__resizeListeners__","forEach","keyframeprefix","animationstartevent","domPrefixes","split","startEvents","elm","animationName","toLowerCase","animationKeyframes","animationStyle","addResizeListener","doc","ownerDocument","elementStyle","getComputedStyle","getElementById","css","head","getElementsByTagName","type","setAttribute","styleSheet","cssText","createTextNode","createStyles","resizeTriggersHtml","trustedTypes","staticPolicy","createPolicy","createHTML","innerHTML","addEventListener","__animationListener__","push","removeResizeListener","detachEvent","splice","removeEventListener","arr","len","arr2","Array","arrayLikeToArray","minLen","n","toString","slice","name","from","test","Symbol","iterator","_setPrototypeOf","p","sourceKeys","keys","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","isArray","iter","arrayWithHoles","iterableToArrayLimit","nonIterableRest","_arr","_n","_d","_e","_s","_i","next","done","err","toVal","mix","k","y","str","tmp","x","calculateSizeAndPositionDataAndUpdateScrollOffset","cellCount","cellSize","computeMetadataCallback","computeMetadataCallbackProps","nextCellsCount","nextCellSize","nextScrollToIndex","scrollToIndex","updateScrollOffsetForScrollToIndex","CellSizeAndPositionManager","cellSizeGetter","estimatedCellSize","_classCallCheck","_defineProperty","_cellSizeGetter","_cellCount","_estimatedCellSize","_createClass","_ref2","_lastMeasuredIndex","index","Error","concat","lastMeasuredCellSizeAndPosition","getSizeAndPositionOfLastMeasuredCell","offset","isNaN","_cellSizeAndPositionData","_lastBatchedIndex","_ref3","_ref3$align","align","containerSize","currentOffset","targetIndex","idealOffset","datum","getSizeAndPositionOfCell","maxOffset","minOffset","Math","max","min","totalSize","getTotalSize","params","start","_findNearestCell","stop","high","low","middle","floor","interval","_binarySearch","lastMeasuredIndex","_exponentialSearch","getMaxElementSize","chrome","ScalingCellSizeAndPositionManager","_ref$maxScrollSize","maxScrollSize","_objectWithoutProperties","_cellSizeAndPositionManager","_maxScrollSize","configure","getCellCount","getEstimatedCellSize","getLastMeasuredIndex","safeTotalSize","offsetPercentage","_getOffsetPercentage","round","_safeOffsetToOffset","getUpdatedOffsetForIndex","_offsetToSafeOffset","_ref4","getVisibleCellRange","resetCell","_ref5","_ref6","_ref7","createCallbackMemoizer","requireAllKeys","cachedIndices","callback","indices","allInitialized","every","indexChanged","some","cachedValue","join","updateScrollIndexHelper","cellSizeAndPositionManager","previousCellsCount","previousCellSize","previousScrollToAlignment","previousScrollToIndex","previousSize","scrollOffset","scrollToAlignment","sizeJustIncreasedFromZero","updateScrollIndexCallback","hasScrollToIndex","win","_class","_temp","request","oRequestAnimationFrame","msRequestAnimationFrame","oCancelAnimationFrame","msCancelAnimationFrame","caf","cancelAnimationTimeout","frame","requestAnimationTimeout","delay","Promise","resolve","then","Date","now","timeout","ownKeys","object","enumerableOnly","symbols","filter","sym","getOwnPropertyDescriptor","_objectSpread","getOwnPropertyDescriptors","defineProperties","SCROLL_POSITION_CHANGE_REASONS","Grid","_React$PureComponent","_this","_possibleConstructorReturn","_assertThisInitialized","_disablePointerEventsTimeoutId","setState","isScrolling","needToResetStyleCache","onSectionRendered","_onGridRenderedMemoizer","columnOverscanStartIndex","_columnStartIndex","columnOverscanStopIndex","_columnStopIndex","columnStartIndex","_renderedColumnStartIndex","columnStopIndex","_renderedColumnStopIndex","rowOverscanStartIndex","_rowStartIndex","rowOverscanStopIndex","_rowStopIndex","rowStartIndex","_renderedRowStartIndex","rowStopIndex","_renderedRowStopIndex","_scrollingContainer","handleScrollEvent","columnSizeAndPositionManager","columnCount","_wrapSizeGetter","columnWidth","_getEstimatedColumnSize","rowSizeAndPositionManager","rowCount","rowHeight","_getEstimatedRowSize","state","instanceProps","prevColumnWidth","prevRowHeight","prevColumnCount","prevRowCount","prevIsScrolling","prevScrollToColumn","scrollToColumn","prevScrollToRow","scrollToRow","scrollbarSizeMeasured","scrollDirectionHorizontal","scrollDirectionVertical","scrollPositionChangeReason","_initialScrollTop","_getCalculatedScrollTop","_initialScrollLeft","_getCalculatedScrollLeft","_inherits","_ref$alignment","alignment","_ref$columnIndex","columnIndex","_ref$rowIndex","rowIndex","offsetProps","_ref2$scrollLeft","scrollLeftParam","_ref2$scrollTop","scrollTopParam","_debounceScrollEnded","_this$props","autoHeight","autoWidth","totalRowsHeight","totalColumnsWidth","newState","_invokeOnScrollMemoizer","_deferredInvalidateColumnIndex","_deferredInvalidateRowIndex","_this$props2","_ref4$columnIndex","_ref4$rowIndex","_this$props3","_recomputeScrollLeftFlag","_recomputeScrollTopFlag","_styleCache","_cellCache","forceUpdate","_updateScrollLeftForScrollToColumn","_updateScrollTopForScrollToRow","_this$props4","getScrollbarSize","_handleInvalidatedGridSize","prevState","stateUpdate","_getScrollToPositionStateUpdate","sizeIsBiggerThanZero","_invokeOnGridRenderedHelper","_maybeCallOnScrollbarPresenceChange","prevProps","_this2","_this$props5","_this$state","columnOrRowCountJustIncreasedFromZero","_this$props6","autoContainerWidth","containerProps","containerRole","containerStyle","noContentRenderer","role","tabIndex","_this$state2","_isScrolling","gridStyle","boxSizing","direction","WebkitOverflowScrolling","willChange","_resetStyleCache","_calculateChildrenToRender","verticalScrollBarSize","horizontalScrollBarSize","_horizontalScrollBarSize","_verticalScrollBarSize","_scrollbarPresenceChanged","overflowX","overflowY","childrenToDisplay","_childrenToDisplay","showNoContentRenderer","_setScrollingContainerRef","clsx","onScroll","_onScroll","maxWidth","maxHeight","pointerEvents","cellRenderer","cellRangeRenderer","deferredMeasurementCache","overscanColumnCount","overscanIndicesGetter","overscanRowCount","isScrollingOptOut","visibleColumnIndices","visibleRowIndices","horizontalOffsetAdjustment","getOffsetAdjustment","verticalOffsetAdjustment","overscanColumnIndices","overscanCellsCount","scrollDirection","startIndex","stopIndex","overscanRowIndices","overscanStartIndex","overscanStopIndex","hasFixedHeight","has","hasFixedWidth","cellCache","parent","styleCache","scrollingResetTimeInterval","_debounceScrollEndedCallback","recomputeGridSize","_this3","_onScrollMemoizer","_this3$props","clientHeight","Boolean","onScrollbarPresenceChange","vertical","_ref8","_getScrollLeftForScrollToColumnStateUpdate","_getScrollTopForScrollToRowStateUpdate","nextProps","maybeStateA","maybeStateB","estimatedColumnSize","estimatedRowSize","_ref9","finalColumn","scrollBarSize","calculatedScrollLeft","finalRow","calculatedScrollTop","renderedCells","areOffsetsAdjusted","canCacheStyle","rowDatum","columnDatum","isVisible","left","cellRendererParams","renderedCell","polyfill","defaultOverscanIndicesGetter","ArrowKeyStepper","_getPrototypeOf2","_len","args","_key","mode","_this$_getScrollState","_getScrollState","scrollToColumnPrevious","scrollToRowPrevious","_this$_getScrollState2","_updateScrollState","_this$_getScrollState3","onKeyDown","_onKeyDown","_onSectionRendered","isControlled","onScrollToChange","AutoSizer","_React$Component","defaultHeight","defaultWidth","disableHeight","disableWidth","onResize","_parentNode","paddingLeft","parseInt","paddingRight","paddingTop","paddingBottom","newHeight","newWidth","autoSizer","_autoSizer","parentNode","defaultView","HTMLElement","_detectElementResize","_onResize","outerStyle","childParams","_setRef","CellMeasurer","cache","_this$props$columnInd","_this$props$rowIndex","_this$_getCellMeasure","_getCellMeasurements","getHeight","getWidth","set","Element","console","warn","_child","_maybeMeasureCell","measure","_measure","registerChild","_registerChild","node","findDOMNode","styleWidth","styleHeight","ceil","_this$props2$columnIn","_this$props2$rowIndex","_this$_getCellMeasure2","invalidateCellSizeAfterRender","CellMeasurerCache","_keyMapper","_columnWidthCache","_defaultWidth","_rowHeightCache","_defaultHeight","fixedHeight","fixedWidth","keyMapper","minHeight","minWidth","_hasFixedHeight","_hasFixedWidth","_minHeight","_minWidth","defaultKeyMapper","_cellHeightCache","_cellWidthCache","_updateCachedColumnAndRowSizes","_rowCount","_columnCount","_key2","columnKey","rowKey","get","CollectionView","cellLayoutManager","_onSectionRenderedMemoizer","getLastRenderedIndices","scrollToCell","scrollPosition","getScrollPositionForCell","cellIndex","_setScrollPosition","_enablePointerEventsAfterDelay","isScrollingChange","_scrollbarSize","_cellLayoutManager$ge","totalHeight","totalWidth","cancelable","_scrollbarSizeMeasured","_calculateSizeAndPositionDataOnNextUpdate","_updateScrollPositionForScrollToCell","_invokeOnSectionRenderedHelper","_cellLayoutManager$ge2","horizontalOverscanSize","verticalOverscanSize","_this$state3","_lastRenderedCellCount","_lastRenderedCellLayoutManager","calculateSizeAndPositionData","_cellLayoutManager$ge3","right","bottom","cellRenderers","collectionStyle","propTypes","Section","_indexMap","_indices","SectionManager","sectionSize","_sectionSize","_cellMetadata","_sections","getSections","section","getCellIndices","map","sectionXStart","sectionXStop","sectionYStart","sectionYStop","sections","sectionX","sectionY","cellMetadatum","addCellIndex","_ref$align","cellOffset","Collection","context","_lastRenderedCellIndices","_isScrollingChange","bind","_setCollectionViewRef","_collectionView","recomputeCellSizesAndPositions","data","cellSizeAndPositionGetter","cellMetadata","sectionManager","registerCell","_calculateSizeAndPositionData","_sectionManager","_height","_width","cellGroupRenderer","getCellMetadata","cellRendererProps","ColumnSizer","columnMaxWidth","columnMinWidth","_registeredChild","safeColumnMinWidth","safeColumnMaxWidth","adjustedWidth","getColumnWidth","child","InfiniteLoader","_loadMoreRowsMemoizer","_onRowsRendered","autoReload","_doStuff","_lastRenderedStartIndex","_lastRenderedStopIndex","onRowsRendered","unloadedRanges","loadMoreRows","unloadedRange","promise","lastRenderedStartIndex","lastRenderedStopIndex","isRangeVisible","component","currentIndex","recomputeSize","recomputeRowHeights","forceUpdateReactVirtualizedComponent","isRowLoaded","minimumBatchSize","threshold","rangeStartIndex","rangeStopIndex","potentialStopIndex","_index","firstUnloadedRange","_index2","scanForUnloadedRanges","squashedUnloadedRanges","_toConsumableArray","_loadUnloadedRanges","registeredChild","List","rowRenderer","widthDescriptor","getOffsetForCell","measureAllCells","_ref6$columnIndex","_ref6$rowIndex","scrollToPosition","noRowsRenderer","_cellRenderer","accessibilityOverscanIndicesGetter","ge","a","c","l","h","m","_GEP","_GEA","gt","_GTP","_GTA","lt","_LTP","_LTA","le","_LEP","_LEA","eq","_EQP","_EQA","IntervalTreeNode","mid","leftPoints","rightPoints","count","proto","copy","b","rebuild","intervals","ntree","createIntervalTree","rebuildWithInterval","rebuildWithoutInterval","idx","reportLeftRange","hi","cb","r","reportRightRange","lo","reportRange","compareNumbers","compareBegin","d","compareEnd","pts","sort","leftIntervals","rightIntervals","centerIntervals","s","IntervalTree","root","result","insert","weight","bounds","remove","queryPoint","queryInterval","tproto","PositionCache","defaultCellHeight","unmeasuredCellCount","tallestColumnSize","renderCallback","_intervalTree","_slicedToArray","_leftMap","columnSizeMap","_columnSizeMap","columnHeight","Masonry","eventScrollTop","currentTarget","_getEstimatedTotalHeight","_debounceResetIsScrolling","_positionCache","_invalidateOnUpdateStartIndex","_invalidateOnUpdateStopIndex","_populatePositionCache","_checkInvalidateOnUpdate","_invokeOnScrollCallback","_invokeOnCellsRenderedCallback","_debounceResetIsScrollingId","cellMeasurerCache","overscanByPixels","rowDirection","estimateTotalHeight","shortestColumnSize","measuredCellCount","range","_style","batchSize","_startIndex","_stopIndex","_debounceResetIsScrollingCallback","estimatedColumnCount","_onScrollMemoized","_startIndexMemoized","_stopIndexMemoized","onCellsRendered","cellPositioner","_cellPositioner","setPosition","noop","CellMeasurerCacheDecorator","_cellMeasurerCache","_columnIndexOffset","_rowIndexOffset","_params$columnIndexOf","columnIndexOffset","_params$rowIndexOffse","rowIndexOffset","clear","clearAll","MultiGrid","showHorizontalScrollbar","showVerticalScrollbar","_bottomLeftGrid","_bottomRightGrid","rest","fixedRowCount","fixedColumnCount","scrollInfo","_topLeftGrid","_topRightGrid","_fixedColumnCount","_fixedRowCount","_maybeCalculateCachedStyles","_deferredMeasurementCacheBottomLeftGrid","_deferredMeasurementCacheBottomRightGrid","_deferredMeasurementCacheTopRightGrid","_ref7$columnIndex","_ref7$rowIndex","_ref8$columnIndex","_ref8$rowIndex","adjustedColumnIndex","adjustedRowIndex","_leftGridWidth","_topGridHeight","_this$props7","_this$props8","_prepareForRender","_this$state4","_containerOuterStyle","_containerTopStyle","_renderTopLeftGrid","_renderTopRightGrid","_containerBottomStyle","_renderBottomLeftGrid","_renderBottomRightGrid","_getTopGridHeight","leftGridWidth","_getLeftGridWidth","topGridHeight","resetAll","_this$props9","enableFixedColumnScroll","enableFixedRowScroll","styleBottomLeftGrid","styleBottomRightGrid","styleTopLeftGrid","styleTopRightGrid","sizeChange","_lastRenderedHeight","_lastRenderedWidth","leftSizeChange","_lastRenderedColumnWidth","_lastRenderedFixedColumnCount","topSizeChange","_lastRenderedFixedRowCount","_lastRenderedRowHeight","_lastRenderedStyle","_lastRenderedStyleBottomLeftGrid","_bottomLeftGridStyle","_lastRenderedStyleBottomRightGrid","_bottomRightGridStyle","_lastRenderedStyleTopLeftGrid","_topLeftGridStyle","_lastRenderedStyleTopRightGrid","_topRightGridStyle","hideBottomLeftGridScrollbar","additionalRowCount","_getBottomGridHeight","gridWidth","bottomLeftGrid","_cellRendererBottomLeftGrid","classNameBottomLeftGrid","_onScrollTop","_bottomLeftGridRef","_rowHeightBottomGrid","_cellRendererBottomRightGrid","classNameBottomRightGrid","_columnWidthRightGrid","_onScrollbarPresenceChange","_bottomRightGridRef","_getRightGridWidth","classNameTopLeftGrid","_topLeftGridRef","hideTopRightGridScrollbar","_this$state5","additionalColumnCount","additionalHeight","gridHeight","topRightGrid","_cellRendererTopRightGrid","classNameTopRightGrid","_onScrollLeft","_topRightGridRef","ScrollSync","defaultHeaderRowRenderer","columns","SortDirection","ASC","DESC","SortIndicator","sortDirection","viewBox","fill","defaultHeaderRenderer","dataKey","label","sortBy","showSortIndicator","title","defaultRowRenderer","onRowClick","onRowDoubleClick","onRowMouseOut","onRowMouseOver","onRowRightClick","rowData","a11yProps","onDoubleClick","onMouseOut","onMouseOver","onContextMenu","Column","cellDataGetter","cellData","String","defaultSortDirection","flexGrow","flexShrink","headerRenderer","Table","scrollbarWidth","_createColumn","_createRow","_ref3$columnIndex","_ref3$rowIndex","_Grid","_setScrollbarWidth","disableHeader","gridClassName","headerHeight","headerRowRenderer","rowClassName","rowStyle","availableRowsHeight","rowClass","rowStyleObject","_cachedColumnStyles","toArray","column","flexStyles","_getFlexStyleForColumn","_getHeaderColumns","onColumnClick","_column$props","columnData","headerOnClick","headerOnKeyDown","headerTabIndex","headerAriaSort","headerAriaLabel","headerClassName","headerStyle","onHeaderClick","_column$props2","disableSort","sortEnabled","ReactVirtualized__Table__sortableHeaderColumn","renderedHeader","newSortDirection","rowGetter","flattenedStyle","_getRowHeight","customStyle","flexValue","flex","msFlex","WebkitFlex","_this4","_createHeader","getScrollbarWidth","mountedInstances","originalBodyPointerEvents","disablePointerEventsTimeoutId","enablePointerEventsIfDisabled","enablePointerEventsAfterDelayCallback","__resetIsScrolling","onScrollWindow","maximumTimeout","enablePointerEventsAfterDelay","scrollElement","__handleWindowScrollEvent","registerScrollListener","unregisterScrollListener","isWindow","getBoundingBox","getBoundingClientRect","getDimensions","innerHeight","innerWidth","serverHeight","serverWidth","getPositionOffset","container","documentElement","containerElement","elementRect","containerRect","getScrollOffset","_elementRect","_containerRect","scrollY","scrollX","getWindow","WindowScroller","updatePosition","scrollTo","_positionFromTop","_isMounted","_positionFromLeft","thisNode","ReactDOM","dimensions","_registerResizeListener","prevScrollElement","_unregisterResizeListener","onChildScroll","_onChildScroll"],"mappings":"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","file":"static/js/23.de94d774.chunk.js","sourcesContent":["function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","var _typeof = require(\"../helpers/typeof\");\n\nvar assertThisInitialized = require(\"./assertThisInitialized\");\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}\n\nmodule.exports = _possibleConstructorReturn;","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nmodule.exports = _getPrototypeOf;","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inherits;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar Spinner = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      variant = _ref.variant,\n      animation = _ref.animation,\n      size = _ref.size,\n      children = _ref.children,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"variant\", \"animation\", \"size\", \"children\", \"as\", \"className\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'spinner');\n  var bsSpinnerPrefix = bsPrefix + \"-\" + animation;\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, bsSpinnerPrefix, size && bsSpinnerPrefix + \"-\" + size, variant && \"text-\" + variant)\n  }), children);\n});\nSpinner.displayName = 'Spinner';\nexport default Spinner;","function _extends() {\n  module.exports = _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nmodule.exports = _extends;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useCallback } from 'react';\nimport AbstractNavItem from './AbstractNavItem';\nimport { makeEventKey } from './SelectableContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  variant: undefined,\n  active: false,\n  disabled: false\n};\nvar ListGroupItem = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      active = _ref.active,\n      disabled = _ref.disabled,\n      className = _ref.className,\n      variant = _ref.variant,\n      action = _ref.action,\n      as = _ref.as,\n      eventKey = _ref.eventKey,\n      onClick = _ref.onClick,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"active\", \"disabled\", \"className\", \"variant\", \"action\", \"as\", \"eventKey\", \"onClick\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'list-group-item');\n  var handleClick = useCallback(function (event) {\n    if (disabled) {\n      event.preventDefault();\n      event.stopPropagation();\n      return;\n    }\n\n    if (onClick) onClick(event);\n  }, [disabled, onClick]);\n  return /*#__PURE__*/React.createElement(AbstractNavItem, _extends({\n    ref: ref\n  }, props, {\n    eventKey: makeEventKey(eventKey || null, props.href) // eslint-disable-next-line no-nested-ternary\n    ,\n    as: as || (action ? props.href ? 'a' : 'button' : 'div'),\n    onClick: handleClick,\n    className: classNames(className, bsPrefix, active && 'active', disabled && 'disabled', variant && bsPrefix + \"-\" + variant, action && bsPrefix + \"-action\")\n  }));\n});\nListGroupItem.defaultProps = defaultProps;\nListGroupItem.displayName = 'ListGroupItem';\nexport default ListGroupItem;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport warning from 'warning';\nimport { useUncontrolled } from 'uncontrollable';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractNav from './AbstractNav';\nimport ListGroupItem from './ListGroupItem';\nvar defaultProps = {\n  variant: undefined,\n  horizontal: undefined\n};\nvar ListGroup = React.forwardRef(function (props, ref) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      className = _useUncontrolled.className,\n      initialBsPrefix = _useUncontrolled.bsPrefix,\n      variant = _useUncontrolled.variant,\n      horizontal = _useUncontrolled.horizontal,\n      _useUncontrolled$as = _useUncontrolled.as,\n      as = _useUncontrolled$as === void 0 ? 'div' : _useUncontrolled$as,\n      controlledProps = _objectWithoutPropertiesLoose(_useUncontrolled, [\"className\", \"bsPrefix\", \"variant\", \"horizontal\", \"as\"]);\n\n  var bsPrefix = useBootstrapPrefix(initialBsPrefix, 'list-group');\n  var horizontalVariant;\n\n  if (horizontal) {\n    horizontalVariant = horizontal === true ? 'horizontal' : \"horizontal-\" + horizontal;\n  } else {\n    horizontalVariant = null;\n  }\n\n  process.env.NODE_ENV !== \"production\" ? warning(!(horizontal && variant === 'flush'), '`variant=\"flush\"` and `horizontal` should not be used together.') : void 0;\n  return /*#__PURE__*/React.createElement(AbstractNav, _extends({\n    ref: ref\n  }, controlledProps, {\n    as: as,\n    className: classNames(className, bsPrefix, variant && bsPrefix + \"-\" + variant, horizontalVariant && bsPrefix + \"-\" + horizontalVariant)\n  }));\n});\nListGroup.defaultProps = defaultProps;\nListGroup.displayName = 'ListGroup';\nListGroup.Item = ListGroupItem;\nexport default ListGroup;","var objectWithoutPropertiesLoose = require(\"./objectWithoutPropertiesLoose\");\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nmodule.exports = _objectWithoutProperties;","import canUseDOM from './canUseDOM';\nvar size;\nexport default function scrollbarSize(recalc) {\n  if (!size && size !== 0 || recalc) {\n    if (canUseDOM) {\n      var scrollDiv = document.createElement('div');\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.top = '-9999px';\n      scrollDiv.style.width = '50px';\n      scrollDiv.style.height = '50px';\n      scrollDiv.style.overflow = 'scroll';\n      document.body.appendChild(scrollDiv);\n      size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      document.body.removeChild(scrollDiv);\n    }\n  }\n\n  return size;\n}","/**\n * Detect Element Resize.\n * https://github.com/sdecima/javascript-detect-element-resize\n * Sebastian Decima\n *\n * Forked from version 0.5.3; includes the following modifications:\n * 1) Guard against unsafe 'window' and 'document' references (to support SSR).\n * 2) Defer initialization code via a top-level function wrapper (to support SSR).\n * 3) Avoid unnecessary reflows by not measuring size for scroll events bubbling from children.\n * 4) Add nonce for style element.\n * 5) Added support for injecting custom window object\n **/\nexport default function createDetectElementResize(nonce, hostWindow) {\n  // Check `document` and `window` in case of server-side rendering\n  var _window;\n\n  if (typeof hostWindow !== 'undefined') {\n    _window = hostWindow;\n  } else if (typeof window !== 'undefined') {\n    _window = window;\n  } else if (typeof self !== 'undefined') {\n    _window = self;\n  } else {\n    _window = global;\n  }\n\n  var attachEvent = typeof _window.document !== 'undefined' && _window.document.attachEvent;\n\n  if (!attachEvent) {\n    var requestFrame = function () {\n      var raf = _window.requestAnimationFrame || _window.mozRequestAnimationFrame || _window.webkitRequestAnimationFrame || function (fn) {\n        return _window.setTimeout(fn, 20);\n      };\n\n      return function (fn) {\n        return raf(fn);\n      };\n    }();\n\n    var cancelFrame = function () {\n      var cancel = _window.cancelAnimationFrame || _window.mozCancelAnimationFrame || _window.webkitCancelAnimationFrame || _window.clearTimeout;\n      return function (id) {\n        return cancel(id);\n      };\n    }();\n\n    var resetTriggers = function resetTriggers(element) {\n      var triggers = element.__resizeTriggers__,\n          expand = triggers.firstElementChild,\n          contract = triggers.lastElementChild,\n          expandChild = expand.firstElementChild;\n      contract.scrollLeft = contract.scrollWidth;\n      contract.scrollTop = contract.scrollHeight;\n      expandChild.style.width = expand.offsetWidth + 1 + 'px';\n      expandChild.style.height = expand.offsetHeight + 1 + 'px';\n      expand.scrollLeft = expand.scrollWidth;\n      expand.scrollTop = expand.scrollHeight;\n    };\n\n    var checkTriggers = function checkTriggers(element) {\n      return element.offsetWidth != element.__resizeLast__.width || element.offsetHeight != element.__resizeLast__.height;\n    };\n\n    var scrollListener = function scrollListener(e) {\n      // Don't measure (which forces) reflow for scrolls that happen inside of children!\n      if (e.target.className && typeof e.target.className.indexOf === 'function' && e.target.className.indexOf('contract-trigger') < 0 && e.target.className.indexOf('expand-trigger') < 0) {\n        return;\n      }\n\n      var element = this;\n      resetTriggers(this);\n\n      if (this.__resizeRAF__) {\n        cancelFrame(this.__resizeRAF__);\n      }\n\n      this.__resizeRAF__ = requestFrame(function () {\n        if (checkTriggers(element)) {\n          element.__resizeLast__.width = element.offsetWidth;\n          element.__resizeLast__.height = element.offsetHeight;\n\n          element.__resizeListeners__.forEach(function (fn) {\n            fn.call(element, e);\n          });\n        }\n      });\n    };\n    /* Detect CSS Animations support to detect element display/re-attach */\n\n\n    var animation = false,\n        keyframeprefix = '',\n        animationstartevent = 'animationstart',\n        domPrefixes = 'Webkit Moz O ms'.split(' '),\n        startEvents = 'webkitAnimationStart animationstart oAnimationStart MSAnimationStart'.split(' '),\n        pfx = '';\n    {\n      var elm = _window.document.createElement('fakeelement');\n\n      if (elm.style.animationName !== undefined) {\n        animation = true;\n      }\n\n      if (animation === false) {\n        for (var i = 0; i < domPrefixes.length; i++) {\n          if (elm.style[domPrefixes[i] + 'AnimationName'] !== undefined) {\n            pfx = domPrefixes[i];\n            keyframeprefix = '-' + pfx.toLowerCase() + '-';\n            animationstartevent = startEvents[i];\n            animation = true;\n            break;\n          }\n        }\n      }\n    }\n    var animationName = 'resizeanim';\n    var animationKeyframes = '@' + keyframeprefix + 'keyframes ' + animationName + ' { from { opacity: 0; } to { opacity: 0; } } ';\n    var animationStyle = keyframeprefix + 'animation: 1ms ' + animationName + '; ';\n  }\n\n  var createStyles = function createStyles(doc) {\n    if (!doc.getElementById('detectElementResize')) {\n      //opacity:0 works around a chrome bug https://code.google.com/p/chromium/issues/detail?id=286360\n      var css = (animationKeyframes ? animationKeyframes : '') + '.resize-triggers { ' + (animationStyle ? animationStyle : '') + 'visibility: hidden; opacity: 0; } ' + '.resize-triggers, .resize-triggers > div, .contract-trigger:before { content: \" \"; display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; z-index: -1; } .resize-triggers > div { background: #eee; overflow: auto; } .contract-trigger:before { width: 200%; height: 200%; }',\n          head = doc.head || doc.getElementsByTagName('head')[0],\n          style = doc.createElement('style');\n      style.id = 'detectElementResize';\n      style.type = 'text/css';\n\n      if (nonce != null) {\n        style.setAttribute('nonce', nonce);\n      }\n\n      if (style.styleSheet) {\n        style.styleSheet.cssText = css;\n      } else {\n        style.appendChild(doc.createTextNode(css));\n      }\n\n      head.appendChild(style);\n    }\n  };\n\n  var addResizeListener = function addResizeListener(element, fn) {\n    if (attachEvent) {\n      element.attachEvent('onresize', fn);\n    } else {\n      if (!element.__resizeTriggers__) {\n        var doc = element.ownerDocument;\n\n        var elementStyle = _window.getComputedStyle(element);\n\n        if (elementStyle && elementStyle.position == 'static') {\n          element.style.position = 'relative';\n        }\n\n        createStyles(doc);\n        element.__resizeLast__ = {};\n        element.__resizeListeners__ = [];\n        (element.__resizeTriggers__ = doc.createElement('div')).className = 'resize-triggers';\n        var resizeTriggersHtml = '<div class=\"expand-trigger\"><div></div></div>' + '<div class=\"contract-trigger\"></div>';\n\n        if (window.trustedTypes) {\n          var staticPolicy = trustedTypes.createPolicy('react-virtualized-auto-sizer', {\n            createHTML: function createHTML() {\n              return resizeTriggersHtml;\n            }\n          });\n          element.__resizeTriggers__.innerHTML = staticPolicy.createHTML('');\n        } else {\n          element.__resizeTriggers__.innerHTML = resizeTriggersHtml;\n        }\n\n        element.appendChild(element.__resizeTriggers__);\n        resetTriggers(element);\n        element.addEventListener('scroll', scrollListener, true);\n        /* Listen for a css animation to detect element display/re-attach */\n\n        if (animationstartevent) {\n          element.__resizeTriggers__.__animationListener__ = function animationListener(e) {\n            if (e.animationName == animationName) {\n              resetTriggers(element);\n            }\n          };\n\n          element.__resizeTriggers__.addEventListener(animationstartevent, element.__resizeTriggers__.__animationListener__);\n        }\n      }\n\n      element.__resizeListeners__.push(fn);\n    }\n  };\n\n  var removeResizeListener = function removeResizeListener(element, fn) {\n    if (attachEvent) {\n      element.detachEvent('onresize', fn);\n    } else {\n      element.__resizeListeners__.splice(element.__resizeListeners__.indexOf(fn), 1);\n\n      if (!element.__resizeListeners__.length) {\n        element.removeEventListener('scroll', scrollListener, true);\n\n        if (element.__resizeTriggers__.__animationListener__) {\n          element.__resizeTriggers__.removeEventListener(animationstartevent, element.__resizeTriggers__.__animationListener__);\n\n          element.__resizeTriggers__.__animationListener__ = null;\n        }\n\n        try {\n          element.__resizeTriggers__ = !element.removeChild(element.__resizeTriggers__);\n        } catch (e) {// Preact compat; see developit/preact-compat/issues/228\n        }\n      }\n    }\n  };\n\n  return {\n    addResizeListener: addResizeListener,\n    removeResizeListener: removeResizeListener\n  };\n}","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;","function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nmodule.exports = _objectWithoutPropertiesLoose;","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;","var arrayWithHoles = require(\"./arrayWithHoles\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableRest = require(\"./nonIterableRest\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;","function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableRest;","function toVal(mix) {\n\tvar k, y, str='';\n\n\tif (typeof mix === 'string' || typeof mix === 'number') {\n\t\tstr += mix;\n\t} else if (typeof mix === 'object') {\n\t\tif (Array.isArray(mix)) {\n\t\t\tfor (k=0; k < mix.length; k++) {\n\t\t\t\tif (mix[k]) {\n\t\t\t\t\tif (y = toVal(mix[k])) {\n\t\t\t\t\t\tstr && (str += ' ');\n\t\t\t\t\t\tstr += y;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor (k in mix) {\n\t\t\t\tif (mix[k]) {\n\t\t\t\t\tstr && (str += ' ');\n\t\t\t\t\tstr += k;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn str;\n}\n\nexport default function () {\n\tvar i=0, tmp, x, str='';\n\twhile (i < arguments.length) {\n\t\tif (tmp = arguments[i++]) {\n\t\t\tif (x = toVal(tmp)) {\n\t\t\t\tstr && (str += ' ');\n\t\t\t\tstr += x\n\t\t\t}\n\t\t}\n\t}\n\treturn str;\n}\n","/**\n * Helper method that determines when to recalculate row or column metadata.\n */\nexport default function calculateSizeAndPositionDataAndUpdateScrollOffset(_ref) {\n  var cellCount = _ref.cellCount,\n      cellSize = _ref.cellSize,\n      computeMetadataCallback = _ref.computeMetadataCallback,\n      computeMetadataCallbackProps = _ref.computeMetadataCallbackProps,\n      nextCellsCount = _ref.nextCellsCount,\n      nextCellSize = _ref.nextCellSize,\n      nextScrollToIndex = _ref.nextScrollToIndex,\n      scrollToIndex = _ref.scrollToIndex,\n      updateScrollOffsetForScrollToIndex = _ref.updateScrollOffsetForScrollToIndex;\n\n  // Don't compare cell sizes if they are functions because inline functions would cause infinite loops.\n  // In that event users should use the manual recompute methods to inform of changes.\n  if (cellCount !== nextCellsCount || (typeof cellSize === 'number' || typeof nextCellSize === 'number') && cellSize !== nextCellSize) {\n    computeMetadataCallback(computeMetadataCallbackProps); // Updated cell metadata may have hidden the previous scrolled-to item.\n    // In this case we should also update the scrollTop to ensure it stays visible.\n\n    if (scrollToIndex >= 0 && scrollToIndex === nextScrollToIndex) {\n      updateScrollOffsetForScrollToIndex();\n    }\n  }\n}","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\n/**\n * Just-in-time calculates and caches size and position information for a collection of cells.\n */\nvar CellSizeAndPositionManager =\n/*#__PURE__*/\nfunction () {\n  // Cache of size and position data for cells, mapped by cell index.\n  // Note that invalid values may exist in this map so only rely on cells up to this._lastMeasuredIndex\n  // Measurements for cells up to this index can be trusted; cells afterward should be estimated.\n  // Used in deferred mode to track which cells have been queued for measurement.\n  function CellSizeAndPositionManager(_ref) {\n    var cellCount = _ref.cellCount,\n        cellSizeGetter = _ref.cellSizeGetter,\n        estimatedCellSize = _ref.estimatedCellSize;\n\n    _classCallCheck(this, CellSizeAndPositionManager);\n\n    _defineProperty(this, \"_cellSizeAndPositionData\", {});\n\n    _defineProperty(this, \"_lastMeasuredIndex\", -1);\n\n    _defineProperty(this, \"_lastBatchedIndex\", -1);\n\n    _defineProperty(this, \"_cellCount\", void 0);\n\n    _defineProperty(this, \"_cellSizeGetter\", void 0);\n\n    _defineProperty(this, \"_estimatedCellSize\", void 0);\n\n    this._cellSizeGetter = cellSizeGetter;\n    this._cellCount = cellCount;\n    this._estimatedCellSize = estimatedCellSize;\n  }\n\n  _createClass(CellSizeAndPositionManager, [{\n    key: \"areOffsetsAdjusted\",\n    value: function areOffsetsAdjusted() {\n      return false;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure(_ref2) {\n      var cellCount = _ref2.cellCount,\n          estimatedCellSize = _ref2.estimatedCellSize,\n          cellSizeGetter = _ref2.cellSizeGetter;\n      this._cellCount = cellCount;\n      this._estimatedCellSize = estimatedCellSize;\n      this._cellSizeGetter = cellSizeGetter;\n    }\n  }, {\n    key: \"getCellCount\",\n    value: function getCellCount() {\n      return this._cellCount;\n    }\n  }, {\n    key: \"getEstimatedCellSize\",\n    value: function getEstimatedCellSize() {\n      return this._estimatedCellSize;\n    }\n  }, {\n    key: \"getLastMeasuredIndex\",\n    value: function getLastMeasuredIndex() {\n      return this._lastMeasuredIndex;\n    }\n  }, {\n    key: \"getOffsetAdjustment\",\n    value: function getOffsetAdjustment() {\n      return 0;\n    }\n    /**\n     * This method returns the size and position for the cell at the specified index.\n     * It just-in-time calculates (or used cached values) for cells leading up to the index.\n     */\n\n  }, {\n    key: \"getSizeAndPositionOfCell\",\n    value: function getSizeAndPositionOfCell(index) {\n      if (index < 0 || index >= this._cellCount) {\n        throw Error(\"Requested index \".concat(index, \" is outside of range 0..\").concat(this._cellCount));\n      }\n\n      if (index > this._lastMeasuredIndex) {\n        var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n        var offset = lastMeasuredCellSizeAndPosition.offset + lastMeasuredCellSizeAndPosition.size;\n\n        for (var i = this._lastMeasuredIndex + 1; i <= index; i++) {\n          var size = this._cellSizeGetter({\n            index: i\n          }); // undefined or NaN probably means a logic error in the size getter.\n          // null means we're using CellMeasurer and haven't yet measured a given index.\n\n\n          if (size === undefined || isNaN(size)) {\n            throw Error(\"Invalid size returned for cell \".concat(i, \" of value \").concat(size));\n          } else if (size === null) {\n            this._cellSizeAndPositionData[i] = {\n              offset: offset,\n              size: 0\n            };\n            this._lastBatchedIndex = index;\n          } else {\n            this._cellSizeAndPositionData[i] = {\n              offset: offset,\n              size: size\n            };\n            offset += size;\n            this._lastMeasuredIndex = index;\n          }\n        }\n      }\n\n      return this._cellSizeAndPositionData[index];\n    }\n  }, {\n    key: \"getSizeAndPositionOfLastMeasuredCell\",\n    value: function getSizeAndPositionOfLastMeasuredCell() {\n      return this._lastMeasuredIndex >= 0 ? this._cellSizeAndPositionData[this._lastMeasuredIndex] : {\n        offset: 0,\n        size: 0\n      };\n    }\n    /**\n     * Total size of all cells being measured.\n     * This value will be completely estimated initially.\n     * As cells are measured, the estimate will be updated.\n     */\n\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n      var totalSizeOfMeasuredCells = lastMeasuredCellSizeAndPosition.offset + lastMeasuredCellSizeAndPosition.size;\n      var numUnmeasuredCells = this._cellCount - this._lastMeasuredIndex - 1;\n      var totalSizeOfUnmeasuredCells = numUnmeasuredCells * this._estimatedCellSize;\n      return totalSizeOfMeasuredCells + totalSizeOfUnmeasuredCells;\n    }\n    /**\n     * Determines a new offset that ensures a certain cell is visible, given the current offset.\n     * If the cell is already visible then the current offset will be returned.\n     * If the current offset is too great or small, it will be adjusted just enough to ensure the specified index is visible.\n     *\n     * @param align Desired alignment within container; one of \"auto\" (default), \"start\", or \"end\"\n     * @param containerSize Size (width or height) of the container viewport\n     * @param currentOffset Container's current (x or y) offset\n     * @param totalSize Total size (width or height) of all cells\n     * @return Offset to use to ensure the specified cell is visible\n     */\n\n  }, {\n    key: \"getUpdatedOffsetForIndex\",\n    value: function getUpdatedOffsetForIndex(_ref3) {\n      var _ref3$align = _ref3.align,\n          align = _ref3$align === void 0 ? 'auto' : _ref3$align,\n          containerSize = _ref3.containerSize,\n          currentOffset = _ref3.currentOffset,\n          targetIndex = _ref3.targetIndex;\n\n      if (containerSize <= 0) {\n        return 0;\n      }\n\n      var datum = this.getSizeAndPositionOfCell(targetIndex);\n      var maxOffset = datum.offset;\n      var minOffset = maxOffset - containerSize + datum.size;\n      var idealOffset;\n\n      switch (align) {\n        case 'start':\n          idealOffset = maxOffset;\n          break;\n\n        case 'end':\n          idealOffset = minOffset;\n          break;\n\n        case 'center':\n          idealOffset = maxOffset - (containerSize - datum.size) / 2;\n          break;\n\n        default:\n          idealOffset = Math.max(minOffset, Math.min(maxOffset, currentOffset));\n          break;\n      }\n\n      var totalSize = this.getTotalSize();\n      return Math.max(0, Math.min(totalSize - containerSize, idealOffset));\n    }\n  }, {\n    key: \"getVisibleCellRange\",\n    value: function getVisibleCellRange(params) {\n      var containerSize = params.containerSize,\n          offset = params.offset;\n      var totalSize = this.getTotalSize();\n\n      if (totalSize === 0) {\n        return {};\n      }\n\n      var maxOffset = offset + containerSize;\n\n      var start = this._findNearestCell(offset);\n\n      var datum = this.getSizeAndPositionOfCell(start);\n      offset = datum.offset + datum.size;\n      var stop = start;\n\n      while (offset < maxOffset && stop < this._cellCount - 1) {\n        stop++;\n        offset += this.getSizeAndPositionOfCell(stop).size;\n      }\n\n      return {\n        start: start,\n        stop: stop\n      };\n    }\n    /**\n     * Clear all cached values for cells after the specified index.\n     * This method should be called for any cell that has changed its size.\n     * It will not immediately perform any calculations; they'll be performed the next time getSizeAndPositionOfCell() is called.\n     */\n\n  }, {\n    key: \"resetCell\",\n    value: function resetCell(index) {\n      this._lastMeasuredIndex = Math.min(this._lastMeasuredIndex, index - 1);\n    }\n  }, {\n    key: \"_binarySearch\",\n    value: function _binarySearch(high, low, offset) {\n      while (low <= high) {\n        var middle = low + Math.floor((high - low) / 2);\n        var currentOffset = this.getSizeAndPositionOfCell(middle).offset;\n\n        if (currentOffset === offset) {\n          return middle;\n        } else if (currentOffset < offset) {\n          low = middle + 1;\n        } else if (currentOffset > offset) {\n          high = middle - 1;\n        }\n      }\n\n      if (low > 0) {\n        return low - 1;\n      } else {\n        return 0;\n      }\n    }\n  }, {\n    key: \"_exponentialSearch\",\n    value: function _exponentialSearch(index, offset) {\n      var interval = 1;\n\n      while (index < this._cellCount && this.getSizeAndPositionOfCell(index).offset < offset) {\n        index += interval;\n        interval *= 2;\n      }\n\n      return this._binarySearch(Math.min(index, this._cellCount - 1), Math.floor(index / 2), offset);\n    }\n    /**\n     * Searches for the cell (index) nearest the specified offset.\n     *\n     * If no exact match is found the next lowest cell index will be returned.\n     * This allows partially visible cells (with offsets just before/above the fold) to be visible.\n     */\n\n  }, {\n    key: \"_findNearestCell\",\n    value: function _findNearestCell(offset) {\n      if (isNaN(offset)) {\n        throw Error(\"Invalid offset \".concat(offset, \" specified\"));\n      } // Our search algorithms find the nearest match at or below the specified offset.\n      // So make sure the offset is at least 0 or no match will be found.\n\n\n      offset = Math.max(0, offset);\n      var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n      var lastMeasuredIndex = Math.max(0, this._lastMeasuredIndex);\n\n      if (lastMeasuredCellSizeAndPosition.offset >= offset) {\n        // If we've already measured cells within this range just use a binary search as it's faster.\n        return this._binarySearch(lastMeasuredIndex, 0, offset);\n      } else {\n        // If we haven't yet measured this high, fallback to an exponential search with an inner binary search.\n        // The exponential search avoids pre-computing sizes for the full set of cells as a binary search would.\n        // The overall complexity for this approach is O(log n).\n        return this._exponentialSearch(lastMeasuredIndex, offset);\n      }\n    }\n  }]);\n\n  return CellSizeAndPositionManager;\n}();\n\nexport { CellSizeAndPositionManager as default };\nimport { bpfrpt_proptype_Alignment } from \"../types\";\nimport { bpfrpt_proptype_CellSizeGetter } from \"../types\";\nimport { bpfrpt_proptype_VisibleCellRange } from \"../types\";","var DEFAULT_MAX_ELEMENT_SIZE = 1500000;\nvar CHROME_MAX_ELEMENT_SIZE = 1.67771e7;\n\nvar isBrowser = function isBrowser() {\n  return typeof window !== 'undefined';\n};\n\nvar isChrome = function isChrome() {\n  return !!window.chrome;\n};\n\nexport var getMaxElementSize = function getMaxElementSize() {\n  if (isBrowser()) {\n    if (isChrome()) {\n      return CHROME_MAX_ELEMENT_SIZE;\n    }\n  }\n\n  return DEFAULT_MAX_ELEMENT_SIZE;\n};","import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport CellSizeAndPositionManager from './CellSizeAndPositionManager';\nimport { getMaxElementSize } from './maxElementSize.js';\n\n/**\n * Extends CellSizeAndPositionManager and adds scaling behavior for lists that are too large to fit within a browser's native limits.\n */\nvar ScalingCellSizeAndPositionManager =\n/*#__PURE__*/\nfunction () {\n  function ScalingCellSizeAndPositionManager(_ref) {\n    var _ref$maxScrollSize = _ref.maxScrollSize,\n        maxScrollSize = _ref$maxScrollSize === void 0 ? getMaxElementSize() : _ref$maxScrollSize,\n        params = _objectWithoutProperties(_ref, [\"maxScrollSize\"]);\n\n    _classCallCheck(this, ScalingCellSizeAndPositionManager);\n\n    _defineProperty(this, \"_cellSizeAndPositionManager\", void 0);\n\n    _defineProperty(this, \"_maxScrollSize\", void 0);\n\n    // Favor composition over inheritance to simplify IE10 support\n    this._cellSizeAndPositionManager = new CellSizeAndPositionManager(params);\n    this._maxScrollSize = maxScrollSize;\n  }\n\n  _createClass(ScalingCellSizeAndPositionManager, [{\n    key: \"areOffsetsAdjusted\",\n    value: function areOffsetsAdjusted() {\n      return this._cellSizeAndPositionManager.getTotalSize() > this._maxScrollSize;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure(params) {\n      this._cellSizeAndPositionManager.configure(params);\n    }\n  }, {\n    key: \"getCellCount\",\n    value: function getCellCount() {\n      return this._cellSizeAndPositionManager.getCellCount();\n    }\n  }, {\n    key: \"getEstimatedCellSize\",\n    value: function getEstimatedCellSize() {\n      return this._cellSizeAndPositionManager.getEstimatedCellSize();\n    }\n  }, {\n    key: \"getLastMeasuredIndex\",\n    value: function getLastMeasuredIndex() {\n      return this._cellSizeAndPositionManager.getLastMeasuredIndex();\n    }\n    /**\n     * Number of pixels a cell at the given position (offset) should be shifted in order to fit within the scaled container.\n     * The offset passed to this function is scaled (safe) as well.\n     */\n\n  }, {\n    key: \"getOffsetAdjustment\",\n    value: function getOffsetAdjustment(_ref2) {\n      var containerSize = _ref2.containerSize,\n          offset = _ref2.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      var offsetPercentage = this._getOffsetPercentage({\n        containerSize: containerSize,\n        offset: offset,\n        totalSize: safeTotalSize\n      });\n\n      return Math.round(offsetPercentage * (safeTotalSize - totalSize));\n    }\n  }, {\n    key: \"getSizeAndPositionOfCell\",\n    value: function getSizeAndPositionOfCell(index) {\n      return this._cellSizeAndPositionManager.getSizeAndPositionOfCell(index);\n    }\n  }, {\n    key: \"getSizeAndPositionOfLastMeasuredCell\",\n    value: function getSizeAndPositionOfLastMeasuredCell() {\n      return this._cellSizeAndPositionManager.getSizeAndPositionOfLastMeasuredCell();\n    }\n    /** See CellSizeAndPositionManager#getTotalSize */\n\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      return Math.min(this._maxScrollSize, this._cellSizeAndPositionManager.getTotalSize());\n    }\n    /** See CellSizeAndPositionManager#getUpdatedOffsetForIndex */\n\n  }, {\n    key: \"getUpdatedOffsetForIndex\",\n    value: function getUpdatedOffsetForIndex(_ref3) {\n      var _ref3$align = _ref3.align,\n          align = _ref3$align === void 0 ? 'auto' : _ref3$align,\n          containerSize = _ref3.containerSize,\n          currentOffset = _ref3.currentOffset,\n          targetIndex = _ref3.targetIndex;\n      currentOffset = this._safeOffsetToOffset({\n        containerSize: containerSize,\n        offset: currentOffset\n      });\n\n      var offset = this._cellSizeAndPositionManager.getUpdatedOffsetForIndex({\n        align: align,\n        containerSize: containerSize,\n        currentOffset: currentOffset,\n        targetIndex: targetIndex\n      });\n\n      return this._offsetToSafeOffset({\n        containerSize: containerSize,\n        offset: offset\n      });\n    }\n    /** See CellSizeAndPositionManager#getVisibleCellRange */\n\n  }, {\n    key: \"getVisibleCellRange\",\n    value: function getVisibleCellRange(_ref4) {\n      var containerSize = _ref4.containerSize,\n          offset = _ref4.offset;\n      offset = this._safeOffsetToOffset({\n        containerSize: containerSize,\n        offset: offset\n      });\n      return this._cellSizeAndPositionManager.getVisibleCellRange({\n        containerSize: containerSize,\n        offset: offset\n      });\n    }\n  }, {\n    key: \"resetCell\",\n    value: function resetCell(index) {\n      this._cellSizeAndPositionManager.resetCell(index);\n    }\n  }, {\n    key: \"_getOffsetPercentage\",\n    value: function _getOffsetPercentage(_ref5) {\n      var containerSize = _ref5.containerSize,\n          offset = _ref5.offset,\n          totalSize = _ref5.totalSize;\n      return totalSize <= containerSize ? 0 : offset / (totalSize - containerSize);\n    }\n  }, {\n    key: \"_offsetToSafeOffset\",\n    value: function _offsetToSafeOffset(_ref6) {\n      var containerSize = _ref6.containerSize,\n          offset = _ref6.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      if (totalSize === safeTotalSize) {\n        return offset;\n      } else {\n        var offsetPercentage = this._getOffsetPercentage({\n          containerSize: containerSize,\n          offset: offset,\n          totalSize: totalSize\n        });\n\n        return Math.round(offsetPercentage * (safeTotalSize - containerSize));\n      }\n    }\n  }, {\n    key: \"_safeOffsetToOffset\",\n    value: function _safeOffsetToOffset(_ref7) {\n      var containerSize = _ref7.containerSize,\n          offset = _ref7.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      if (totalSize === safeTotalSize) {\n        return offset;\n      } else {\n        var offsetPercentage = this._getOffsetPercentage({\n          containerSize: containerSize,\n          offset: offset,\n          totalSize: safeTotalSize\n        });\n\n        return Math.round(offsetPercentage * (totalSize - containerSize));\n      }\n    }\n  }]);\n\n  return ScalingCellSizeAndPositionManager;\n}();\n\nexport { ScalingCellSizeAndPositionManager as default };\nimport { bpfrpt_proptype_Alignment } from \"../types\";\nimport { bpfrpt_proptype_CellSizeGetter } from \"../types\";\nimport { bpfrpt_proptype_VisibleCellRange } from \"../types\";","/**\n * Helper utility that updates the specified callback whenever any of the specified indices have changed.\n */\nexport default function createCallbackMemoizer() {\n  var requireAllKeys = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  var cachedIndices = {};\n  return function (_ref) {\n    var callback = _ref.callback,\n        indices = _ref.indices;\n    var keys = Object.keys(indices);\n    var allInitialized = !requireAllKeys || keys.every(function (key) {\n      var value = indices[key];\n      return Array.isArray(value) ? value.length > 0 : value >= 0;\n    });\n    var indexChanged = keys.length !== Object.keys(cachedIndices).length || keys.some(function (key) {\n      var cachedValue = cachedIndices[key];\n      var value = indices[key];\n      return Array.isArray(value) ? cachedValue.join(',') !== value.join(',') : cachedValue !== value;\n    });\n    cachedIndices = indices;\n\n    if (allInitialized && indexChanged) {\n      callback(indices);\n    }\n  };\n}","import ScalingCellSizeAndPositionManager from './ScalingCellSizeAndPositionManager.js';\n/**\n * Helper function that determines when to update scroll offsets to ensure that a scroll-to-index remains visible.\n * This function also ensures that the scroll ofset isn't past the last column/row of cells.\n */\n\nexport default function updateScrollIndexHelper(_ref) {\n  var cellSize = _ref.cellSize,\n      cellSizeAndPositionManager = _ref.cellSizeAndPositionManager,\n      previousCellsCount = _ref.previousCellsCount,\n      previousCellSize = _ref.previousCellSize,\n      previousScrollToAlignment = _ref.previousScrollToAlignment,\n      previousScrollToIndex = _ref.previousScrollToIndex,\n      previousSize = _ref.previousSize,\n      scrollOffset = _ref.scrollOffset,\n      scrollToAlignment = _ref.scrollToAlignment,\n      scrollToIndex = _ref.scrollToIndex,\n      size = _ref.size,\n      sizeJustIncreasedFromZero = _ref.sizeJustIncreasedFromZero,\n      updateScrollIndexCallback = _ref.updateScrollIndexCallback;\n  var cellCount = cellSizeAndPositionManager.getCellCount();\n  var hasScrollToIndex = scrollToIndex >= 0 && scrollToIndex < cellCount;\n  var sizeHasChanged = size !== previousSize || sizeJustIncreasedFromZero || !previousCellSize || typeof cellSize === 'number' && cellSize !== previousCellSize; // If we have a new scroll target OR if height/row-height has changed,\n  // We should ensure that the scroll target is visible.\n\n  if (hasScrollToIndex && (sizeHasChanged || scrollToAlignment !== previousScrollToAlignment || scrollToIndex !== previousScrollToIndex)) {\n    updateScrollIndexCallback(scrollToIndex); // If we don't have a selected item but list size or number of children have decreased,\n    // Make sure we aren't scrolled too far past the current content.\n  } else if (!hasScrollToIndex && cellCount > 0 && (size < previousSize || cellCount < previousCellsCount)) {\n    // We need to ensure that the current scroll offset is still within the collection's range.\n    // To do this, we don't need to measure everything; CellMeasurer would perform poorly.\n    // Just check to make sure we're still okay.\n    // Only adjust the scroll position if we've scrolled below the last set of rows.\n    if (scrollOffset > cellSizeAndPositionManager.getTotalSize() - size) {\n      updateScrollIndexCallback(cellCount - 1);\n    }\n  }\n}\nimport { bpfrpt_proptype_Alignment } from \"../types\";\nimport { bpfrpt_proptype_CellSize } from \"../types\";","// Properly handle server-side rendering.\nvar win;\n\nif (typeof window !== 'undefined') {\n  win = window;\n} else if (typeof self !== 'undefined') {\n  win = self;\n} else {\n  win = {};\n} // requestAnimationFrame() shim by Paul Irish\n// http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n\n\nvar request = win.requestAnimationFrame || win.webkitRequestAnimationFrame || win.mozRequestAnimationFrame || win.oRequestAnimationFrame || win.msRequestAnimationFrame || function (callback) {\n  return win.setTimeout(callback, 1000 / 60);\n};\n\nvar cancel = win.cancelAnimationFrame || win.webkitCancelAnimationFrame || win.mozCancelAnimationFrame || win.oCancelAnimationFrame || win.msCancelAnimationFrame || function (id) {\n  win.clearTimeout(id);\n};\n\nexport var raf = request;\nexport var caf = cancel;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport calculateSizeAndPositionDataAndUpdateScrollOffset from './utils/calculateSizeAndPositionDataAndUpdateScrollOffset';\nimport ScalingCellSizeAndPositionManager from './utils/ScalingCellSizeAndPositionManager';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\nimport defaultOverscanIndicesGetter, { SCROLL_DIRECTION_BACKWARD, SCROLL_DIRECTION_FORWARD } from './defaultOverscanIndicesGetter';\nimport updateScrollIndexHelper from './utils/updateScrollIndexHelper';\nimport defaultCellRangeRenderer from './defaultCellRangeRenderer';\nimport scrollbarSize from 'dom-helpers/scrollbarSize';\nimport { polyfill } from 'react-lifecycles-compat';\nimport { requestAnimationTimeout, cancelAnimationTimeout } from '../utils/requestAnimationTimeout';\n/**\n * Specifies the number of milliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nexport var DEFAULT_SCROLLING_RESET_TIME_INTERVAL = 150;\n/**\n * Controls whether the Grid updates the DOM element's scrollLeft/scrollTop based on the current state or just observes it.\n * This prevents Grid from interrupting mouse-wheel animations (see issue #2).\n */\n\nvar SCROLL_POSITION_CHANGE_REASONS = {\n  OBSERVED: 'observed',\n  REQUESTED: 'requested'\n};\n\nvar renderNull = function renderNull() {\n  return null;\n};\n\n/**\n * Renders tabular data with virtualization along the vertical and horizontal axes.\n * Row heights and column widths must be known ahead of time and specified as properties.\n */\nvar Grid = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Grid, _React$PureComponent);\n\n  // Invokes onSectionRendered callback only when start/stop row or column indices change\n  function Grid(props) {\n    var _this;\n\n    _classCallCheck(this, Grid);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Grid).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"_onGridRenderedMemoizer\", createCallbackMemoizer());\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollMemoizer\", createCallbackMemoizer(false));\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateColumnIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateRowIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_recomputeScrollLeftFlag\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_recomputeScrollTopFlag\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_horizontalScrollBarSize\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_verticalScrollBarSize\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_scrollbarPresenceChanged\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_scrollingContainer\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_childrenToDisplay\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStartIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStopIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStartIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStopIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedColumnStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedColumnStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedRowStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedRowStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_initialScrollTop\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_initialScrollLeft\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_disablePointerEventsTimeoutId\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_styleCache\", {});\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellCache\", {});\n\n    _defineProperty(_assertThisInitialized(_this), \"_debounceScrollEndedCallback\", function () {\n      _this._disablePointerEventsTimeoutId = null; // isScrolling is used to determine if we reset styleCache\n\n      _this.setState({\n        isScrolling: false,\n        needToResetStyleCache: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_invokeOnGridRenderedHelper\", function () {\n      var onSectionRendered = _this.props.onSectionRendered;\n\n      _this._onGridRenderedMemoizer({\n        callback: onSectionRendered,\n        indices: {\n          columnOverscanStartIndex: _this._columnStartIndex,\n          columnOverscanStopIndex: _this._columnStopIndex,\n          columnStartIndex: _this._renderedColumnStartIndex,\n          columnStopIndex: _this._renderedColumnStopIndex,\n          rowOverscanStartIndex: _this._rowStartIndex,\n          rowOverscanStopIndex: _this._rowStopIndex,\n          rowStartIndex: _this._renderedRowStartIndex,\n          rowStopIndex: _this._renderedRowStopIndex\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (event) {\n      // In certain edge-cases React dispatches an onScroll event with an invalid target.scrollLeft / target.scrollTop.\n      // This invalid event can be detected by comparing event.target to this component's scrollable DOM element.\n      // See issue #404 for more information.\n      if (event.target === _this._scrollingContainer) {\n        _this.handleScrollEvent(event.target);\n      }\n    });\n\n    var columnSizeAndPositionManager = new ScalingCellSizeAndPositionManager({\n      cellCount: props.columnCount,\n      cellSizeGetter: function cellSizeGetter(params) {\n        return Grid._wrapSizeGetter(props.columnWidth)(params);\n      },\n      estimatedCellSize: Grid._getEstimatedColumnSize(props)\n    });\n    var rowSizeAndPositionManager = new ScalingCellSizeAndPositionManager({\n      cellCount: props.rowCount,\n      cellSizeGetter: function cellSizeGetter(params) {\n        return Grid._wrapSizeGetter(props.rowHeight)(params);\n      },\n      estimatedCellSize: Grid._getEstimatedRowSize(props)\n    });\n    _this.state = {\n      instanceProps: {\n        columnSizeAndPositionManager: columnSizeAndPositionManager,\n        rowSizeAndPositionManager: rowSizeAndPositionManager,\n        prevColumnWidth: props.columnWidth,\n        prevRowHeight: props.rowHeight,\n        prevColumnCount: props.columnCount,\n        prevRowCount: props.rowCount,\n        prevIsScrolling: props.isScrolling === true,\n        prevScrollToColumn: props.scrollToColumn,\n        prevScrollToRow: props.scrollToRow,\n        scrollbarSize: 0,\n        scrollbarSizeMeasured: false\n      },\n      isScrolling: false,\n      scrollDirectionHorizontal: SCROLL_DIRECTION_FORWARD,\n      scrollDirectionVertical: SCROLL_DIRECTION_FORWARD,\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollPositionChangeReason: null,\n      needToResetStyleCache: false\n    };\n\n    if (props.scrollToRow > 0) {\n      _this._initialScrollTop = _this._getCalculatedScrollTop(props, _this.state);\n    }\n\n    if (props.scrollToColumn > 0) {\n      _this._initialScrollLeft = _this._getCalculatedScrollLeft(props, _this.state);\n    }\n\n    return _this;\n  }\n  /**\n   * Gets offsets for a given cell and alignment.\n   */\n\n\n  _createClass(Grid, [{\n    key: \"getOffsetForCell\",\n    value: function getOffsetForCell() {\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref$alignment = _ref.alignment,\n          alignment = _ref$alignment === void 0 ? this.props.scrollToAlignment : _ref$alignment,\n          _ref$columnIndex = _ref.columnIndex,\n          columnIndex = _ref$columnIndex === void 0 ? this.props.scrollToColumn : _ref$columnIndex,\n          _ref$rowIndex = _ref.rowIndex,\n          rowIndex = _ref$rowIndex === void 0 ? this.props.scrollToRow : _ref$rowIndex;\n\n      var offsetProps = _objectSpread({}, this.props, {\n        scrollToAlignment: alignment,\n        scrollToColumn: columnIndex,\n        scrollToRow: rowIndex\n      });\n\n      return {\n        scrollLeft: this._getCalculatedScrollLeft(offsetProps),\n        scrollTop: this._getCalculatedScrollTop(offsetProps)\n      };\n    }\n    /**\n     * Gets estimated total rows' height.\n     */\n\n  }, {\n    key: \"getTotalRowsHeight\",\n    value: function getTotalRowsHeight() {\n      return this.state.instanceProps.rowSizeAndPositionManager.getTotalSize();\n    }\n    /**\n     * Gets estimated total columns' width.\n     */\n\n  }, {\n    key: \"getTotalColumnsWidth\",\n    value: function getTotalColumnsWidth() {\n      return this.state.instanceProps.columnSizeAndPositionManager.getTotalSize();\n    }\n    /**\n     * This method handles a scroll event originating from an external scroll control.\n     * It's an advanced method and should probably not be used unless you're implementing a custom scroll-bar solution.\n     */\n\n  }, {\n    key: \"handleScrollEvent\",\n    value: function handleScrollEvent(_ref2) {\n      var _ref2$scrollLeft = _ref2.scrollLeft,\n          scrollLeftParam = _ref2$scrollLeft === void 0 ? 0 : _ref2$scrollLeft,\n          _ref2$scrollTop = _ref2.scrollTop,\n          scrollTopParam = _ref2$scrollTop === void 0 ? 0 : _ref2$scrollTop;\n\n      // On iOS, we can arrive at negative offsets by swiping past the start.\n      // To prevent flicker here, we make playing in the negative offset zone cause nothing to happen.\n      if (scrollTopParam < 0) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      this._debounceScrollEnded();\n\n      var _this$props = this.props,\n          autoHeight = _this$props.autoHeight,\n          autoWidth = _this$props.autoWidth,\n          height = _this$props.height,\n          width = _this$props.width;\n      var instanceProps = this.state.instanceProps; // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scroll offsets never exceed their bounds.\n\n      var scrollbarSize = instanceProps.scrollbarSize;\n      var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n      var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n      var scrollLeft = Math.min(Math.max(0, totalColumnsWidth - width + scrollbarSize), scrollLeftParam);\n      var scrollTop = Math.min(Math.max(0, totalRowsHeight - height + scrollbarSize), scrollTopParam); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n      if (this.state.scrollLeft !== scrollLeft || this.state.scrollTop !== scrollTop) {\n        // Track scrolling direction so we can more efficiently overscan rows to reduce empty space around the edges while scrolling.\n        // Don't change direction for an axis unless scroll offset has changed.\n        var scrollDirectionHorizontal = scrollLeft !== this.state.scrollLeft ? scrollLeft > this.state.scrollLeft ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD : this.state.scrollDirectionHorizontal;\n        var scrollDirectionVertical = scrollTop !== this.state.scrollTop ? scrollTop > this.state.scrollTop ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD : this.state.scrollDirectionVertical;\n        var newState = {\n          isScrolling: true,\n          scrollDirectionHorizontal: scrollDirectionHorizontal,\n          scrollDirectionVertical: scrollDirectionVertical,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.OBSERVED\n        };\n\n        if (!autoHeight) {\n          newState.scrollTop = scrollTop;\n        }\n\n        if (!autoWidth) {\n          newState.scrollLeft = scrollLeft;\n        }\n\n        newState.needToResetStyleCache = false;\n        this.setState(newState);\n      }\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        totalColumnsWidth: totalColumnsWidth,\n        totalRowsHeight: totalRowsHeight\n      });\n    }\n    /**\n     * Invalidate Grid size and recompute visible cells.\n     * This is a deferred wrapper for recomputeGridSize().\n     * It sets a flag to be evaluated on cDM/cDU to avoid unnecessary renders.\n     * This method is intended for advanced use-cases like CellMeasurer.\n     */\n    // @TODO (bvaughn) Add automated test coverage for this.\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref3) {\n      var columnIndex = _ref3.columnIndex,\n          rowIndex = _ref3.rowIndex;\n      this._deferredInvalidateColumnIndex = typeof this._deferredInvalidateColumnIndex === 'number' ? Math.min(this._deferredInvalidateColumnIndex, columnIndex) : columnIndex;\n      this._deferredInvalidateRowIndex = typeof this._deferredInvalidateRowIndex === 'number' ? Math.min(this._deferredInvalidateRowIndex, rowIndex) : rowIndex;\n    }\n    /**\n     * Pre-measure all columns and rows in a Grid.\n     * Typically cells are only measured as needed and estimated sizes are used for cells that have not yet been measured.\n     * This method ensures that the next call to getTotalSize() returns an exact size (as opposed to just an estimated one).\n     */\n\n  }, {\n    key: \"measureAllCells\",\n    value: function measureAllCells() {\n      var _this$props2 = this.props,\n          columnCount = _this$props2.columnCount,\n          rowCount = _this$props2.rowCount;\n      var instanceProps = this.state.instanceProps;\n      instanceProps.columnSizeAndPositionManager.getSizeAndPositionOfCell(columnCount - 1);\n      instanceProps.rowSizeAndPositionManager.getSizeAndPositionOfCell(rowCount - 1);\n    }\n    /**\n     * Forced recompute of row heights and column widths.\n     * This function should be called if dynamic column or row sizes have changed but nothing else has.\n     * Since Grid only receives :columnCount and :rowCount it has no way of detecting when the underlying data changes.\n     */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref4 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref4$columnIndex = _ref4.columnIndex,\n          columnIndex = _ref4$columnIndex === void 0 ? 0 : _ref4$columnIndex,\n          _ref4$rowIndex = _ref4.rowIndex,\n          rowIndex = _ref4$rowIndex === void 0 ? 0 : _ref4$rowIndex;\n\n      var _this$props3 = this.props,\n          scrollToColumn = _this$props3.scrollToColumn,\n          scrollToRow = _this$props3.scrollToRow;\n      var instanceProps = this.state.instanceProps;\n      instanceProps.columnSizeAndPositionManager.resetCell(columnIndex);\n      instanceProps.rowSizeAndPositionManager.resetCell(rowIndex); // Cell sizes may be determined by a function property.\n      // In this case the cDU handler can't know if they changed.\n      // Store this flag to let the next cDU pass know it needs to recompute the scroll offset.\n\n      this._recomputeScrollLeftFlag = scrollToColumn >= 0 && (this.state.scrollDirectionHorizontal === SCROLL_DIRECTION_FORWARD ? columnIndex <= scrollToColumn : columnIndex >= scrollToColumn);\n      this._recomputeScrollTopFlag = scrollToRow >= 0 && (this.state.scrollDirectionVertical === SCROLL_DIRECTION_FORWARD ? rowIndex <= scrollToRow : rowIndex >= scrollToRow); // Clear cell cache in case we are scrolling;\n      // Invalid row heights likely mean invalid cached content as well.\n\n      this._styleCache = {};\n      this._cellCache = {};\n      this.forceUpdate();\n    }\n    /**\n     * Ensure column and row are visible.\n     */\n\n  }, {\n    key: \"scrollToCell\",\n    value: function scrollToCell(_ref5) {\n      var columnIndex = _ref5.columnIndex,\n          rowIndex = _ref5.rowIndex;\n      var columnCount = this.props.columnCount;\n      var props = this.props; // Don't adjust scroll offset for single-column grids (eg List, Table).\n      // This can cause a funky scroll offset because of the vertical scrollbar width.\n\n      if (columnCount > 1 && columnIndex !== undefined) {\n        this._updateScrollLeftForScrollToColumn(_objectSpread({}, props, {\n          scrollToColumn: columnIndex\n        }));\n      }\n\n      if (rowIndex !== undefined) {\n        this._updateScrollTopForScrollToRow(_objectSpread({}, props, {\n          scrollToRow: rowIndex\n        }));\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props4 = this.props,\n          getScrollbarSize = _this$props4.getScrollbarSize,\n          height = _this$props4.height,\n          scrollLeft = _this$props4.scrollLeft,\n          scrollToColumn = _this$props4.scrollToColumn,\n          scrollTop = _this$props4.scrollTop,\n          scrollToRow = _this$props4.scrollToRow,\n          width = _this$props4.width;\n      var instanceProps = this.state.instanceProps; // Reset initial offsets to be ignored in browser\n\n      this._initialScrollTop = 0;\n      this._initialScrollLeft = 0; // If cell sizes have been invalidated (eg we are using CellMeasurer) then reset cached positions.\n      // We must do this at the start of the method as we may calculate and update scroll position below.\n\n      this._handleInvalidatedGridSize(); // If this component was first rendered server-side, scrollbar size will be undefined.\n      // In that event we need to remeasure.\n\n\n      if (!instanceProps.scrollbarSizeMeasured) {\n        this.setState(function (prevState) {\n          var stateUpdate = _objectSpread({}, prevState, {\n            needToResetStyleCache: false\n          });\n\n          stateUpdate.instanceProps.scrollbarSize = getScrollbarSize();\n          stateUpdate.instanceProps.scrollbarSizeMeasured = true;\n          return stateUpdate;\n        });\n      }\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0 || typeof scrollTop === 'number' && scrollTop >= 0) {\n        var stateUpdate = Grid._getScrollToPositionStateUpdate({\n          prevState: this.state,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n\n        if (stateUpdate) {\n          stateUpdate.needToResetStyleCache = false;\n          this.setState(stateUpdate);\n        }\n      } // refs don't work in `react-test-renderer`\n\n\n      if (this._scrollingContainer) {\n        // setting the ref's scrollLeft and scrollTop.\n        // Somehow in MultiGrid the main grid doesn't trigger a update on mount.\n        if (this._scrollingContainer.scrollLeft !== this.state.scrollLeft) {\n          this._scrollingContainer.scrollLeft = this.state.scrollLeft;\n        }\n\n        if (this._scrollingContainer.scrollTop !== this.state.scrollTop) {\n          this._scrollingContainer.scrollTop = this.state.scrollTop;\n        }\n      } // Don't update scroll offset if the size is 0; we don't render any cells in this case.\n      // Setting a state may cause us to later thing we've updated the offce when we haven't.\n\n\n      var sizeIsBiggerThanZero = height > 0 && width > 0;\n\n      if (scrollToColumn >= 0 && sizeIsBiggerThanZero) {\n        this._updateScrollLeftForScrollToColumn();\n      }\n\n      if (scrollToRow >= 0 && sizeIsBiggerThanZero) {\n        this._updateScrollTopForScrollToRow();\n      } // Update onRowsRendered callback\n\n\n      this._invokeOnGridRenderedHelper(); // Initialize onScroll callback\n\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft || 0,\n        scrollTop: scrollTop || 0,\n        totalColumnsWidth: instanceProps.columnSizeAndPositionManager.getTotalSize(),\n        totalRowsHeight: instanceProps.rowSizeAndPositionManager.getTotalSize()\n      });\n\n      this._maybeCallOnScrollbarPresenceChange();\n    }\n    /**\n     * @private\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) New scroll-to-cell props have been set\n     */\n\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this2 = this;\n\n      var _this$props5 = this.props,\n          autoHeight = _this$props5.autoHeight,\n          autoWidth = _this$props5.autoWidth,\n          columnCount = _this$props5.columnCount,\n          height = _this$props5.height,\n          rowCount = _this$props5.rowCount,\n          scrollToAlignment = _this$props5.scrollToAlignment,\n          scrollToColumn = _this$props5.scrollToColumn,\n          scrollToRow = _this$props5.scrollToRow,\n          width = _this$props5.width;\n      var _this$state = this.state,\n          scrollLeft = _this$state.scrollLeft,\n          scrollPositionChangeReason = _this$state.scrollPositionChangeReason,\n          scrollTop = _this$state.scrollTop,\n          instanceProps = _this$state.instanceProps; // If cell sizes have been invalidated (eg we are using CellMeasurer) then reset cached positions.\n      // We must do this at the start of the method as we may calculate and update scroll position below.\n\n      this._handleInvalidatedGridSize(); // Handle edge case where column or row count has only just increased over 0.\n      // In this case we may have to restore a previously-specified scroll offset.\n      // For more info see bvaughn/react-virtualized/issues/218\n\n\n      var columnOrRowCountJustIncreasedFromZero = columnCount > 0 && prevProps.columnCount === 0 || rowCount > 0 && prevProps.rowCount === 0; // Make sure requested changes to :scrollLeft or :scrollTop get applied.\n      // Assigning to scrollLeft/scrollTop tells the browser to interrupt any running scroll animations,\n      // And to discard any pending async changes to the scroll position that may have happened in the meantime (e.g. on a separate scrolling thread).\n      // So we only set these when we require an adjustment of the scroll position.\n      // See issue #2 for more information.\n\n      if (scrollPositionChangeReason === SCROLL_POSITION_CHANGE_REASONS.REQUESTED) {\n        // @TRICKY :autoHeight and :autoWidth properties instructs Grid to leave :scrollTop and :scrollLeft management to an external HOC (eg WindowScroller).\n        // In this case we should avoid checking scrollingContainer.scrollTop and scrollingContainer.scrollLeft since it forces layout/flow.\n        if (!autoWidth && scrollLeft >= 0 && (scrollLeft !== this._scrollingContainer.scrollLeft || columnOrRowCountJustIncreasedFromZero)) {\n          this._scrollingContainer.scrollLeft = scrollLeft;\n        }\n\n        if (!autoHeight && scrollTop >= 0 && (scrollTop !== this._scrollingContainer.scrollTop || columnOrRowCountJustIncreasedFromZero)) {\n          this._scrollingContainer.scrollTop = scrollTop;\n        }\n      } // Special case where the previous size was 0:\n      // In this case we don't show any windowed cells at all.\n      // So we should always recalculate offset afterwards.\n\n\n      var sizeJustIncreasedFromZero = (prevProps.width === 0 || prevProps.height === 0) && height > 0 && width > 0; // Update scroll offsets if the current :scrollToColumn or :scrollToRow values requires it\n      // @TODO Do we also need this check or can the one in componentWillUpdate() suffice?\n\n      if (this._recomputeScrollLeftFlag) {\n        this._recomputeScrollLeftFlag = false;\n\n        this._updateScrollLeftForScrollToColumn(this.props);\n      } else {\n        updateScrollIndexHelper({\n          cellSizeAndPositionManager: instanceProps.columnSizeAndPositionManager,\n          previousCellsCount: prevProps.columnCount,\n          previousCellSize: prevProps.columnWidth,\n          previousScrollToAlignment: prevProps.scrollToAlignment,\n          previousScrollToIndex: prevProps.scrollToColumn,\n          previousSize: prevProps.width,\n          scrollOffset: scrollLeft,\n          scrollToAlignment: scrollToAlignment,\n          scrollToIndex: scrollToColumn,\n          size: width,\n          sizeJustIncreasedFromZero: sizeJustIncreasedFromZero,\n          updateScrollIndexCallback: function updateScrollIndexCallback() {\n            return _this2._updateScrollLeftForScrollToColumn(_this2.props);\n          }\n        });\n      }\n\n      if (this._recomputeScrollTopFlag) {\n        this._recomputeScrollTopFlag = false;\n\n        this._updateScrollTopForScrollToRow(this.props);\n      } else {\n        updateScrollIndexHelper({\n          cellSizeAndPositionManager: instanceProps.rowSizeAndPositionManager,\n          previousCellsCount: prevProps.rowCount,\n          previousCellSize: prevProps.rowHeight,\n          previousScrollToAlignment: prevProps.scrollToAlignment,\n          previousScrollToIndex: prevProps.scrollToRow,\n          previousSize: prevProps.height,\n          scrollOffset: scrollTop,\n          scrollToAlignment: scrollToAlignment,\n          scrollToIndex: scrollToRow,\n          size: height,\n          sizeJustIncreasedFromZero: sizeJustIncreasedFromZero,\n          updateScrollIndexCallback: function updateScrollIndexCallback() {\n            return _this2._updateScrollTopForScrollToRow(_this2.props);\n          }\n        });\n      } // Update onRowsRendered callback if start/stop indices have changed\n\n\n      this._invokeOnGridRenderedHelper(); // Changes to :scrollLeft or :scrollTop should also notify :onScroll listeners\n\n\n      if (scrollLeft !== prevState.scrollLeft || scrollTop !== prevState.scrollTop) {\n        var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n        var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n\n        this._invokeOnScrollMemoizer({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          totalColumnsWidth: totalColumnsWidth,\n          totalRowsHeight: totalRowsHeight\n        });\n      }\n\n      this._maybeCallOnScrollbarPresenceChange();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._disablePointerEventsTimeoutId) {\n        cancelAnimationTimeout(this._disablePointerEventsTimeoutId);\n      }\n    }\n    /**\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) Empty content (0 rows or columns)\n     * 2) New scroll props overriding the current state\n     * 3) Cells-count or cells-size has changed, making previous scroll offsets invalid\n     */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props6 = this.props,\n          autoContainerWidth = _this$props6.autoContainerWidth,\n          autoHeight = _this$props6.autoHeight,\n          autoWidth = _this$props6.autoWidth,\n          className = _this$props6.className,\n          containerProps = _this$props6.containerProps,\n          containerRole = _this$props6.containerRole,\n          containerStyle = _this$props6.containerStyle,\n          height = _this$props6.height,\n          id = _this$props6.id,\n          noContentRenderer = _this$props6.noContentRenderer,\n          role = _this$props6.role,\n          style = _this$props6.style,\n          tabIndex = _this$props6.tabIndex,\n          width = _this$props6.width;\n      var _this$state2 = this.state,\n          instanceProps = _this$state2.instanceProps,\n          needToResetStyleCache = _this$state2.needToResetStyleCache;\n\n      var isScrolling = this._isScrolling();\n\n      var gridStyle = {\n        boxSizing: 'border-box',\n        direction: 'ltr',\n        height: autoHeight ? 'auto' : height,\n        position: 'relative',\n        width: autoWidth ? 'auto' : width,\n        WebkitOverflowScrolling: 'touch',\n        willChange: 'transform'\n      };\n\n      if (needToResetStyleCache) {\n        this._styleCache = {};\n      } // calculate _styleCache here\n      // if state.isScrolling (not from _isScrolling) then reset\n\n\n      if (!this.state.isScrolling) {\n        this._resetStyleCache();\n      } // calculate children to render here\n\n\n      this._calculateChildrenToRender(this.props, this.state);\n\n      var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n      var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize(); // Force browser to hide scrollbars when we know they aren't necessary.\n      // Otherwise once scrollbars appear they may not disappear again.\n      // For more info see issue #116\n\n      var verticalScrollBarSize = totalRowsHeight > height ? instanceProps.scrollbarSize : 0;\n      var horizontalScrollBarSize = totalColumnsWidth > width ? instanceProps.scrollbarSize : 0;\n\n      if (horizontalScrollBarSize !== this._horizontalScrollBarSize || verticalScrollBarSize !== this._verticalScrollBarSize) {\n        this._horizontalScrollBarSize = horizontalScrollBarSize;\n        this._verticalScrollBarSize = verticalScrollBarSize;\n        this._scrollbarPresenceChanged = true;\n      } // Also explicitly init styles to 'auto' if scrollbars are required.\n      // This works around an obscure edge case where external CSS styles have not yet been loaded,\n      // But an initial scroll index of offset is set as an external prop.\n      // Without this style, Grid would render the correct range of cells but would NOT update its internal offset.\n      // This was originally reported via clauderic/react-infinite-calendar/issues/23\n\n\n      gridStyle.overflowX = totalColumnsWidth + verticalScrollBarSize <= width ? 'hidden' : 'auto';\n      gridStyle.overflowY = totalRowsHeight + horizontalScrollBarSize <= height ? 'hidden' : 'auto';\n      var childrenToDisplay = this._childrenToDisplay;\n      var showNoContentRenderer = childrenToDisplay.length === 0 && height > 0 && width > 0;\n      return React.createElement(\"div\", _extends({\n        ref: this._setScrollingContainerRef\n      }, containerProps, {\n        \"aria-label\": this.props['aria-label'],\n        \"aria-readonly\": this.props['aria-readonly'],\n        className: clsx('ReactVirtualized__Grid', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: role,\n        style: _objectSpread({}, gridStyle, {}, style),\n        tabIndex: tabIndex\n      }), childrenToDisplay.length > 0 && React.createElement(\"div\", {\n        className: \"ReactVirtualized__Grid__innerScrollContainer\",\n        role: containerRole,\n        style: _objectSpread({\n          width: autoContainerWidth ? 'auto' : totalColumnsWidth,\n          height: totalRowsHeight,\n          maxWidth: totalColumnsWidth,\n          maxHeight: totalRowsHeight,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          position: 'relative'\n        }, containerStyle)\n      }, childrenToDisplay), showNoContentRenderer && noContentRenderer());\n    }\n    /* ---------------------------- Helper methods ---------------------------- */\n\n  }, {\n    key: \"_calculateChildrenToRender\",\n    value: function _calculateChildrenToRender() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      var cellRenderer = props.cellRenderer,\n          cellRangeRenderer = props.cellRangeRenderer,\n          columnCount = props.columnCount,\n          deferredMeasurementCache = props.deferredMeasurementCache,\n          height = props.height,\n          overscanColumnCount = props.overscanColumnCount,\n          overscanIndicesGetter = props.overscanIndicesGetter,\n          overscanRowCount = props.overscanRowCount,\n          rowCount = props.rowCount,\n          width = props.width,\n          isScrollingOptOut = props.isScrollingOptOut;\n      var scrollDirectionHorizontal = state.scrollDirectionHorizontal,\n          scrollDirectionVertical = state.scrollDirectionVertical,\n          instanceProps = state.instanceProps;\n      var scrollTop = this._initialScrollTop > 0 ? this._initialScrollTop : state.scrollTop;\n      var scrollLeft = this._initialScrollLeft > 0 ? this._initialScrollLeft : state.scrollLeft;\n\n      var isScrolling = this._isScrolling(props, state);\n\n      this._childrenToDisplay = []; // Render only enough columns and rows to cover the visible area of the grid.\n\n      if (height > 0 && width > 0) {\n        var visibleColumnIndices = instanceProps.columnSizeAndPositionManager.getVisibleCellRange({\n          containerSize: width,\n          offset: scrollLeft\n        });\n        var visibleRowIndices = instanceProps.rowSizeAndPositionManager.getVisibleCellRange({\n          containerSize: height,\n          offset: scrollTop\n        });\n        var horizontalOffsetAdjustment = instanceProps.columnSizeAndPositionManager.getOffsetAdjustment({\n          containerSize: width,\n          offset: scrollLeft\n        });\n        var verticalOffsetAdjustment = instanceProps.rowSizeAndPositionManager.getOffsetAdjustment({\n          containerSize: height,\n          offset: scrollTop\n        }); // Store for _invokeOnGridRenderedHelper()\n\n        this._renderedColumnStartIndex = visibleColumnIndices.start;\n        this._renderedColumnStopIndex = visibleColumnIndices.stop;\n        this._renderedRowStartIndex = visibleRowIndices.start;\n        this._renderedRowStopIndex = visibleRowIndices.stop;\n        var overscanColumnIndices = overscanIndicesGetter({\n          direction: 'horizontal',\n          cellCount: columnCount,\n          overscanCellsCount: overscanColumnCount,\n          scrollDirection: scrollDirectionHorizontal,\n          startIndex: typeof visibleColumnIndices.start === 'number' ? visibleColumnIndices.start : 0,\n          stopIndex: typeof visibleColumnIndices.stop === 'number' ? visibleColumnIndices.stop : -1\n        });\n        var overscanRowIndices = overscanIndicesGetter({\n          direction: 'vertical',\n          cellCount: rowCount,\n          overscanCellsCount: overscanRowCount,\n          scrollDirection: scrollDirectionVertical,\n          startIndex: typeof visibleRowIndices.start === 'number' ? visibleRowIndices.start : 0,\n          stopIndex: typeof visibleRowIndices.stop === 'number' ? visibleRowIndices.stop : -1\n        }); // Store for _invokeOnGridRenderedHelper()\n\n        var columnStartIndex = overscanColumnIndices.overscanStartIndex;\n        var columnStopIndex = overscanColumnIndices.overscanStopIndex;\n        var rowStartIndex = overscanRowIndices.overscanStartIndex;\n        var rowStopIndex = overscanRowIndices.overscanStopIndex; // Advanced use-cases (eg CellMeasurer) require batched measurements to determine accurate sizes.\n\n        if (deferredMeasurementCache) {\n          // If rows have a dynamic height, scan the rows we are about to render.\n          // If any have not yet been measured, then we need to render all columns initially,\n          // Because the height of the row is equal to the tallest cell within that row,\n          // (And so we can't know the height without measuring all column-cells first).\n          if (!deferredMeasurementCache.hasFixedHeight()) {\n            for (var rowIndex = rowStartIndex; rowIndex <= rowStopIndex; rowIndex++) {\n              if (!deferredMeasurementCache.has(rowIndex, 0)) {\n                columnStartIndex = 0;\n                columnStopIndex = columnCount - 1;\n                break;\n              }\n            }\n          } // If columns have a dynamic width, scan the columns we are about to render.\n          // If any have not yet been measured, then we need to render all rows initially,\n          // Because the width of the column is equal to the widest cell within that column,\n          // (And so we can't know the width without measuring all row-cells first).\n\n\n          if (!deferredMeasurementCache.hasFixedWidth()) {\n            for (var columnIndex = columnStartIndex; columnIndex <= columnStopIndex; columnIndex++) {\n              if (!deferredMeasurementCache.has(0, columnIndex)) {\n                rowStartIndex = 0;\n                rowStopIndex = rowCount - 1;\n                break;\n              }\n            }\n          }\n        }\n\n        this._childrenToDisplay = cellRangeRenderer({\n          cellCache: this._cellCache,\n          cellRenderer: cellRenderer,\n          columnSizeAndPositionManager: instanceProps.columnSizeAndPositionManager,\n          columnStartIndex: columnStartIndex,\n          columnStopIndex: columnStopIndex,\n          deferredMeasurementCache: deferredMeasurementCache,\n          horizontalOffsetAdjustment: horizontalOffsetAdjustment,\n          isScrolling: isScrolling,\n          isScrollingOptOut: isScrollingOptOut,\n          parent: this,\n          rowSizeAndPositionManager: instanceProps.rowSizeAndPositionManager,\n          rowStartIndex: rowStartIndex,\n          rowStopIndex: rowStopIndex,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          styleCache: this._styleCache,\n          verticalOffsetAdjustment: verticalOffsetAdjustment,\n          visibleColumnIndices: visibleColumnIndices,\n          visibleRowIndices: visibleRowIndices\n        }); // update the indices\n\n        this._columnStartIndex = columnStartIndex;\n        this._columnStopIndex = columnStopIndex;\n        this._rowStartIndex = rowStartIndex;\n        this._rowStopIndex = rowStopIndex;\n      }\n    }\n    /**\n     * Sets an :isScrolling flag for a small window of time.\n     * This flag is used to disable pointer events on the scrollable portion of the Grid.\n     * This prevents jerky/stuttery mouse-wheel scrolling.\n     */\n\n  }, {\n    key: \"_debounceScrollEnded\",\n    value: function _debounceScrollEnded() {\n      var scrollingResetTimeInterval = this.props.scrollingResetTimeInterval;\n\n      if (this._disablePointerEventsTimeoutId) {\n        cancelAnimationTimeout(this._disablePointerEventsTimeoutId);\n      }\n\n      this._disablePointerEventsTimeoutId = requestAnimationTimeout(this._debounceScrollEndedCallback, scrollingResetTimeInterval);\n    }\n  }, {\n    key: \"_handleInvalidatedGridSize\",\n\n    /**\n     * Check for batched CellMeasurer size invalidations.\n     * This will occur the first time one or more previously unmeasured cells are rendered.\n     */\n    value: function _handleInvalidatedGridSize() {\n      if (typeof this._deferredInvalidateColumnIndex === 'number' && typeof this._deferredInvalidateRowIndex === 'number') {\n        var columnIndex = this._deferredInvalidateColumnIndex;\n        var rowIndex = this._deferredInvalidateRowIndex;\n        this._deferredInvalidateColumnIndex = null;\n        this._deferredInvalidateRowIndex = null;\n        this.recomputeGridSize({\n          columnIndex: columnIndex,\n          rowIndex: rowIndex\n        });\n      }\n    }\n  }, {\n    key: \"_invokeOnScrollMemoizer\",\n    value: function _invokeOnScrollMemoizer(_ref6) {\n      var _this3 = this;\n\n      var scrollLeft = _ref6.scrollLeft,\n          scrollTop = _ref6.scrollTop,\n          totalColumnsWidth = _ref6.totalColumnsWidth,\n          totalRowsHeight = _ref6.totalRowsHeight;\n\n      this._onScrollMemoizer({\n        callback: function callback(_ref7) {\n          var scrollLeft = _ref7.scrollLeft,\n              scrollTop = _ref7.scrollTop;\n          var _this3$props = _this3.props,\n              height = _this3$props.height,\n              onScroll = _this3$props.onScroll,\n              width = _this3$props.width;\n          onScroll({\n            clientHeight: height,\n            clientWidth: width,\n            scrollHeight: totalRowsHeight,\n            scrollLeft: scrollLeft,\n            scrollTop: scrollTop,\n            scrollWidth: totalColumnsWidth\n          });\n        },\n        indices: {\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        }\n      });\n    }\n  }, {\n    key: \"_isScrolling\",\n    value: function _isScrolling() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      // If isScrolling is defined in props, use it to override the value in state\n      // This is a performance optimization for WindowScroller + Grid\n      return Object.hasOwnProperty.call(props, 'isScrolling') ? Boolean(props.isScrolling) : Boolean(state.isScrolling);\n    }\n  }, {\n    key: \"_maybeCallOnScrollbarPresenceChange\",\n    value: function _maybeCallOnScrollbarPresenceChange() {\n      if (this._scrollbarPresenceChanged) {\n        var onScrollbarPresenceChange = this.props.onScrollbarPresenceChange;\n        this._scrollbarPresenceChanged = false;\n        onScrollbarPresenceChange({\n          horizontal: this._horizontalScrollBarSize > 0,\n          size: this.state.instanceProps.scrollbarSize,\n          vertical: this._verticalScrollBarSize > 0\n        });\n      }\n    }\n  }, {\n    key: \"scrollToPosition\",\n\n    /**\n     * Scroll to the specified offset(s).\n     * Useful for animating position changes.\n     */\n    value: function scrollToPosition(_ref8) {\n      var scrollLeft = _ref8.scrollLeft,\n          scrollTop = _ref8.scrollTop;\n\n      var stateUpdate = Grid._getScrollToPositionStateUpdate({\n        prevState: this.state,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      });\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }, {\n    key: \"_getCalculatedScrollLeft\",\n    value: function _getCalculatedScrollLeft() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      return Grid._getCalculatedScrollLeft(props, state);\n    }\n  }, {\n    key: \"_updateScrollLeftForScrollToColumn\",\n    value: function _updateScrollLeftForScrollToColumn() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n\n      var stateUpdate = Grid._getScrollLeftForScrollToColumnStateUpdate(props, state);\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }, {\n    key: \"_getCalculatedScrollTop\",\n    value: function _getCalculatedScrollTop() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      return Grid._getCalculatedScrollTop(props, state);\n    }\n  }, {\n    key: \"_resetStyleCache\",\n    value: function _resetStyleCache() {\n      var styleCache = this._styleCache;\n      var cellCache = this._cellCache;\n      var isScrollingOptOut = this.props.isScrollingOptOut; // Reset cell and style caches once scrolling stops.\n      // This makes Grid simpler to use (since cells commonly change).\n      // And it keeps the caches from growing too large.\n      // Performance is most sensitive when a user is scrolling.\n      // Don't clear visible cells from cellCache if isScrollingOptOut is specified.\n      // This keeps the cellCache to a resonable size.\n\n      this._cellCache = {};\n      this._styleCache = {}; // Copy over the visible cell styles so avoid unnecessary re-render.\n\n      for (var rowIndex = this._rowStartIndex; rowIndex <= this._rowStopIndex; rowIndex++) {\n        for (var columnIndex = this._columnStartIndex; columnIndex <= this._columnStopIndex; columnIndex++) {\n          var key = \"\".concat(rowIndex, \"-\").concat(columnIndex);\n          this._styleCache[key] = styleCache[key];\n\n          if (isScrollingOptOut) {\n            this._cellCache[key] = cellCache[key];\n          }\n        }\n      }\n    }\n  }, {\n    key: \"_updateScrollTopForScrollToRow\",\n    value: function _updateScrollTopForScrollToRow() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n\n      var stateUpdate = Grid._getScrollTopForScrollToRowStateUpdate(props, state);\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      var newState = {};\n\n      if (nextProps.columnCount === 0 && prevState.scrollLeft !== 0 || nextProps.rowCount === 0 && prevState.scrollTop !== 0) {\n        newState.scrollLeft = 0;\n        newState.scrollTop = 0; // only use scroll{Left,Top} from props if scrollTo{Column,Row} isn't specified\n        // scrollTo{Column,Row} should override scroll{Left,Top}\n      } else if (nextProps.scrollLeft !== prevState.scrollLeft && nextProps.scrollToColumn < 0 || nextProps.scrollTop !== prevState.scrollTop && nextProps.scrollToRow < 0) {\n        Object.assign(newState, Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: nextProps.scrollLeft,\n          scrollTop: nextProps.scrollTop\n        }));\n      }\n\n      var instanceProps = prevState.instanceProps; // Initially we should not clearStyleCache\n\n      newState.needToResetStyleCache = false;\n\n      if (nextProps.columnWidth !== instanceProps.prevColumnWidth || nextProps.rowHeight !== instanceProps.prevRowHeight) {\n        // Reset cache. set it to {} in render\n        newState.needToResetStyleCache = true;\n      }\n\n      instanceProps.columnSizeAndPositionManager.configure({\n        cellCount: nextProps.columnCount,\n        estimatedCellSize: Grid._getEstimatedColumnSize(nextProps),\n        cellSizeGetter: Grid._wrapSizeGetter(nextProps.columnWidth)\n      });\n      instanceProps.rowSizeAndPositionManager.configure({\n        cellCount: nextProps.rowCount,\n        estimatedCellSize: Grid._getEstimatedRowSize(nextProps),\n        cellSizeGetter: Grid._wrapSizeGetter(nextProps.rowHeight)\n      });\n\n      if (instanceProps.prevColumnCount === 0 || instanceProps.prevRowCount === 0) {\n        instanceProps.prevColumnCount = 0;\n        instanceProps.prevRowCount = 0;\n      } // If scrolling is controlled outside this component, clear cache when scrolling stops\n\n\n      if (nextProps.autoHeight && nextProps.isScrolling === false && instanceProps.prevIsScrolling === true) {\n        Object.assign(newState, {\n          isScrolling: false\n        });\n      }\n\n      var maybeStateA;\n      var maybeStateB;\n      calculateSizeAndPositionDataAndUpdateScrollOffset({\n        cellCount: instanceProps.prevColumnCount,\n        cellSize: typeof instanceProps.prevColumnWidth === 'number' ? instanceProps.prevColumnWidth : null,\n        computeMetadataCallback: function computeMetadataCallback() {\n          return instanceProps.columnSizeAndPositionManager.resetCell(0);\n        },\n        computeMetadataCallbackProps: nextProps,\n        nextCellsCount: nextProps.columnCount,\n        nextCellSize: typeof nextProps.columnWidth === 'number' ? nextProps.columnWidth : null,\n        nextScrollToIndex: nextProps.scrollToColumn,\n        scrollToIndex: instanceProps.prevScrollToColumn,\n        updateScrollOffsetForScrollToIndex: function updateScrollOffsetForScrollToIndex() {\n          maybeStateA = Grid._getScrollLeftForScrollToColumnStateUpdate(nextProps, prevState);\n        }\n      });\n      calculateSizeAndPositionDataAndUpdateScrollOffset({\n        cellCount: instanceProps.prevRowCount,\n        cellSize: typeof instanceProps.prevRowHeight === 'number' ? instanceProps.prevRowHeight : null,\n        computeMetadataCallback: function computeMetadataCallback() {\n          return instanceProps.rowSizeAndPositionManager.resetCell(0);\n        },\n        computeMetadataCallbackProps: nextProps,\n        nextCellsCount: nextProps.rowCount,\n        nextCellSize: typeof nextProps.rowHeight === 'number' ? nextProps.rowHeight : null,\n        nextScrollToIndex: nextProps.scrollToRow,\n        scrollToIndex: instanceProps.prevScrollToRow,\n        updateScrollOffsetForScrollToIndex: function updateScrollOffsetForScrollToIndex() {\n          maybeStateB = Grid._getScrollTopForScrollToRowStateUpdate(nextProps, prevState);\n        }\n      });\n      instanceProps.prevColumnCount = nextProps.columnCount;\n      instanceProps.prevColumnWidth = nextProps.columnWidth;\n      instanceProps.prevIsScrolling = nextProps.isScrolling === true;\n      instanceProps.prevRowCount = nextProps.rowCount;\n      instanceProps.prevRowHeight = nextProps.rowHeight;\n      instanceProps.prevScrollToColumn = nextProps.scrollToColumn;\n      instanceProps.prevScrollToRow = nextProps.scrollToRow; // getting scrollBarSize (moved from componentWillMount)\n\n      instanceProps.scrollbarSize = nextProps.getScrollbarSize();\n\n      if (instanceProps.scrollbarSize === undefined) {\n        instanceProps.scrollbarSizeMeasured = false;\n        instanceProps.scrollbarSize = 0;\n      } else {\n        instanceProps.scrollbarSizeMeasured = true;\n      }\n\n      newState.instanceProps = instanceProps;\n      return _objectSpread({}, newState, {}, maybeStateA, {}, maybeStateB);\n    }\n  }, {\n    key: \"_getEstimatedColumnSize\",\n    value: function _getEstimatedColumnSize(props) {\n      return typeof props.columnWidth === 'number' ? props.columnWidth : props.estimatedColumnSize;\n    }\n  }, {\n    key: \"_getEstimatedRowSize\",\n    value: function _getEstimatedRowSize(props) {\n      return typeof props.rowHeight === 'number' ? props.rowHeight : props.estimatedRowSize;\n    }\n  }, {\n    key: \"_getScrollToPositionStateUpdate\",\n\n    /**\n     * Get the updated state after scrolling to\n     * scrollLeft and scrollTop\n     */\n    value: function _getScrollToPositionStateUpdate(_ref9) {\n      var prevState = _ref9.prevState,\n          scrollLeft = _ref9.scrollLeft,\n          scrollTop = _ref9.scrollTop;\n      var newState = {\n        scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n      };\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0) {\n        newState.scrollDirectionHorizontal = scrollLeft > prevState.scrollLeft ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD;\n        newState.scrollLeft = scrollLeft;\n      }\n\n      if (typeof scrollTop === 'number' && scrollTop >= 0) {\n        newState.scrollDirectionVertical = scrollTop > prevState.scrollTop ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD;\n        newState.scrollTop = scrollTop;\n      }\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0 && scrollLeft !== prevState.scrollLeft || typeof scrollTop === 'number' && scrollTop >= 0 && scrollTop !== prevState.scrollTop) {\n        return newState;\n      }\n\n      return {};\n    }\n  }, {\n    key: \"_wrapSizeGetter\",\n    value: function _wrapSizeGetter(value) {\n      return typeof value === 'function' ? value : function () {\n        return value;\n      };\n    }\n  }, {\n    key: \"_getCalculatedScrollLeft\",\n    value: function _getCalculatedScrollLeft(nextProps, prevState) {\n      var columnCount = nextProps.columnCount,\n          height = nextProps.height,\n          scrollToAlignment = nextProps.scrollToAlignment,\n          scrollToColumn = nextProps.scrollToColumn,\n          width = nextProps.width;\n      var scrollLeft = prevState.scrollLeft,\n          instanceProps = prevState.instanceProps;\n\n      if (columnCount > 0) {\n        var finalColumn = columnCount - 1;\n        var targetIndex = scrollToColumn < 0 ? finalColumn : Math.min(finalColumn, scrollToColumn);\n        var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n        var scrollBarSize = instanceProps.scrollbarSizeMeasured && totalRowsHeight > height ? instanceProps.scrollbarSize : 0;\n        return instanceProps.columnSizeAndPositionManager.getUpdatedOffsetForIndex({\n          align: scrollToAlignment,\n          containerSize: width - scrollBarSize,\n          currentOffset: scrollLeft,\n          targetIndex: targetIndex\n        });\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"_getScrollLeftForScrollToColumnStateUpdate\",\n    value: function _getScrollLeftForScrollToColumnStateUpdate(nextProps, prevState) {\n      var scrollLeft = prevState.scrollLeft;\n\n      var calculatedScrollLeft = Grid._getCalculatedScrollLeft(nextProps, prevState);\n\n      if (typeof calculatedScrollLeft === 'number' && calculatedScrollLeft >= 0 && scrollLeft !== calculatedScrollLeft) {\n        return Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: calculatedScrollLeft,\n          scrollTop: -1\n        });\n      }\n\n      return {};\n    }\n  }, {\n    key: \"_getCalculatedScrollTop\",\n    value: function _getCalculatedScrollTop(nextProps, prevState) {\n      var height = nextProps.height,\n          rowCount = nextProps.rowCount,\n          scrollToAlignment = nextProps.scrollToAlignment,\n          scrollToRow = nextProps.scrollToRow,\n          width = nextProps.width;\n      var scrollTop = prevState.scrollTop,\n          instanceProps = prevState.instanceProps;\n\n      if (rowCount > 0) {\n        var finalRow = rowCount - 1;\n        var targetIndex = scrollToRow < 0 ? finalRow : Math.min(finalRow, scrollToRow);\n        var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n        var scrollBarSize = instanceProps.scrollbarSizeMeasured && totalColumnsWidth > width ? instanceProps.scrollbarSize : 0;\n        return instanceProps.rowSizeAndPositionManager.getUpdatedOffsetForIndex({\n          align: scrollToAlignment,\n          containerSize: height - scrollBarSize,\n          currentOffset: scrollTop,\n          targetIndex: targetIndex\n        });\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"_getScrollTopForScrollToRowStateUpdate\",\n    value: function _getScrollTopForScrollToRowStateUpdate(nextProps, prevState) {\n      var scrollTop = prevState.scrollTop;\n\n      var calculatedScrollTop = Grid._getCalculatedScrollTop(nextProps, prevState);\n\n      if (typeof calculatedScrollTop === 'number' && calculatedScrollTop >= 0 && scrollTop !== calculatedScrollTop) {\n        return Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: -1,\n          scrollTop: calculatedScrollTop\n        });\n      }\n\n      return {};\n    }\n  }]);\n\n  return Grid;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"aria-label\": PropTypes.string.isRequired,\n  \"aria-readonly\": PropTypes.bool,\n\n  /**\n   * Set the width of the inner scrollable container to 'auto'.\n   * This is useful for single-column Grids to ensure that the column doesn't extend below a vertical scrollbar.\n   */\n  \"autoContainerWidth\": PropTypes.bool.isRequired,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height of rows can stretch the window.\n   * Intended for use with WindowScroller\n   */\n  \"autoHeight\": PropTypes.bool.isRequired,\n\n  /**\n   * Removes fixed width from the scrollingContainer so that the total width of rows can stretch the window.\n   * Intended for use with WindowScroller\n   */\n  \"autoWidth\": PropTypes.bool.isRequired,\n\n  /** Responsible for rendering a cell given an row and column index.  */\n  \"cellRenderer\": function cellRenderer() {\n    return (typeof bpfrpt_proptype_CellRenderer === \"function\" ? bpfrpt_proptype_CellRenderer.isRequired ? bpfrpt_proptype_CellRenderer.isRequired : bpfrpt_proptype_CellRenderer : PropTypes.shape(bpfrpt_proptype_CellRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Responsible for rendering a group of cells given their index ranges.  */\n  \"cellRangeRenderer\": function cellRangeRenderer() {\n    return (typeof bpfrpt_proptype_CellRangeRenderer === \"function\" ? bpfrpt_proptype_CellRangeRenderer.isRequired ? bpfrpt_proptype_CellRangeRenderer.isRequired : bpfrpt_proptype_CellRangeRenderer : PropTypes.shape(bpfrpt_proptype_CellRangeRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Optional custom CSS class name to attach to root Grid element.  */\n  \"className\": PropTypes.string,\n\n  /** Number of columns in grid.  */\n  \"columnCount\": PropTypes.number.isRequired,\n\n  /** Either a fixed column width (number) or a function that returns the width of a column given its index.  */\n  \"columnWidth\": function columnWidth() {\n    return (typeof bpfrpt_proptype_CellSize === \"function\" ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Unfiltered props for the Grid container. */\n  \"containerProps\": PropTypes.object,\n\n  /** ARIA role for the cell-container.  */\n  \"containerRole\": PropTypes.string.isRequired,\n\n  /** Optional inline style applied to inner cell-container */\n  \"containerStyle\": PropTypes.object.isRequired,\n\n  /**\n   * If CellMeasurer is used to measure this Grid's children, this should be a pointer to its CellMeasurerCache.\n   * A shared CellMeasurerCache reference enables Grid and CellMeasurer to share measurement data.\n   */\n  \"deferredMeasurementCache\": PropTypes.object,\n\n  /**\n   * Used to estimate the total width of a Grid before all of its columns have actually been measured.\n   * The estimated total width is adjusted as columns are rendered.\n   */\n  \"estimatedColumnSize\": PropTypes.number.isRequired,\n\n  /**\n   * Used to estimate the total height of a Grid before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  \"estimatedRowSize\": PropTypes.number.isRequired,\n\n  /** Exposed for testing purposes only.  */\n  \"getScrollbarSize\": PropTypes.func.isRequired,\n\n  /** Height of Grid; this property determines the number of visible (vs virtualized) rows.  */\n  \"height\": PropTypes.number.isRequired,\n\n  /** Optional custom id to attach to root Grid element.  */\n  \"id\": PropTypes.string,\n\n  /**\n   * Override internal is-scrolling state tracking.\n   * This property is primarily intended for use with the WindowScroller component.\n   */\n  \"isScrolling\": PropTypes.bool,\n\n  /**\n   * Opt-out of isScrolling param passed to cellRangeRenderer.\n   * To avoid the extra render when scroll stops.\n   */\n  \"isScrollingOptOut\": PropTypes.bool.isRequired,\n\n  /** Optional renderer to be used in place of rows when either :rowCount or :columnCount is 0.  */\n  \"noContentRenderer\": function noContentRenderer() {\n    return (typeof bpfrpt_proptype_NoContentRenderer === \"function\" ? bpfrpt_proptype_NoContentRenderer.isRequired ? bpfrpt_proptype_NoContentRenderer.isRequired : bpfrpt_proptype_NoContentRenderer : PropTypes.shape(bpfrpt_proptype_NoContentRenderer).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   */\n  \"onScroll\": PropTypes.func.isRequired,\n\n  /**\n   * Called whenever a horizontal or vertical scrollbar is added or removed.\n   * This prop is not intended for end-user use;\n   * It is used by MultiGrid to support fixed-row/fixed-column scroll syncing.\n   */\n  \"onScrollbarPresenceChange\": PropTypes.func.isRequired,\n\n  /** Callback invoked with information about the section of the Grid that was just rendered.  */\n  \"onSectionRendered\": PropTypes.func.isRequired,\n\n  /**\n   * Number of columns to render before/after the visible section of the grid.\n   * These columns can help for smoother scrolling on touch devices or browsers that send scroll events infrequently.\n   */\n  \"overscanColumnCount\": PropTypes.number.isRequired,\n\n  /**\n   * Calculates the number of cells to overscan before and after a specified range.\n   * This function ensures that overscanning doesn't exceed the available cells.\n   */\n  \"overscanIndicesGetter\": function overscanIndicesGetter() {\n    return (typeof bpfrpt_proptype_OverscanIndicesGetter === \"function\" ? bpfrpt_proptype_OverscanIndicesGetter.isRequired ? bpfrpt_proptype_OverscanIndicesGetter.isRequired : bpfrpt_proptype_OverscanIndicesGetter : PropTypes.shape(bpfrpt_proptype_OverscanIndicesGetter).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Number of rows to render above/below the visible section of the grid.\n   * These rows can help for smoother scrolling on touch devices or browsers that send scroll events infrequently.\n   */\n  \"overscanRowCount\": PropTypes.number.isRequired,\n\n  /** ARIA role for the grid element.  */\n  \"role\": PropTypes.string.isRequired,\n\n  /**\n   * Either a fixed row height (number) or a function that returns the height of a row given its index.\n   * Should implement the following interface: ({ index: number }): number\n   */\n  \"rowHeight\": function rowHeight() {\n    return (typeof bpfrpt_proptype_CellSize === \"function\" ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Number of rows in grid.  */\n  \"rowCount\": PropTypes.number.isRequired,\n\n  /** Wait this amount of time after the last scroll event before resetting Grid `pointer-events`. */\n  \"scrollingResetTimeInterval\": PropTypes.number.isRequired,\n\n  /** Horizontal offset. */\n  \"scrollLeft\": PropTypes.number,\n\n  /**\n   * Controls scroll-to-cell behavior of the Grid.\n   * The default (\"auto\") scrolls the least amount possible to ensure that the specified cell is fully visible.\n   * Use \"start\" to align cells to the top/left of the Grid and \"end\" to align bottom/right.\n   */\n  \"scrollToAlignment\": function scrollToAlignment() {\n    return (typeof bpfrpt_proptype_Alignment === \"function\" ? bpfrpt_proptype_Alignment.isRequired ? bpfrpt_proptype_Alignment.isRequired : bpfrpt_proptype_Alignment : PropTypes.shape(bpfrpt_proptype_Alignment).isRequired).apply(this, arguments);\n  },\n\n  /** Column index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToColumn\": PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  \"scrollTop\": PropTypes.number,\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToRow\": PropTypes.number.isRequired,\n\n  /** Optional inline style */\n  \"style\": PropTypes.object.isRequired,\n\n  /** Tab index for focus */\n  \"tabIndex\": PropTypes.number,\n\n  /** Width of Grid; this property determines the number of visible (vs virtualized) columns.  */\n  \"width\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(Grid, \"defaultProps\", {\n  'aria-label': 'grid',\n  'aria-readonly': true,\n  autoContainerWidth: false,\n  autoHeight: false,\n  autoWidth: false,\n  cellRangeRenderer: defaultCellRangeRenderer,\n  containerRole: 'rowgroup',\n  containerStyle: {},\n  estimatedColumnSize: 100,\n  estimatedRowSize: 30,\n  getScrollbarSize: scrollbarSize,\n  noContentRenderer: renderNull,\n  onScroll: function onScroll() {},\n  onScrollbarPresenceChange: function onScrollbarPresenceChange() {},\n  onSectionRendered: function onSectionRendered() {},\n  overscanColumnCount: 0,\n  overscanIndicesGetter: defaultOverscanIndicesGetter,\n  overscanRowCount: 10,\n  role: 'grid',\n  scrollingResetTimeInterval: DEFAULT_SCROLLING_RESET_TIME_INTERVAL,\n  scrollToAlignment: 'auto',\n  scrollToColumn: -1,\n  scrollToRow: -1,\n  style: {},\n  tabIndex: 0,\n  isScrollingOptOut: false\n});\n\npolyfill(Grid);\nexport default Grid;\nimport { bpfrpt_proptype_CellRenderer } from \"./types\";\nimport { bpfrpt_proptype_CellRangeRenderer } from \"./types\";\nimport { bpfrpt_proptype_CellPosition } from \"./types\";\nimport { bpfrpt_proptype_CellSize } from \"./types\";\nimport { bpfrpt_proptype_CellSizeGetter } from \"./types\";\nimport { bpfrpt_proptype_NoContentRenderer } from \"./types\";\nimport { bpfrpt_proptype_Scroll } from \"./types\";\nimport { bpfrpt_proptype_ScrollbarPresenceChange } from \"./types\";\nimport { bpfrpt_proptype_RenderedSection } from \"./types\";\nimport { bpfrpt_proptype_OverscanIndicesGetter } from \"./types\";\nimport { bpfrpt_proptype_Alignment } from \"./types\";\nimport { bpfrpt_proptype_CellCache } from \"./types\";\nimport { bpfrpt_proptype_StyleCache } from \"./types\";\nimport { bpfrpt_proptype_AnimationTimeoutId } from \"../utils/requestAnimationTimeout\";\nimport PropTypes from \"prop-types\";","import { caf, raf } from './animationFrame';\nvar bpfrpt_proptype_AnimationTimeoutId = process.env.NODE_ENV === 'production' ? null : {\n  \"id\": PropTypes.number.isRequired\n};\nexport var cancelAnimationTimeout = function cancelAnimationTimeout(frame) {\n  return caf(frame.id);\n};\n/**\n * Recursively calls requestAnimationFrame until a specified delay has been met or exceeded.\n * When the delay time has been reached the function you're timing out will be called.\n *\n * Credit: Joe Lambert (https://gist.github.com/joelambert/1002116#file-requesttimeout-js)\n */\n\nexport var requestAnimationTimeout = function requestAnimationTimeout(callback, delay) {\n  var start; // wait for end of processing current event handler, because event handler may be long\n\n  Promise.resolve().then(function () {\n    start = Date.now();\n  });\n\n  var timeout = function timeout() {\n    if (Date.now() - start >= delay) {\n      callback.call();\n    } else {\n      frame.id = raf(timeout);\n    }\n  };\n\n  var frame = {\n    id: raf(timeout)\n  };\n  return frame;\n};\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_AnimationTimeoutId };","export var SCROLL_DIRECTION_BACKWARD = -1;\nexport var SCROLL_DIRECTION_FORWARD = 1;\nexport var SCROLL_DIRECTION_HORIZONTAL = 'horizontal';\nexport var SCROLL_DIRECTION_VERTICAL = 'vertical';\n/**\n * Calculates the number of cells to overscan before and after a specified range.\n * This function ensures that overscanning doesn't exceed the available cells.\n */\n\nexport default function defaultOverscanIndicesGetter(_ref) {\n  var cellCount = _ref.cellCount,\n      overscanCellsCount = _ref.overscanCellsCount,\n      scrollDirection = _ref.scrollDirection,\n      startIndex = _ref.startIndex,\n      stopIndex = _ref.stopIndex;\n\n  if (scrollDirection === SCROLL_DIRECTION_FORWARD) {\n    return {\n      overscanStartIndex: Math.max(0, startIndex),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + overscanCellsCount)\n    };\n  } else {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - overscanCellsCount),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex)\n    };\n  }\n}\nimport { bpfrpt_proptype_OverscanIndicesGetterParams } from \"./types\";\nimport { bpfrpt_proptype_OverscanIndices } from \"./types\";","/**\n * Default implementation of cellRangeRenderer used by Grid.\n * This renderer supports cell-caching while the user is scrolling.\n */\nexport default function defaultCellRangeRenderer(_ref) {\n  var cellCache = _ref.cellCache,\n      cellRenderer = _ref.cellRenderer,\n      columnSizeAndPositionManager = _ref.columnSizeAndPositionManager,\n      columnStartIndex = _ref.columnStartIndex,\n      columnStopIndex = _ref.columnStopIndex,\n      deferredMeasurementCache = _ref.deferredMeasurementCache,\n      horizontalOffsetAdjustment = _ref.horizontalOffsetAdjustment,\n      isScrolling = _ref.isScrolling,\n      isScrollingOptOut = _ref.isScrollingOptOut,\n      parent = _ref.parent,\n      rowSizeAndPositionManager = _ref.rowSizeAndPositionManager,\n      rowStartIndex = _ref.rowStartIndex,\n      rowStopIndex = _ref.rowStopIndex,\n      styleCache = _ref.styleCache,\n      verticalOffsetAdjustment = _ref.verticalOffsetAdjustment,\n      visibleColumnIndices = _ref.visibleColumnIndices,\n      visibleRowIndices = _ref.visibleRowIndices;\n  var renderedCells = []; // Browsers have native size limits for elements (eg Chrome 33M pixels, IE 1.5M pixes).\n  // User cannot scroll beyond these size limitations.\n  // In order to work around this, ScalingCellSizeAndPositionManager compresses offsets.\n  // We should never cache styles for compressed offsets though as this can lead to bugs.\n  // See issue #576 for more.\n\n  var areOffsetsAdjusted = columnSizeAndPositionManager.areOffsetsAdjusted() || rowSizeAndPositionManager.areOffsetsAdjusted();\n  var canCacheStyle = !isScrolling && !areOffsetsAdjusted;\n\n  for (var rowIndex = rowStartIndex; rowIndex <= rowStopIndex; rowIndex++) {\n    var rowDatum = rowSizeAndPositionManager.getSizeAndPositionOfCell(rowIndex);\n\n    for (var columnIndex = columnStartIndex; columnIndex <= columnStopIndex; columnIndex++) {\n      var columnDatum = columnSizeAndPositionManager.getSizeAndPositionOfCell(columnIndex);\n      var isVisible = columnIndex >= visibleColumnIndices.start && columnIndex <= visibleColumnIndices.stop && rowIndex >= visibleRowIndices.start && rowIndex <= visibleRowIndices.stop;\n      var key = \"\".concat(rowIndex, \"-\").concat(columnIndex);\n      var style = void 0; // Cache style objects so shallow-compare doesn't re-render unnecessarily.\n\n      if (canCacheStyle && styleCache[key]) {\n        style = styleCache[key];\n      } else {\n        // In deferred mode, cells will be initially rendered before we know their size.\n        // Don't interfere with CellMeasurer's measurements by setting an invalid size.\n        if (deferredMeasurementCache && !deferredMeasurementCache.has(rowIndex, columnIndex)) {\n          // Position not-yet-measured cells at top/left 0,0,\n          // And give them width/height of 'auto' so they can grow larger than the parent Grid if necessary.\n          // Positioning them further to the right/bottom influences their measured size.\n          style = {\n            height: 'auto',\n            left: 0,\n            position: 'absolute',\n            top: 0,\n            width: 'auto'\n          };\n        } else {\n          style = {\n            height: rowDatum.size,\n            left: columnDatum.offset + horizontalOffsetAdjustment,\n            position: 'absolute',\n            top: rowDatum.offset + verticalOffsetAdjustment,\n            width: columnDatum.size\n          };\n          styleCache[key] = style;\n        }\n      }\n\n      var cellRendererParams = {\n        columnIndex: columnIndex,\n        isScrolling: isScrolling,\n        isVisible: isVisible,\n        key: key,\n        parent: parent,\n        rowIndex: rowIndex,\n        style: style\n      };\n      var renderedCell = void 0; // Avoid re-creating cells while scrolling.\n      // This can lead to the same cell being created many times and can cause performance issues for \"heavy\" cells.\n      // If a scroll is in progress- cache and reuse cells.\n      // This cache will be thrown away once scrolling completes.\n      // However if we are scaling scroll positions and sizes, we should also avoid caching.\n      // This is because the offset changes slightly as scroll position changes and caching leads to stale values.\n      // For more info refer to issue #395\n      //\n      // If isScrollingOptOut is specified, we always cache cells.\n      // For more info refer to issue #1028\n\n      if ((isScrollingOptOut || isScrolling) && !horizontalOffsetAdjustment && !verticalOffsetAdjustment) {\n        if (!cellCache[key]) {\n          cellCache[key] = cellRenderer(cellRendererParams);\n        }\n\n        renderedCell = cellCache[key]; // If the user is no longer scrolling, don't cache cells.\n        // This makes dynamic cell content difficult for users and would also lead to a heavier memory footprint.\n      } else {\n        renderedCell = cellRenderer(cellRendererParams);\n      }\n\n      if (renderedCell == null || renderedCell === false) {\n        continue;\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        warnAboutMissingStyle(parent, renderedCell);\n      }\n\n      renderedCells.push(renderedCell);\n    }\n  }\n\n  return renderedCells;\n}\n\nfunction warnAboutMissingStyle(parent, renderedCell) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (renderedCell) {\n      // If the direct child is a CellMeasurer, then we should check its child\n      // See issue #611\n      if (renderedCell.type && renderedCell.type.__internalCellMeasurerFlag) {\n        renderedCell = renderedCell.props.children;\n      }\n\n      if (renderedCell && renderedCell.props && renderedCell.props.style === undefined && parent.__warnedAboutMissingStyle !== true) {\n        parent.__warnedAboutMissingStyle = true;\n        console.warn('Rendered cell should include style property for positioning.');\n      }\n    }\n  }\n}\n\nimport { bpfrpt_proptype_CellRangeRendererParams } from \"./types\";","export var SCROLL_DIRECTION_BACKWARD = -1;\nexport var SCROLL_DIRECTION_FORWARD = 1;\nexport var SCROLL_DIRECTION_HORIZONTAL = 'horizontal';\nexport var SCROLL_DIRECTION_VERTICAL = 'vertical';\n/**\n * Calculates the number of cells to overscan before and after a specified range.\n * This function ensures that overscanning doesn't exceed the available cells.\n */\n\nexport default function defaultOverscanIndicesGetter(_ref) {\n  var cellCount = _ref.cellCount,\n      overscanCellsCount = _ref.overscanCellsCount,\n      scrollDirection = _ref.scrollDirection,\n      startIndex = _ref.startIndex,\n      stopIndex = _ref.stopIndex;\n  // Make sure we render at least 1 cell extra before and after (except near boundaries)\n  // This is necessary in order to support keyboard navigation (TAB/SHIFT+TAB) in some cases\n  // For more info see issues #625\n  overscanCellsCount = Math.max(1, overscanCellsCount);\n\n  if (scrollDirection === SCROLL_DIRECTION_FORWARD) {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - 1),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + overscanCellsCount)\n    };\n  } else {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - overscanCellsCount),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + 1)\n    };\n  }\n}\nimport { bpfrpt_proptype_OverscanIndicesGetterParams } from \"./types\";\nimport { bpfrpt_proptype_OverscanIndices } from \"./types\";","var bpfrpt_proptype_ScrollIndices = process.env.NODE_ENV === 'production' ? null : {\n  \"scrollToColumn\": PropTypes.number.isRequired,\n  \"scrollToRow\": PropTypes.number.isRequired\n};\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_ScrollIndices };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\n/**\n * This HOC decorates a virtualized component and responds to arrow-key events by scrolling one row or column at a time.\n */\n\nvar ArrowKeyStepper = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(ArrowKeyStepper, _React$PureComponent);\n\n  function ArrowKeyStepper() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ArrowKeyStepper);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ArrowKeyStepper)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      scrollToColumn: 0,\n      scrollToRow: 0,\n      instanceProps: {\n        prevScrollToColumn: 0,\n        prevScrollToRow: 0\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_onKeyDown\", function (event) {\n      var _this$props = _this.props,\n          columnCount = _this$props.columnCount,\n          disabled = _this$props.disabled,\n          mode = _this$props.mode,\n          rowCount = _this$props.rowCount;\n\n      if (disabled) {\n        return;\n      }\n\n      var _this$_getScrollState = _this._getScrollState(),\n          scrollToColumnPrevious = _this$_getScrollState.scrollToColumn,\n          scrollToRowPrevious = _this$_getScrollState.scrollToRow;\n\n      var _this$_getScrollState2 = _this._getScrollState(),\n          scrollToColumn = _this$_getScrollState2.scrollToColumn,\n          scrollToRow = _this$_getScrollState2.scrollToRow; // The above cases all prevent default event event behavior.\n      // This is to keep the grid from scrolling after the snap-to update.\n\n\n      switch (event.key) {\n        case 'ArrowDown':\n          scrollToRow = mode === 'cells' ? Math.min(scrollToRow + 1, rowCount - 1) : Math.min(_this._rowStopIndex + 1, rowCount - 1);\n          break;\n\n        case 'ArrowLeft':\n          scrollToColumn = mode === 'cells' ? Math.max(scrollToColumn - 1, 0) : Math.max(_this._columnStartIndex - 1, 0);\n          break;\n\n        case 'ArrowRight':\n          scrollToColumn = mode === 'cells' ? Math.min(scrollToColumn + 1, columnCount - 1) : Math.min(_this._columnStopIndex + 1, columnCount - 1);\n          break;\n\n        case 'ArrowUp':\n          scrollToRow = mode === 'cells' ? Math.max(scrollToRow - 1, 0) : Math.max(_this._rowStartIndex - 1, 0);\n          break;\n      }\n\n      if (scrollToColumn !== scrollToColumnPrevious || scrollToRow !== scrollToRowPrevious) {\n        event.preventDefault();\n\n        _this._updateScrollState({\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onSectionRendered\", function (_ref) {\n      var columnStartIndex = _ref.columnStartIndex,\n          columnStopIndex = _ref.columnStopIndex,\n          rowStartIndex = _ref.rowStartIndex,\n          rowStopIndex = _ref.rowStopIndex;\n      _this._columnStartIndex = columnStartIndex;\n      _this._columnStopIndex = columnStopIndex;\n      _this._rowStartIndex = rowStartIndex;\n      _this._rowStopIndex = rowStopIndex;\n    });\n\n    return _this;\n  }\n\n  _createClass(ArrowKeyStepper, [{\n    key: \"setScrollIndexes\",\n    value: function setScrollIndexes(_ref2) {\n      var scrollToColumn = _ref2.scrollToColumn,\n          scrollToRow = _ref2.scrollToRow;\n      this.setState({\n        scrollToRow: scrollToRow,\n        scrollToColumn: scrollToColumn\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          className = _this$props2.className,\n          children = _this$props2.children;\n\n      var _this$_getScrollState3 = this._getScrollState(),\n          scrollToColumn = _this$_getScrollState3.scrollToColumn,\n          scrollToRow = _this$_getScrollState3.scrollToRow;\n\n      return React.createElement(\"div\", {\n        className: className,\n        onKeyDown: this._onKeyDown\n      }, children({\n        onSectionRendered: this._onSectionRendered,\n        scrollToColumn: scrollToColumn,\n        scrollToRow: scrollToRow\n      }));\n    }\n  }, {\n    key: \"_getScrollState\",\n    value: function _getScrollState() {\n      return this.props.isControlled ? this.props : this.state;\n    }\n  }, {\n    key: \"_updateScrollState\",\n    value: function _updateScrollState(_ref3) {\n      var scrollToColumn = _ref3.scrollToColumn,\n          scrollToRow = _ref3.scrollToRow;\n      var _this$props3 = this.props,\n          isControlled = _this$props3.isControlled,\n          onScrollToChange = _this$props3.onScrollToChange;\n\n      if (typeof onScrollToChange === 'function') {\n        onScrollToChange({\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        });\n      }\n\n      if (!isControlled) {\n        this.setState({\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        });\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.isControlled) {\n        return {};\n      }\n\n      if (nextProps.scrollToColumn !== prevState.instanceProps.prevScrollToColumn || nextProps.scrollToRow !== prevState.instanceProps.prevScrollToRow) {\n        return _objectSpread({}, prevState, {\n          scrollToColumn: nextProps.scrollToColumn,\n          scrollToRow: nextProps.scrollToRow,\n          instanceProps: {\n            prevScrollToColumn: nextProps.scrollToColumn,\n            prevScrollToRow: nextProps.scrollToRow\n          }\n        });\n      }\n\n      return {};\n    }\n  }]);\n\n  return ArrowKeyStepper;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"children\": PropTypes.func.isRequired,\n  \"className\": PropTypes.string,\n  \"columnCount\": PropTypes.number.isRequired,\n  \"disabled\": PropTypes.bool.isRequired,\n  \"isControlled\": PropTypes.bool.isRequired,\n  \"mode\": PropTypes.oneOf([\"cells\", \"edges\"]).isRequired,\n  \"onScrollToChange\": PropTypes.func,\n  \"rowCount\": PropTypes.number.isRequired,\n  \"scrollToColumn\": PropTypes.number.isRequired,\n  \"scrollToRow\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(ArrowKeyStepper, \"defaultProps\", {\n  disabled: false,\n  isControlled: false,\n  mode: 'edges',\n  scrollToColumn: 0,\n  scrollToRow: 0\n});\n\npolyfill(ArrowKeyStepper);\nexport default ArrowKeyStepper;\nimport { bpfrpt_proptype_RenderedSection } from \"../Grid\";\nimport { bpfrpt_proptype_ScrollIndices } from \"./types\";\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport createDetectElementResize from '../vendor/detectElementResize';\nvar AutoSizer = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AutoSizer, _React$Component);\n\n  function AutoSizer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AutoSizer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AutoSizer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      height: _this.props.defaultHeight || 0,\n      width: _this.props.defaultWidth || 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_parentNode\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_autoSizer\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_window\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_detectElementResize\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_onResize\", function () {\n      var _this$props = _this.props,\n          disableHeight = _this$props.disableHeight,\n          disableWidth = _this$props.disableWidth,\n          onResize = _this$props.onResize;\n\n      if (_this._parentNode) {\n        // Guard against AutoSizer component being removed from the DOM immediately after being added.\n        // This can result in invalid style values which can result in NaN values if we don't handle them.\n        // See issue #150 for more context.\n        var height = _this._parentNode.offsetHeight || 0;\n        var width = _this._parentNode.offsetWidth || 0;\n        var win = _this._window || window;\n        var style = win.getComputedStyle(_this._parentNode) || {};\n        var paddingLeft = parseInt(style.paddingLeft, 10) || 0;\n        var paddingRight = parseInt(style.paddingRight, 10) || 0;\n        var paddingTop = parseInt(style.paddingTop, 10) || 0;\n        var paddingBottom = parseInt(style.paddingBottom, 10) || 0;\n        var newHeight = height - paddingTop - paddingBottom;\n        var newWidth = width - paddingLeft - paddingRight;\n\n        if (!disableHeight && _this.state.height !== newHeight || !disableWidth && _this.state.width !== newWidth) {\n          _this.setState({\n            height: height - paddingTop - paddingBottom,\n            width: width - paddingLeft - paddingRight\n          });\n\n          onResize({\n            height: height,\n            width: width\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setRef\", function (autoSizer) {\n      _this._autoSizer = autoSizer;\n    });\n\n    return _this;\n  }\n\n  _createClass(AutoSizer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var nonce = this.props.nonce;\n\n      if (this._autoSizer && this._autoSizer.parentNode && this._autoSizer.parentNode.ownerDocument && this._autoSizer.parentNode.ownerDocument.defaultView && this._autoSizer.parentNode instanceof this._autoSizer.parentNode.ownerDocument.defaultView.HTMLElement) {\n        // Delay access of parentNode until mount.\n        // This handles edge-cases where the component has already been unmounted before its ref has been set,\n        // As well as libraries like react-lite which have a slightly different lifecycle.\n        this._parentNode = this._autoSizer.parentNode;\n        this._window = this._autoSizer.parentNode.ownerDocument.defaultView; // Defer requiring resize handler in order to support server-side rendering.\n        // See issue #41\n\n        this._detectElementResize = createDetectElementResize(nonce, this._window);\n\n        this._detectElementResize.addResizeListener(this._parentNode, this._onResize);\n\n        this._onResize();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._detectElementResize && this._parentNode) {\n        this._detectElementResize.removeResizeListener(this._parentNode, this._onResize);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          children = _this$props2.children,\n          className = _this$props2.className,\n          disableHeight = _this$props2.disableHeight,\n          disableWidth = _this$props2.disableWidth,\n          style = _this$props2.style;\n      var _this$state = this.state,\n          height = _this$state.height,\n          width = _this$state.width; // Outer div should not force width/height since that may prevent containers from shrinking.\n      // Inner component should overflow and use calculated width/height.\n      // See issue #68 for more information.\n\n      var outerStyle = {\n        overflow: 'visible'\n      };\n      var childParams = {};\n\n      if (!disableHeight) {\n        outerStyle.height = 0;\n        childParams.height = height;\n      }\n\n      if (!disableWidth) {\n        outerStyle.width = 0;\n        childParams.width = width;\n      }\n      /**\n       * TODO: Avoid rendering children before the initial measurements have been collected.\n       * At best this would just be wasting cycles.\n       * Add this check into version 10 though as it could break too many ref callbacks in version 9.\n       * Note that if default width/height props were provided this would still work with SSR.\n      if (\n        height !== 0 &&\n        width !== 0\n      ) {\n        child = children({ height, width })\n      }\n      */\n\n\n      return React.createElement(\"div\", {\n        className: className,\n        ref: this._setRef,\n        style: _objectSpread({}, outerStyle, {}, style)\n      }, children(childParams));\n    }\n  }]);\n\n  return AutoSizer;\n}(React.Component), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  /** Function responsible for rendering children.*/\n  \"children\": PropTypes.func.isRequired,\n\n  /** Optional custom CSS class name to attach to root AutoSizer element.  */\n  \"className\": PropTypes.string,\n\n  /** Default height to use for initial render; useful for SSR */\n  \"defaultHeight\": PropTypes.number,\n\n  /** Default width to use for initial render; useful for SSR */\n  \"defaultWidth\": PropTypes.number,\n\n  /** Disable dynamic :height property */\n  \"disableHeight\": PropTypes.bool.isRequired,\n\n  /** Disable dynamic :width property */\n  \"disableWidth\": PropTypes.bool.isRequired,\n\n  /** Nonce of the inlined stylesheet for Content Security Policy */\n  \"nonce\": PropTypes.string,\n\n  /** Callback to be invoked on-resize */\n  \"onResize\": PropTypes.func.isRequired,\n\n  /** Optional inline style */\n  \"style\": PropTypes.object\n}), _temp);\n\n_defineProperty(AutoSizer, \"defaultProps\", {\n  onResize: function onResize() {},\n  disableHeight: false,\n  disableWidth: false,\n  style: {}\n});\n\nexport { AutoSizer as default };\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nimport * as React from 'react';\nimport { findDOMNode } from 'react-dom';\n\n/**\n * Wraps a cell and measures its rendered content.\n * Measurements are stored in a per-cell cache.\n * Cached-content is not be re-measured.\n */\nvar CellMeasurer = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(CellMeasurer, _React$PureComponent);\n\n  function CellMeasurer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CellMeasurer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CellMeasurer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"_child\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_measure\", function () {\n      var _this$props = _this.props,\n          cache = _this$props.cache,\n          _this$props$columnInd = _this$props.columnIndex,\n          columnIndex = _this$props$columnInd === void 0 ? 0 : _this$props$columnInd,\n          parent = _this$props.parent,\n          _this$props$rowIndex = _this$props.rowIndex,\n          rowIndex = _this$props$rowIndex === void 0 ? _this.props.index || 0 : _this$props$rowIndex;\n\n      var _this$_getCellMeasure = _this._getCellMeasurements(),\n          height = _this$_getCellMeasure.height,\n          width = _this$_getCellMeasure.width;\n\n      if (height !== cache.getHeight(rowIndex, columnIndex) || width !== cache.getWidth(rowIndex, columnIndex)) {\n        cache.set(rowIndex, columnIndex, width, height);\n\n        if (parent && typeof parent.recomputeGridSize === 'function') {\n          parent.recomputeGridSize({\n            columnIndex: columnIndex,\n            rowIndex: rowIndex\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_registerChild\", function (element) {\n      if (element && !(element instanceof Element)) {\n        console.warn('CellMeasurer registerChild expects to be passed Element or null');\n      }\n\n      _this._child = element;\n\n      if (element) {\n        _this._maybeMeasureCell();\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(CellMeasurer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._maybeMeasureCell();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._maybeMeasureCell();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      return typeof children === 'function' ? children({\n        measure: this._measure,\n        registerChild: this._registerChild\n      }) : children;\n    }\n  }, {\n    key: \"_getCellMeasurements\",\n    value: function _getCellMeasurements() {\n      var cache = this.props.cache;\n      var node = this._child || findDOMNode(this); // TODO Check for a bad combination of fixedWidth and missing numeric width or vice versa with height\n\n      if (node && node.ownerDocument && node.ownerDocument.defaultView && node instanceof node.ownerDocument.defaultView.HTMLElement) {\n        var styleWidth = node.style.width;\n        var styleHeight = node.style.height; // If we are re-measuring a cell that has already been measured,\n        // It will have a hard-coded width/height from the previous measurement.\n        // The fact that we are measuring indicates this measurement is probably stale,\n        // So explicitly clear it out (eg set to \"auto\") so we can recalculate.\n        // See issue #593 for more info.\n        // Even if we are measuring initially- if we're inside of a MultiGrid component,\n        // Explicitly clear width/height before measuring to avoid being tainted by another Grid.\n        // eg top/left Grid renders before bottom/right Grid\n        // Since the CellMeasurerCache is shared between them this taints derived cell size values.\n\n        if (!cache.hasFixedWidth()) {\n          node.style.width = 'auto';\n        }\n\n        if (!cache.hasFixedHeight()) {\n          node.style.height = 'auto';\n        }\n\n        var height = Math.ceil(node.offsetHeight);\n        var width = Math.ceil(node.offsetWidth); // Reset after measuring to avoid breaking styles; see #660\n\n        if (styleWidth) {\n          node.style.width = styleWidth;\n        }\n\n        if (styleHeight) {\n          node.style.height = styleHeight;\n        }\n\n        return {\n          height: height,\n          width: width\n        };\n      } else {\n        return {\n          height: 0,\n          width: 0\n        };\n      }\n    }\n  }, {\n    key: \"_maybeMeasureCell\",\n    value: function _maybeMeasureCell() {\n      var _this$props2 = this.props,\n          cache = _this$props2.cache,\n          _this$props2$columnIn = _this$props2.columnIndex,\n          columnIndex = _this$props2$columnIn === void 0 ? 0 : _this$props2$columnIn,\n          parent = _this$props2.parent,\n          _this$props2$rowIndex = _this$props2.rowIndex,\n          rowIndex = _this$props2$rowIndex === void 0 ? this.props.index || 0 : _this$props2$rowIndex;\n\n      if (!cache.has(rowIndex, columnIndex)) {\n        var _this$_getCellMeasure2 = this._getCellMeasurements(),\n            height = _this$_getCellMeasure2.height,\n            width = _this$_getCellMeasure2.width;\n\n        cache.set(rowIndex, columnIndex, width, height); // If size has changed, let Grid know to re-render.\n\n        if (parent && typeof parent.invalidateCellSizeAfterRender === 'function') {\n          parent.invalidateCellSizeAfterRender({\n            columnIndex: columnIndex,\n            rowIndex: rowIndex\n          });\n        }\n      }\n    }\n  }]);\n\n  return CellMeasurer;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"cache\": function cache() {\n    return (typeof bpfrpt_proptype_CellMeasureCache === \"function\" ? bpfrpt_proptype_CellMeasureCache.isRequired ? bpfrpt_proptype_CellMeasureCache.isRequired : bpfrpt_proptype_CellMeasureCache : PropTypes.shape(bpfrpt_proptype_CellMeasureCache).isRequired).apply(this, arguments);\n  },\n  \"children\": PropTypes.oneOfType([PropTypes.func, PropTypes.node]).isRequired,\n  \"columnIndex\": PropTypes.number,\n  \"index\": PropTypes.number,\n  \"parent\": PropTypes.shape({\n    invalidateCellSizeAfterRender: PropTypes.func,\n    recomputeGridSize: PropTypes.func\n  }).isRequired,\n  \"rowIndex\": PropTypes.number\n}), _temp); // Used for DEV mode warning check\n\n_defineProperty(CellMeasurer, \"__internalCellMeasurerFlag\", false);\n\nexport { CellMeasurer as default };\n\nif (process.env.NODE_ENV !== 'production') {\n  CellMeasurer.__internalCellMeasurerFlag = true;\n}\n\nimport { bpfrpt_proptype_CellMeasureCache } from \"./types\";\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nexport var DEFAULT_HEIGHT = 30;\nexport var DEFAULT_WIDTH = 100; // Enables more intelligent mapping of a given column and row index to an item ID.\n// This prevents a cell cache from being invalidated when its parent collection is modified.\n\n/**\n * Caches measurements for a given cell.\n */\nvar CellMeasurerCache =\n/*#__PURE__*/\nfunction () {\n  function CellMeasurerCache() {\n    var _this = this;\n\n    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, CellMeasurerCache);\n\n    _defineProperty(this, \"_cellHeightCache\", {});\n\n    _defineProperty(this, \"_cellWidthCache\", {});\n\n    _defineProperty(this, \"_columnWidthCache\", {});\n\n    _defineProperty(this, \"_rowHeightCache\", {});\n\n    _defineProperty(this, \"_defaultHeight\", void 0);\n\n    _defineProperty(this, \"_defaultWidth\", void 0);\n\n    _defineProperty(this, \"_minHeight\", void 0);\n\n    _defineProperty(this, \"_minWidth\", void 0);\n\n    _defineProperty(this, \"_keyMapper\", void 0);\n\n    _defineProperty(this, \"_hasFixedHeight\", void 0);\n\n    _defineProperty(this, \"_hasFixedWidth\", void 0);\n\n    _defineProperty(this, \"_columnCount\", 0);\n\n    _defineProperty(this, \"_rowCount\", 0);\n\n    _defineProperty(this, \"columnWidth\", function (_ref) {\n      var index = _ref.index;\n\n      var key = _this._keyMapper(0, index);\n\n      return _this._columnWidthCache[key] !== undefined ? _this._columnWidthCache[key] : _this._defaultWidth;\n    });\n\n    _defineProperty(this, \"rowHeight\", function (_ref2) {\n      var index = _ref2.index;\n\n      var key = _this._keyMapper(index, 0);\n\n      return _this._rowHeightCache[key] !== undefined ? _this._rowHeightCache[key] : _this._defaultHeight;\n    });\n\n    var defaultHeight = params.defaultHeight,\n        defaultWidth = params.defaultWidth,\n        fixedHeight = params.fixedHeight,\n        fixedWidth = params.fixedWidth,\n        keyMapper = params.keyMapper,\n        minHeight = params.minHeight,\n        minWidth = params.minWidth;\n    this._hasFixedHeight = fixedHeight === true;\n    this._hasFixedWidth = fixedWidth === true;\n    this._minHeight = minHeight || 0;\n    this._minWidth = minWidth || 0;\n    this._keyMapper = keyMapper || defaultKeyMapper;\n    this._defaultHeight = Math.max(this._minHeight, typeof defaultHeight === 'number' ? defaultHeight : DEFAULT_HEIGHT);\n    this._defaultWidth = Math.max(this._minWidth, typeof defaultWidth === 'number' ? defaultWidth : DEFAULT_WIDTH);\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (this._hasFixedHeight === false && this._hasFixedWidth === false) {\n        console.warn(\"CellMeasurerCache should only measure a cell's width or height. \" + 'You have configured CellMeasurerCache to measure both. ' + 'This will result in poor performance.');\n      }\n\n      if (this._hasFixedHeight === false && this._defaultHeight === 0) {\n        console.warn('Fixed height CellMeasurerCache should specify a :defaultHeight greater than 0. ' + 'Failing to do so will lead to unnecessary layout and poor performance.');\n      }\n\n      if (this._hasFixedWidth === false && this._defaultWidth === 0) {\n        console.warn('Fixed width CellMeasurerCache should specify a :defaultWidth greater than 0. ' + 'Failing to do so will lead to unnecessary layout and poor performance.');\n      }\n    }\n  }\n\n  _createClass(CellMeasurerCache, [{\n    key: \"clear\",\n    value: function clear(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      var key = this._keyMapper(rowIndex, columnIndex);\n\n      delete this._cellHeightCache[key];\n      delete this._cellWidthCache[key];\n\n      this._updateCachedColumnAndRowSizes(rowIndex, columnIndex);\n    }\n  }, {\n    key: \"clearAll\",\n    value: function clearAll() {\n      this._cellHeightCache = {};\n      this._cellWidthCache = {};\n      this._columnWidthCache = {};\n      this._rowHeightCache = {};\n      this._rowCount = 0;\n      this._columnCount = 0;\n    }\n  }, {\n    key: \"hasFixedHeight\",\n    value: function hasFixedHeight() {\n      return this._hasFixedHeight;\n    }\n  }, {\n    key: \"hasFixedWidth\",\n    value: function hasFixedWidth() {\n      return this._hasFixedWidth;\n    }\n  }, {\n    key: \"getHeight\",\n    value: function getHeight(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      if (this._hasFixedHeight) {\n        return this._defaultHeight;\n      } else {\n        var _key = this._keyMapper(rowIndex, columnIndex);\n\n        return this._cellHeightCache[_key] !== undefined ? Math.max(this._minHeight, this._cellHeightCache[_key]) : this._defaultHeight;\n      }\n    }\n  }, {\n    key: \"getWidth\",\n    value: function getWidth(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      if (this._hasFixedWidth) {\n        return this._defaultWidth;\n      } else {\n        var _key2 = this._keyMapper(rowIndex, columnIndex);\n\n        return this._cellWidthCache[_key2] !== undefined ? Math.max(this._minWidth, this._cellWidthCache[_key2]) : this._defaultWidth;\n      }\n    }\n  }, {\n    key: \"has\",\n    value: function has(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      var key = this._keyMapper(rowIndex, columnIndex);\n\n      return this._cellHeightCache[key] !== undefined;\n    }\n  }, {\n    key: \"set\",\n    value: function set(rowIndex, columnIndex, width, height) {\n      var key = this._keyMapper(rowIndex, columnIndex);\n\n      if (columnIndex >= this._columnCount) {\n        this._columnCount = columnIndex + 1;\n      }\n\n      if (rowIndex >= this._rowCount) {\n        this._rowCount = rowIndex + 1;\n      } // Size is cached per cell so we don't have to re-measure if cells are re-ordered.\n\n\n      this._cellHeightCache[key] = height;\n      this._cellWidthCache[key] = width;\n\n      this._updateCachedColumnAndRowSizes(rowIndex, columnIndex);\n    }\n  }, {\n    key: \"_updateCachedColumnAndRowSizes\",\n    value: function _updateCachedColumnAndRowSizes(rowIndex, columnIndex) {\n      // :columnWidth and :rowHeight are derived based on all cells in a column/row.\n      // Pre-cache these derived values for faster lookup later.\n      // Reads are expected to occur more frequently than writes in this case.\n      // Only update non-fixed dimensions though to avoid doing unnecessary work.\n      if (!this._hasFixedWidth) {\n        var columnWidth = 0;\n\n        for (var i = 0; i < this._rowCount; i++) {\n          columnWidth = Math.max(columnWidth, this.getWidth(i, columnIndex));\n        }\n\n        var columnKey = this._keyMapper(0, columnIndex);\n\n        this._columnWidthCache[columnKey] = columnWidth;\n      }\n\n      if (!this._hasFixedHeight) {\n        var rowHeight = 0;\n\n        for (var _i = 0; _i < this._columnCount; _i++) {\n          rowHeight = Math.max(rowHeight, this.getHeight(rowIndex, _i));\n        }\n\n        var rowKey = this._keyMapper(rowIndex, 0);\n\n        this._rowHeightCache[rowKey] = rowHeight;\n      }\n    }\n  }, {\n    key: \"defaultHeight\",\n    get: function get() {\n      return this._defaultHeight;\n    }\n  }, {\n    key: \"defaultWidth\",\n    get: function get() {\n      return this._defaultWidth;\n    }\n  }]);\n\n  return CellMeasurerCache;\n}();\n\nexport { CellMeasurerCache as default };\n\nfunction defaultKeyMapper(rowIndex, columnIndex) {\n  return \"\".concat(rowIndex, \"-\").concat(columnIndex);\n}\n\nimport { bpfrpt_proptype_CellMeasureCache } from \"./types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize'; // @TODO Merge Collection and CollectionView\n\n/**\n * Specifies the number of milliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nvar IS_SCROLLING_TIMEOUT = 150;\n/**\n * Controls whether the Grid updates the DOM element's scrollLeft/scrollTop based on the current state or just observes it.\n * This prevents Grid from interrupting mouse-wheel animations (see issue #2).\n */\n\nvar SCROLL_POSITION_CHANGE_REASONS = {\n  OBSERVED: 'observed',\n  REQUESTED: 'requested'\n};\n/**\n * Monitors changes in properties (eg. cellCount) and state (eg. scroll offsets) to determine when rendering needs to occur.\n * This component does not render any visible content itself; it defers to the specified :cellLayoutManager.\n */\n\nvar CollectionView =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(CollectionView, _React$PureComponent);\n\n  // Invokes callbacks only when their values have changed.\n  function CollectionView() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CollectionView);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CollectionView)).call.apply(_getPrototypeOf2, [this].concat(args))); // If this component is being rendered server-side, getScrollbarSize() will return undefined.\n    // We handle this case in componentDidMount()\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isScrolling: false,\n      scrollLeft: 0,\n      scrollTop: 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_calculateSizeAndPositionDataOnNextUpdate\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_onSectionRenderedMemoizer\", createCallbackMemoizer());\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollMemoizer\", createCallbackMemoizer(false));\n\n    _defineProperty(_assertThisInitialized(_this), \"_invokeOnSectionRenderedHelper\", function () {\n      var _this$props = _this.props,\n          cellLayoutManager = _this$props.cellLayoutManager,\n          onSectionRendered = _this$props.onSectionRendered;\n\n      _this._onSectionRenderedMemoizer({\n        callback: onSectionRendered,\n        indices: {\n          indices: cellLayoutManager.getLastRenderedIndices()\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_updateScrollPositionForScrollToCell\", function () {\n      var _this$props2 = _this.props,\n          cellLayoutManager = _this$props2.cellLayoutManager,\n          height = _this$props2.height,\n          scrollToAlignment = _this$props2.scrollToAlignment,\n          scrollToCell = _this$props2.scrollToCell,\n          width = _this$props2.width;\n      var _this$state = _this.state,\n          scrollLeft = _this$state.scrollLeft,\n          scrollTop = _this$state.scrollTop;\n\n      if (scrollToCell >= 0) {\n        var scrollPosition = cellLayoutManager.getScrollPositionForCell({\n          align: scrollToAlignment,\n          cellIndex: scrollToCell,\n          height: height,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          width: width\n        });\n\n        if (scrollPosition.scrollLeft !== scrollLeft || scrollPosition.scrollTop !== scrollTop) {\n          _this._setScrollPosition(scrollPosition);\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (event) {\n      // In certain edge-cases React dispatches an onScroll event with an invalid target.scrollLeft / target.scrollTop.\n      // This invalid event can be detected by comparing event.target to this component's scrollable DOM element.\n      // See issue #404 for more information.\n      if (event.target !== _this._scrollingContainer) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      _this._enablePointerEventsAfterDelay(); // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scrollTop never exceeds the total height.\n\n\n      var _this$props3 = _this.props,\n          cellLayoutManager = _this$props3.cellLayoutManager,\n          height = _this$props3.height,\n          isScrollingChange = _this$props3.isScrollingChange,\n          width = _this$props3.width;\n      var scrollbarSize = _this._scrollbarSize;\n\n      var _cellLayoutManager$ge = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge.height,\n          totalWidth = _cellLayoutManager$ge.width;\n\n      var scrollLeft = Math.max(0, Math.min(totalWidth - width + scrollbarSize, event.target.scrollLeft));\n      var scrollTop = Math.max(0, Math.min(totalHeight - height + scrollbarSize, event.target.scrollTop)); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n      if (_this.state.scrollLeft !== scrollLeft || _this.state.scrollTop !== scrollTop) {\n        // Browsers with cancelable scroll events (eg. Firefox) interrupt scrolling animations if scrollTop/scrollLeft is set.\n        // Other browsers (eg. Safari) don't scroll as well without the help under certain conditions (DOM or style changes during scrolling).\n        // All things considered, this seems to be the best current work around that I'm aware of.\n        // For more information see https://github.com/bvaughn/react-virtualized/pull/124\n        var scrollPositionChangeReason = event.cancelable ? SCROLL_POSITION_CHANGE_REASONS.OBSERVED : SCROLL_POSITION_CHANGE_REASONS.REQUESTED; // Synchronously set :isScrolling the first time (since _setNextState will reschedule its animation frame each time it's called)\n\n        if (!_this.state.isScrolling) {\n          isScrollingChange(true);\n        }\n\n        _this.setState({\n          isScrolling: true,\n          scrollLeft: scrollLeft,\n          scrollPositionChangeReason: scrollPositionChangeReason,\n          scrollTop: scrollTop\n        });\n      }\n\n      _this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        totalWidth: totalWidth,\n        totalHeight: totalHeight\n      });\n    });\n\n    _this._scrollbarSize = getScrollbarSize();\n\n    if (_this._scrollbarSize === undefined) {\n      _this._scrollbarSizeMeasured = false;\n      _this._scrollbarSize = 0;\n    } else {\n      _this._scrollbarSizeMeasured = true;\n    }\n\n    return _this;\n  }\n  /**\n   * Forced recompute of cell sizes and positions.\n   * This function should be called if cell sizes have changed but nothing else has.\n   * Since cell positions are calculated by callbacks, the collection view has no way of detecting when the underlying data has changed.\n   */\n\n\n  _createClass(CollectionView, [{\n    key: \"recomputeCellSizesAndPositions\",\n    value: function recomputeCellSizesAndPositions() {\n      this._calculateSizeAndPositionDataOnNextUpdate = true;\n      this.forceUpdate();\n    }\n    /* ---------------------------- Component lifecycle methods ---------------------------- */\n\n    /**\n     * @private\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) Empty content (0 rows or columns)\n     * 2) New scroll props overriding the current state\n     * 3) Cells-count or cells-size has changed, making previous scroll offsets invalid\n     */\n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props4 = this.props,\n          cellLayoutManager = _this$props4.cellLayoutManager,\n          scrollLeft = _this$props4.scrollLeft,\n          scrollToCell = _this$props4.scrollToCell,\n          scrollTop = _this$props4.scrollTop; // If this component was first rendered server-side, scrollbar size will be undefined.\n      // In that event we need to remeasure.\n\n      if (!this._scrollbarSizeMeasured) {\n        this._scrollbarSize = getScrollbarSize();\n        this._scrollbarSizeMeasured = true;\n        this.setState({});\n      }\n\n      if (scrollToCell >= 0) {\n        this._updateScrollPositionForScrollToCell();\n      } else if (scrollLeft >= 0 || scrollTop >= 0) {\n        this._setScrollPosition({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n      } // Update onSectionRendered callback.\n\n\n      this._invokeOnSectionRenderedHelper();\n\n      var _cellLayoutManager$ge2 = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge2.height,\n          totalWidth = _cellLayoutManager$ge2.width; // Initialize onScroll callback.\n\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft || 0,\n        scrollTop: scrollTop || 0,\n        totalHeight: totalHeight,\n        totalWidth: totalWidth\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this$props5 = this.props,\n          height = _this$props5.height,\n          scrollToAlignment = _this$props5.scrollToAlignment,\n          scrollToCell = _this$props5.scrollToCell,\n          width = _this$props5.width;\n      var _this$state2 = this.state,\n          scrollLeft = _this$state2.scrollLeft,\n          scrollPositionChangeReason = _this$state2.scrollPositionChangeReason,\n          scrollTop = _this$state2.scrollTop; // Make sure requested changes to :scrollLeft or :scrollTop get applied.\n      // Assigning to scrollLeft/scrollTop tells the browser to interrupt any running scroll animations,\n      // And to discard any pending async changes to the scroll position that may have happened in the meantime (e.g. on a separate scrolling thread).\n      // So we only set these when we require an adjustment of the scroll position.\n      // See issue #2 for more information.\n\n      if (scrollPositionChangeReason === SCROLL_POSITION_CHANGE_REASONS.REQUESTED) {\n        if (scrollLeft >= 0 && scrollLeft !== prevState.scrollLeft && scrollLeft !== this._scrollingContainer.scrollLeft) {\n          this._scrollingContainer.scrollLeft = scrollLeft;\n        }\n\n        if (scrollTop >= 0 && scrollTop !== prevState.scrollTop && scrollTop !== this._scrollingContainer.scrollTop) {\n          this._scrollingContainer.scrollTop = scrollTop;\n        }\n      } // Update scroll offsets if the current :scrollToCell values requires it\n\n\n      if (height !== prevProps.height || scrollToAlignment !== prevProps.scrollToAlignment || scrollToCell !== prevProps.scrollToCell || width !== prevProps.width) {\n        this._updateScrollPositionForScrollToCell();\n      } // Update onRowsRendered callback if start/stop indices have changed\n\n\n      this._invokeOnSectionRenderedHelper();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._disablePointerEventsTimeoutId) {\n        clearTimeout(this._disablePointerEventsTimeoutId);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props6 = this.props,\n          autoHeight = _this$props6.autoHeight,\n          cellCount = _this$props6.cellCount,\n          cellLayoutManager = _this$props6.cellLayoutManager,\n          className = _this$props6.className,\n          height = _this$props6.height,\n          horizontalOverscanSize = _this$props6.horizontalOverscanSize,\n          id = _this$props6.id,\n          noContentRenderer = _this$props6.noContentRenderer,\n          style = _this$props6.style,\n          verticalOverscanSize = _this$props6.verticalOverscanSize,\n          width = _this$props6.width;\n      var _this$state3 = this.state,\n          isScrolling = _this$state3.isScrolling,\n          scrollLeft = _this$state3.scrollLeft,\n          scrollTop = _this$state3.scrollTop; // Memoization reset\n\n      if (this._lastRenderedCellCount !== cellCount || this._lastRenderedCellLayoutManager !== cellLayoutManager || this._calculateSizeAndPositionDataOnNextUpdate) {\n        this._lastRenderedCellCount = cellCount;\n        this._lastRenderedCellLayoutManager = cellLayoutManager;\n        this._calculateSizeAndPositionDataOnNextUpdate = false;\n        cellLayoutManager.calculateSizeAndPositionData();\n      }\n\n      var _cellLayoutManager$ge3 = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge3.height,\n          totalWidth = _cellLayoutManager$ge3.width; // Safely expand the rendered area by the specified overscan amount\n\n\n      var left = Math.max(0, scrollLeft - horizontalOverscanSize);\n      var top = Math.max(0, scrollTop - verticalOverscanSize);\n      var right = Math.min(totalWidth, scrollLeft + width + horizontalOverscanSize);\n      var bottom = Math.min(totalHeight, scrollTop + height + verticalOverscanSize);\n      var childrenToDisplay = height > 0 && width > 0 ? cellLayoutManager.cellRenderers({\n        height: bottom - top,\n        isScrolling: isScrolling,\n        width: right - left,\n        x: left,\n        y: top\n      }) : [];\n      var collectionStyle = {\n        boxSizing: 'border-box',\n        direction: 'ltr',\n        height: autoHeight ? 'auto' : height,\n        position: 'relative',\n        WebkitOverflowScrolling: 'touch',\n        width: width,\n        willChange: 'transform'\n      }; // Force browser to hide scrollbars when we know they aren't necessary.\n      // Otherwise once scrollbars appear they may not disappear again.\n      // For more info see issue #116\n\n      var verticalScrollBarSize = totalHeight > height ? this._scrollbarSize : 0;\n      var horizontalScrollBarSize = totalWidth > width ? this._scrollbarSize : 0; // Also explicitly init styles to 'auto' if scrollbars are required.\n      // This works around an obscure edge case where external CSS styles have not yet been loaded,\n      // But an initial scroll index of offset is set as an external prop.\n      // Without this style, Grid would render the correct range of cells but would NOT update its internal offset.\n      // This was originally reported via clauderic/react-infinite-calendar/issues/23\n\n      collectionStyle.overflowX = totalWidth + verticalScrollBarSize <= width ? 'hidden' : 'auto';\n      collectionStyle.overflowY = totalHeight + horizontalScrollBarSize <= height ? 'hidden' : 'auto';\n      return React.createElement(\"div\", {\n        ref: this._setScrollingContainerRef,\n        \"aria-label\": this.props['aria-label'],\n        className: clsx('ReactVirtualized__Collection', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: \"grid\",\n        style: _objectSpread({}, collectionStyle, {}, style),\n        tabIndex: 0\n      }, cellCount > 0 && React.createElement(\"div\", {\n        className: \"ReactVirtualized__Collection__innerScrollContainer\",\n        style: {\n          height: totalHeight,\n          maxHeight: totalHeight,\n          maxWidth: totalWidth,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          width: totalWidth\n        }\n      }, childrenToDisplay), cellCount === 0 && noContentRenderer());\n    }\n    /* ---------------------------- Helper methods ---------------------------- */\n\n    /**\n     * Sets an :isScrolling flag for a small window of time.\n     * This flag is used to disable pointer events on the scrollable portion of the Collection.\n     * This prevents jerky/stuttery mouse-wheel scrolling.\n     */\n\n  }, {\n    key: \"_enablePointerEventsAfterDelay\",\n    value: function _enablePointerEventsAfterDelay() {\n      var _this2 = this;\n\n      if (this._disablePointerEventsTimeoutId) {\n        clearTimeout(this._disablePointerEventsTimeoutId);\n      }\n\n      this._disablePointerEventsTimeoutId = setTimeout(function () {\n        var isScrollingChange = _this2.props.isScrollingChange;\n        isScrollingChange(false);\n        _this2._disablePointerEventsTimeoutId = null;\n\n        _this2.setState({\n          isScrolling: false\n        });\n      }, IS_SCROLLING_TIMEOUT);\n    }\n  }, {\n    key: \"_invokeOnScrollMemoizer\",\n    value: function _invokeOnScrollMemoizer(_ref) {\n      var _this3 = this;\n\n      var scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop,\n          totalHeight = _ref.totalHeight,\n          totalWidth = _ref.totalWidth;\n\n      this._onScrollMemoizer({\n        callback: function callback(_ref2) {\n          var scrollLeft = _ref2.scrollLeft,\n              scrollTop = _ref2.scrollTop;\n          var _this3$props = _this3.props,\n              height = _this3$props.height,\n              onScroll = _this3$props.onScroll,\n              width = _this3$props.width;\n          onScroll({\n            clientHeight: height,\n            clientWidth: width,\n            scrollHeight: totalHeight,\n            scrollLeft: scrollLeft,\n            scrollTop: scrollTop,\n            scrollWidth: totalWidth\n          });\n        },\n        indices: {\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        }\n      });\n    }\n  }, {\n    key: \"_setScrollPosition\",\n    value: function _setScrollPosition(_ref3) {\n      var scrollLeft = _ref3.scrollLeft,\n          scrollTop = _ref3.scrollTop;\n      var newState = {\n        scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n      };\n\n      if (scrollLeft >= 0) {\n        newState.scrollLeft = scrollLeft;\n      }\n\n      if (scrollTop >= 0) {\n        newState.scrollTop = scrollTop;\n      }\n\n      if (scrollLeft >= 0 && scrollLeft !== this.state.scrollLeft || scrollTop >= 0 && scrollTop !== this.state.scrollTop) {\n        this.setState(newState);\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.cellCount === 0 && (prevState.scrollLeft !== 0 || prevState.scrollTop !== 0)) {\n        return {\n          scrollLeft: 0,\n          scrollTop: 0,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n        };\n      } else if (nextProps.scrollLeft !== prevState.scrollLeft || nextProps.scrollTop !== prevState.scrollTop) {\n        return {\n          scrollLeft: nextProps.scrollLeft != null ? nextProps.scrollLeft : prevState.scrollLeft,\n          scrollTop: nextProps.scrollTop != null ? nextProps.scrollTop : prevState.scrollTop,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return CollectionView;\n}(React.PureComponent);\n\n_defineProperty(CollectionView, \"defaultProps\", {\n  'aria-label': 'grid',\n  horizontalOverscanSize: 0,\n  noContentRenderer: function noContentRenderer() {\n    return null;\n  },\n  onScroll: function onScroll() {\n    return null;\n  },\n  onSectionRendered: function onSectionRendered() {\n    return null;\n  },\n  scrollToAlignment: 'auto',\n  scrollToCell: -1,\n  style: {},\n  verticalOverscanSize: 0\n});\n\nCollectionView.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  'aria-label': PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  autoHeight: PropTypes.bool,\n\n  /**\n   * Number of cells in collection.\n   */\n  cellCount: PropTypes.number.isRequired,\n\n  /**\n   * Calculates cell sizes and positions and manages rendering the appropriate cells given a specified window.\n   */\n  cellLayoutManager: PropTypes.object.isRequired,\n\n  /**\n   * Optional custom CSS class name to attach to root Collection element.\n   */\n  className: PropTypes.string,\n\n  /**\n   * Height of Collection; this property determines the number of visible (vs virtualized) rows.\n   */\n  height: PropTypes.number.isRequired,\n\n  /**\n   * Optional custom id to attach to root Collection element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * Enables the `Collection` to horiontally \"overscan\" its content similar to how `Grid` does.\n   * This can reduce flicker around the edges when a user scrolls quickly.\n   */\n  horizontalOverscanSize: PropTypes.number.isRequired,\n  isScrollingChange: PropTypes.func,\n\n  /**\n   * Optional renderer to be used in place of rows when either :rowCount or :cellCount is 0.\n   */\n  noContentRenderer: PropTypes.func.isRequired,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   * ({ clientHeight, clientWidth, scrollHeight, scrollLeft, scrollTop, scrollWidth }): void\n   */\n  onScroll: PropTypes.func.isRequired,\n\n  /**\n   * Callback invoked with information about the section of the Collection that was just rendered.\n   * This callback is passed a named :indices parameter which is an Array of the most recently rendered section indices.\n   */\n  onSectionRendered: PropTypes.func.isRequired,\n\n  /**\n   * Horizontal offset.\n   */\n  scrollLeft: PropTypes.number,\n\n  /**\n   * Controls scroll-to-cell behavior of the Grid.\n   * The default (\"auto\") scrolls the least amount possible to ensure that the specified cell is fully visible.\n   * Use \"start\" to align cells to the top/left of the Grid and \"end\" to align bottom/right.\n   */\n  scrollToAlignment: PropTypes.oneOf(['auto', 'end', 'start', 'center']).isRequired,\n\n  /**\n   * Cell index to ensure visible (by forcefully scrolling if necessary).\n   */\n  scrollToCell: PropTypes.number.isRequired,\n\n  /**\n   * Vertical offset.\n   */\n  scrollTop: PropTypes.number,\n\n  /**\n   * Optional custom inline style to attach to root Collection element.\n   */\n  style: PropTypes.object,\n\n  /**\n   * Enables the `Collection` to vertically \"overscan\" its content similar to how `Grid` does.\n   * This can reduce flicker around the edges when a user scrolls quickly.\n   */\n  verticalOverscanSize: PropTypes.number.isRequired,\n\n  /**\n   * Width of Collection; this property determines the number of visible (vs virtualized) columns.\n   */\n  width: PropTypes.number.isRequired\n} : {};\npolyfill(CollectionView);\nexport default CollectionView;","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\n/**\n * A section of the Window.\n * Window Sections are used to group nearby cells.\n * This enables us to more quickly determine which cells to display in a given region of the Window.\n * Sections have a fixed size and contain 0 to many cells (tracked by their indices).\n */\nvar Section =\n/*#__PURE__*/\nfunction () {\n  function Section(_ref) {\n    var height = _ref.height,\n        width = _ref.width,\n        x = _ref.x,\n        y = _ref.y;\n\n    _classCallCheck(this, Section);\n\n    this.height = height;\n    this.width = width;\n    this.x = x;\n    this.y = y;\n    this._indexMap = {};\n    this._indices = [];\n  }\n  /** Add a cell to this section. */\n\n\n  _createClass(Section, [{\n    key: \"addCellIndex\",\n    value: function addCellIndex(_ref2) {\n      var index = _ref2.index;\n\n      if (!this._indexMap[index]) {\n        this._indexMap[index] = true;\n\n        this._indices.push(index);\n      }\n    }\n    /** Get all cell indices that have been added to this section. */\n\n  }, {\n    key: \"getCellIndices\",\n    value: function getCellIndices() {\n      return this._indices;\n    }\n    /** Intended for debugger/test purposes only */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"\".concat(this.x, \",\").concat(this.y, \" \").concat(this.width, \"x\").concat(this.height);\n    }\n  }]);\n\n  return Section;\n}();\n\nexport { Section as default };\nimport { bpfrpt_proptype_Index } from \"./types\";\nimport { bpfrpt_proptype_SizeAndPositionInfo } from \"./types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\n/**\n * Window Sections are used to group nearby cells.\n * This enables us to more quickly determine which cells to display in a given region of the Window.\n * \n */\nimport Section from './Section';\nvar SECTION_SIZE = 100;\n\n/**\n * Contains 0 to many Sections.\n * Grows (and adds Sections) dynamically as cells are registered.\n * Automatically adds cells to the appropriate Section(s).\n */\nvar SectionManager =\n/*#__PURE__*/\nfunction () {\n  function SectionManager() {\n    var sectionSize = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : SECTION_SIZE;\n\n    _classCallCheck(this, SectionManager);\n\n    this._sectionSize = sectionSize;\n    this._cellMetadata = [];\n    this._sections = {};\n  }\n  /**\n   * Gets all cell indices contained in the specified region.\n   * A region may encompass 1 or more Sections.\n   */\n\n\n  _createClass(SectionManager, [{\n    key: \"getCellIndices\",\n    value: function getCellIndices(_ref) {\n      var height = _ref.height,\n          width = _ref.width,\n          x = _ref.x,\n          y = _ref.y;\n      var indices = {};\n      this.getSections({\n        height: height,\n        width: width,\n        x: x,\n        y: y\n      }).forEach(function (section) {\n        return section.getCellIndices().forEach(function (index) {\n          indices[index] = index;\n        });\n      }); // Object keys are strings; this function returns numbers\n\n      return Object.keys(indices).map(function (index) {\n        return indices[index];\n      });\n    }\n    /** Get size and position information for the cell specified. */\n\n  }, {\n    key: \"getCellMetadata\",\n    value: function getCellMetadata(_ref2) {\n      var index = _ref2.index;\n      return this._cellMetadata[index];\n    }\n    /** Get all Sections overlapping the specified region. */\n\n  }, {\n    key: \"getSections\",\n    value: function getSections(_ref3) {\n      var height = _ref3.height,\n          width = _ref3.width,\n          x = _ref3.x,\n          y = _ref3.y;\n      var sectionXStart = Math.floor(x / this._sectionSize);\n      var sectionXStop = Math.floor((x + width - 1) / this._sectionSize);\n      var sectionYStart = Math.floor(y / this._sectionSize);\n      var sectionYStop = Math.floor((y + height - 1) / this._sectionSize);\n      var sections = [];\n\n      for (var sectionX = sectionXStart; sectionX <= sectionXStop; sectionX++) {\n        for (var sectionY = sectionYStart; sectionY <= sectionYStop; sectionY++) {\n          var key = \"\".concat(sectionX, \".\").concat(sectionY);\n\n          if (!this._sections[key]) {\n            this._sections[key] = new Section({\n              height: this._sectionSize,\n              width: this._sectionSize,\n              x: sectionX * this._sectionSize,\n              y: sectionY * this._sectionSize\n            });\n          }\n\n          sections.push(this._sections[key]);\n        }\n      }\n\n      return sections;\n    }\n    /** Total number of Sections based on the currently registered cells. */\n\n  }, {\n    key: \"getTotalSectionCount\",\n    value: function getTotalSectionCount() {\n      return Object.keys(this._sections).length;\n    }\n    /** Intended for debugger/test purposes only */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var _this = this;\n\n      return Object.keys(this._sections).map(function (index) {\n        return _this._sections[index].toString();\n      });\n    }\n    /** Adds a cell to the appropriate Sections and registers it metadata for later retrievable. */\n\n  }, {\n    key: \"registerCell\",\n    value: function registerCell(_ref4) {\n      var cellMetadatum = _ref4.cellMetadatum,\n          index = _ref4.index;\n      this._cellMetadata[index] = cellMetadatum;\n      this.getSections(cellMetadatum).forEach(function (section) {\n        return section.addCellIndex({\n          index: index\n        });\n      });\n    }\n  }]);\n\n  return SectionManager;\n}();\n\nexport { SectionManager as default };\nimport { bpfrpt_proptype_Index } from \"./types\";\nimport { bpfrpt_proptype_SizeAndPositionInfo } from \"./types\";","/**\n * Determines a new offset that ensures a certain cell is visible, given the current offset.\n * If the cell is already visible then the current offset will be returned.\n * If the current offset is too great or small, it will be adjusted just enough to ensure the specified index is visible.\n *\n * @param align Desired alignment within container; one of \"auto\" (default), \"start\", or \"end\"\n * @param cellOffset Offset (x or y) position for cell\n * @param cellSize Size (width or height) of cell\n * @param containerSize Total size (width or height) of the container\n * @param currentOffset Container's current (x or y) offset\n * @return Offset to use to ensure the specified cell is visible\n */\nexport default function getUpdatedOffsetForIndex(_ref) {\n  var _ref$align = _ref.align,\n      align = _ref$align === void 0 ? 'auto' : _ref$align,\n      cellOffset = _ref.cellOffset,\n      cellSize = _ref.cellSize,\n      containerSize = _ref.containerSize,\n      currentOffset = _ref.currentOffset;\n  var maxOffset = cellOffset;\n  var minOffset = maxOffset - containerSize + cellSize;\n\n  switch (align) {\n    case 'start':\n      return maxOffset;\n\n    case 'end':\n      return minOffset;\n\n    case 'center':\n      return maxOffset - (containerSize - cellSize) / 2;\n\n    default:\n      return Math.max(minOffset, Math.min(maxOffset, currentOffset));\n  }\n}","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport CollectionView from './CollectionView';\nimport _calculateSizeAndPositionData from './utils/calculateSizeAndPositionData';\nimport getUpdatedOffsetForIndex from '../utils/getUpdatedOffsetForIndex';\n\n/**\n * Renders scattered or non-linear data.\n * Unlike Grid, which renders checkerboard data, Collection can render arbitrarily positioned- even overlapping- data.\n */\nvar Collection =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Collection, _React$PureComponent);\n\n  function Collection(props, context) {\n    var _this;\n\n    _classCallCheck(this, Collection);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Collection).call(this, props, context));\n    _this._cellMetadata = [];\n    _this._lastRenderedCellIndices = []; // Cell cache during scroll (for performance)\n\n    _this._cellCache = [];\n    _this._isScrollingChange = _this._isScrollingChange.bind(_assertThisInitialized(_this));\n    _this._setCollectionViewRef = _this._setCollectionViewRef.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Collection, [{\n    key: \"forceUpdate\",\n    value: function forceUpdate() {\n      if (this._collectionView !== undefined) {\n        this._collectionView.forceUpdate();\n      }\n    }\n    /** See Collection#recomputeCellSizesAndPositions */\n\n  }, {\n    key: \"recomputeCellSizesAndPositions\",\n    value: function recomputeCellSizesAndPositions() {\n      this._cellCache = [];\n\n      this._collectionView.recomputeCellSizesAndPositions();\n    }\n    /** React lifecycle methods */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var props = _extends({}, this.props);\n\n      return React.createElement(CollectionView, _extends({\n        cellLayoutManager: this,\n        isScrollingChange: this._isScrollingChange,\n        ref: this._setCollectionViewRef\n      }, props));\n    }\n    /** CellLayoutManager interface */\n\n  }, {\n    key: \"calculateSizeAndPositionData\",\n    value: function calculateSizeAndPositionData() {\n      var _this$props = this.props,\n          cellCount = _this$props.cellCount,\n          cellSizeAndPositionGetter = _this$props.cellSizeAndPositionGetter,\n          sectionSize = _this$props.sectionSize;\n\n      var data = _calculateSizeAndPositionData({\n        cellCount: cellCount,\n        cellSizeAndPositionGetter: cellSizeAndPositionGetter,\n        sectionSize: sectionSize\n      });\n\n      this._cellMetadata = data.cellMetadata;\n      this._sectionManager = data.sectionManager;\n      this._height = data.height;\n      this._width = data.width;\n    }\n    /**\n     * Returns the most recently rendered set of cell indices.\n     */\n\n  }, {\n    key: \"getLastRenderedIndices\",\n    value: function getLastRenderedIndices() {\n      return this._lastRenderedCellIndices;\n    }\n    /**\n     * Calculates the minimum amount of change from the current scroll position to ensure the specified cell is (fully) visible.\n     */\n\n  }, {\n    key: \"getScrollPositionForCell\",\n    value: function getScrollPositionForCell(_ref) {\n      var align = _ref.align,\n          cellIndex = _ref.cellIndex,\n          height = _ref.height,\n          scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop,\n          width = _ref.width;\n      var cellCount = this.props.cellCount;\n\n      if (cellIndex >= 0 && cellIndex < cellCount) {\n        var cellMetadata = this._cellMetadata[cellIndex];\n        scrollLeft = getUpdatedOffsetForIndex({\n          align: align,\n          cellOffset: cellMetadata.x,\n          cellSize: cellMetadata.width,\n          containerSize: width,\n          currentOffset: scrollLeft,\n          targetIndex: cellIndex\n        });\n        scrollTop = getUpdatedOffsetForIndex({\n          align: align,\n          cellOffset: cellMetadata.y,\n          cellSize: cellMetadata.height,\n          containerSize: height,\n          currentOffset: scrollTop,\n          targetIndex: cellIndex\n        });\n      }\n\n      return {\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      };\n    }\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      return {\n        height: this._height,\n        width: this._width\n      };\n    }\n  }, {\n    key: \"cellRenderers\",\n    value: function cellRenderers(_ref2) {\n      var _this2 = this;\n\n      var height = _ref2.height,\n          isScrolling = _ref2.isScrolling,\n          width = _ref2.width,\n          x = _ref2.x,\n          y = _ref2.y;\n      var _this$props2 = this.props,\n          cellGroupRenderer = _this$props2.cellGroupRenderer,\n          cellRenderer = _this$props2.cellRenderer; // Store for later calls to getLastRenderedIndices()\n\n      this._lastRenderedCellIndices = this._sectionManager.getCellIndices({\n        height: height,\n        width: width,\n        x: x,\n        y: y\n      });\n      return cellGroupRenderer({\n        cellCache: this._cellCache,\n        cellRenderer: cellRenderer,\n        cellSizeAndPositionGetter: function cellSizeAndPositionGetter(_ref3) {\n          var index = _ref3.index;\n          return _this2._sectionManager.getCellMetadata({\n            index: index\n          });\n        },\n        indices: this._lastRenderedCellIndices,\n        isScrolling: isScrolling\n      });\n    }\n  }, {\n    key: \"_isScrollingChange\",\n    value: function _isScrollingChange(isScrolling) {\n      if (!isScrolling) {\n        this._cellCache = [];\n      }\n    }\n  }, {\n    key: \"_setCollectionViewRef\",\n    value: function _setCollectionViewRef(ref) {\n      this._collectionView = ref;\n    }\n  }]);\n\n  return Collection;\n}(React.PureComponent);\n\n_defineProperty(Collection, \"defaultProps\", {\n  'aria-label': 'grid',\n  cellGroupRenderer: defaultCellGroupRenderer\n});\n\nexport { Collection as default };\nCollection.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  'aria-label': PropTypes.string,\n\n  /**\n   * Number of cells in Collection.\n   */\n  cellCount: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a group of cells given their indices.\n   * Should implement the following interface: ({\n   *   cellSizeAndPositionGetter:Function,\n   *   indices: Array<number>,\n   *   cellRenderer: Function\n   * }): Array<PropTypes.node>\n   */\n  cellGroupRenderer: PropTypes.func.isRequired,\n\n  /**\n   * Responsible for rendering a cell given an row and column index.\n   * Should implement the following interface: ({ index: number, key: string, style: object }): PropTypes.element\n   */\n  cellRenderer: PropTypes.func.isRequired,\n\n  /**\n   * Callback responsible for returning size and offset/position information for a given cell (index).\n   * ({ index: number }): { height: number, width: number, x: number, y: number }\n   */\n  cellSizeAndPositionGetter: PropTypes.func.isRequired,\n\n  /**\n   * Optionally override the size of the sections a Collection's cells are split into.\n   */\n  sectionSize: PropTypes.number\n} : {};\n\nfunction defaultCellGroupRenderer(_ref4) {\n  var cellCache = _ref4.cellCache,\n      cellRenderer = _ref4.cellRenderer,\n      cellSizeAndPositionGetter = _ref4.cellSizeAndPositionGetter,\n      indices = _ref4.indices,\n      isScrolling = _ref4.isScrolling;\n  return indices.map(function (index) {\n    var cellMetadata = cellSizeAndPositionGetter({\n      index: index\n    });\n    var cellRendererProps = {\n      index: index,\n      isScrolling: isScrolling,\n      key: index,\n      style: {\n        height: cellMetadata.height,\n        left: cellMetadata.x,\n        position: 'absolute',\n        top: cellMetadata.y,\n        width: cellMetadata.width\n      }\n    }; // Avoid re-creating cells while scrolling.\n    // This can lead to the same cell being created many times and can cause performance issues for \"heavy\" cells.\n    // If a scroll is in progress- cache and reuse cells.\n    // This cache will be thrown away once scrolling complets.\n\n    if (isScrolling) {\n      if (!(index in cellCache)) {\n        cellCache[index] = cellRenderer(cellRendererProps);\n      }\n\n      return cellCache[index];\n    } else {\n      return cellRenderer(cellRendererProps);\n    }\n  }).filter(function (renderedCell) {\n    return !!renderedCell;\n  });\n}\n\nimport { bpfrpt_proptype_ScrollPosition } from \"./types\";\nimport { bpfrpt_proptype_SizeInfo } from \"./types\";","import SectionManager from '../SectionManager';\nexport default function calculateSizeAndPositionData(_ref) {\n  var cellCount = _ref.cellCount,\n      cellSizeAndPositionGetter = _ref.cellSizeAndPositionGetter,\n      sectionSize = _ref.sectionSize;\n  var cellMetadata = [];\n  var sectionManager = new SectionManager(sectionSize);\n  var height = 0;\n  var width = 0;\n\n  for (var index = 0; index < cellCount; index++) {\n    var cellMetadatum = cellSizeAndPositionGetter({\n      index: index\n    });\n\n    if (cellMetadatum.height == null || isNaN(cellMetadatum.height) || cellMetadatum.width == null || isNaN(cellMetadatum.width) || cellMetadatum.x == null || isNaN(cellMetadatum.x) || cellMetadatum.y == null || isNaN(cellMetadatum.y)) {\n      throw Error(\"Invalid metadata returned for cell \".concat(index, \":\\n        x:\").concat(cellMetadatum.x, \", y:\").concat(cellMetadatum.y, \", width:\").concat(cellMetadatum.width, \", height:\").concat(cellMetadatum.height));\n    }\n\n    height = Math.max(height, cellMetadatum.y + cellMetadatum.height);\n    width = Math.max(width, cellMetadatum.x + cellMetadatum.width);\n    cellMetadata[index] = cellMetadatum;\n    sectionManager.registerCell({\n      cellMetadatum: cellMetadatum,\n      index: index\n    });\n  }\n\n  return {\n    cellMetadata: cellMetadata,\n    height: height,\n    sectionManager: sectionManager,\n    width: width\n  };\n}","import Collection from './Collection';\nexport default Collection;\nexport { Collection };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\n/**\n * High-order component that auto-calculates column-widths for `Grid` cells.\n */\n\nvar ColumnSizer =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(ColumnSizer, _React$PureComponent);\n\n  function ColumnSizer(props, context) {\n    var _this;\n\n    _classCallCheck(this, ColumnSizer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ColumnSizer).call(this, props, context));\n    _this._registerChild = _this._registerChild.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ColumnSizer, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props = this.props,\n          columnMaxWidth = _this$props.columnMaxWidth,\n          columnMinWidth = _this$props.columnMinWidth,\n          columnCount = _this$props.columnCount,\n          width = _this$props.width;\n\n      if (columnMaxWidth !== prevProps.columnMaxWidth || columnMinWidth !== prevProps.columnMinWidth || columnCount !== prevProps.columnCount || width !== prevProps.width) {\n        if (this._registeredChild) {\n          this._registeredChild.recomputeGridSize();\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          children = _this$props2.children,\n          columnMaxWidth = _this$props2.columnMaxWidth,\n          columnMinWidth = _this$props2.columnMinWidth,\n          columnCount = _this$props2.columnCount,\n          width = _this$props2.width;\n      var safeColumnMinWidth = columnMinWidth || 1;\n      var safeColumnMaxWidth = columnMaxWidth ? Math.min(columnMaxWidth, width) : width;\n      var columnWidth = width / columnCount;\n      columnWidth = Math.max(safeColumnMinWidth, columnWidth);\n      columnWidth = Math.min(safeColumnMaxWidth, columnWidth);\n      columnWidth = Math.floor(columnWidth);\n      var adjustedWidth = Math.min(width, columnWidth * columnCount);\n      return children({\n        adjustedWidth: adjustedWidth,\n        columnWidth: columnWidth,\n        getColumnWidth: function getColumnWidth() {\n          return columnWidth;\n        },\n        registerChild: this._registerChild\n      });\n    }\n  }, {\n    key: \"_registerChild\",\n    value: function _registerChild(child) {\n      if (child && typeof child.recomputeGridSize !== 'function') {\n        throw Error('Unexpected child type registered; only Grid/MultiGrid children are supported.');\n      }\n\n      this._registeredChild = child;\n\n      if (this._registeredChild) {\n        this._registeredChild.recomputeGridSize();\n      }\n    }\n  }]);\n\n  return ColumnSizer;\n}(React.PureComponent);\n\nexport { ColumnSizer as default };\nColumnSizer.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering a virtualized Grid.\n   * This function should implement the following signature:\n   * ({ adjustedWidth, getColumnWidth, registerChild }) => PropTypes.element\n   *\n   * The specified :getColumnWidth function should be passed to the Grid's :columnWidth property.\n   * The :registerChild should be passed to the Grid's :ref property.\n   * The :adjustedWidth property is optional; it reflects the lesser of the overall width or the width of all columns.\n   */\n  children: PropTypes.func.isRequired,\n\n  /** Optional maximum allowed column width */\n  columnMaxWidth: PropTypes.number,\n\n  /** Optional minimum allowed column width */\n  columnMinWidth: PropTypes.number,\n\n  /** Number of columns in Grid or Table child */\n  columnCount: PropTypes.number.isRequired,\n\n  /** Width of Grid or Table child */\n  width: PropTypes.number.isRequired\n} : {};","import ColumnSizer from './ColumnSizer';\nexport default ColumnSizer;\nexport { ColumnSizer };","import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\n/**\n * Higher-order component that manages lazy-loading for \"infinite\" data.\n * This component decorates a virtual component and just-in-time prefetches rows as a user scrolls.\n * It is intended as a convenience component; fork it if you'd like finer-grained control over data-loading.\n */\n\nvar InfiniteLoader =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(InfiniteLoader, _React$PureComponent);\n\n  function InfiniteLoader(props, context) {\n    var _this;\n\n    _classCallCheck(this, InfiniteLoader);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(InfiniteLoader).call(this, props, context));\n    _this._loadMoreRowsMemoizer = createCallbackMemoizer();\n    _this._onRowsRendered = _this._onRowsRendered.bind(_assertThisInitialized(_this));\n    _this._registerChild = _this._registerChild.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(InfiniteLoader, [{\n    key: \"resetLoadMoreRowsCache\",\n    value: function resetLoadMoreRowsCache(autoReload) {\n      this._loadMoreRowsMemoizer = createCallbackMemoizer();\n\n      if (autoReload) {\n        this._doStuff(this._lastRenderedStartIndex, this._lastRenderedStopIndex);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      return children({\n        onRowsRendered: this._onRowsRendered,\n        registerChild: this._registerChild\n      });\n    }\n  }, {\n    key: \"_loadUnloadedRanges\",\n    value: function _loadUnloadedRanges(unloadedRanges) {\n      var _this2 = this;\n\n      var loadMoreRows = this.props.loadMoreRows;\n      unloadedRanges.forEach(function (unloadedRange) {\n        var promise = loadMoreRows(unloadedRange);\n\n        if (promise) {\n          promise.then(function () {\n            // Refresh the visible rows if any of them have just been loaded.\n            // Otherwise they will remain in their unloaded visual state.\n            if (isRangeVisible({\n              lastRenderedStartIndex: _this2._lastRenderedStartIndex,\n              lastRenderedStopIndex: _this2._lastRenderedStopIndex,\n              startIndex: unloadedRange.startIndex,\n              stopIndex: unloadedRange.stopIndex\n            })) {\n              if (_this2._registeredChild) {\n                forceUpdateReactVirtualizedComponent(_this2._registeredChild, _this2._lastRenderedStartIndex);\n              }\n            }\n          });\n        }\n      });\n    }\n  }, {\n    key: \"_onRowsRendered\",\n    value: function _onRowsRendered(_ref) {\n      var startIndex = _ref.startIndex,\n          stopIndex = _ref.stopIndex;\n      this._lastRenderedStartIndex = startIndex;\n      this._lastRenderedStopIndex = stopIndex;\n\n      this._doStuff(startIndex, stopIndex);\n    }\n  }, {\n    key: \"_doStuff\",\n    value: function _doStuff(startIndex, stopIndex) {\n      var _ref2,\n          _this3 = this;\n\n      var _this$props = this.props,\n          isRowLoaded = _this$props.isRowLoaded,\n          minimumBatchSize = _this$props.minimumBatchSize,\n          rowCount = _this$props.rowCount,\n          threshold = _this$props.threshold;\n      var unloadedRanges = scanForUnloadedRanges({\n        isRowLoaded: isRowLoaded,\n        minimumBatchSize: minimumBatchSize,\n        rowCount: rowCount,\n        startIndex: Math.max(0, startIndex - threshold),\n        stopIndex: Math.min(rowCount - 1, stopIndex + threshold)\n      }); // For memoize comparison\n\n      var squashedUnloadedRanges = (_ref2 = []).concat.apply(_ref2, _toConsumableArray(unloadedRanges.map(function (_ref3) {\n        var startIndex = _ref3.startIndex,\n            stopIndex = _ref3.stopIndex;\n        return [startIndex, stopIndex];\n      })));\n\n      this._loadMoreRowsMemoizer({\n        callback: function callback() {\n          _this3._loadUnloadedRanges(unloadedRanges);\n        },\n        indices: {\n          squashedUnloadedRanges: squashedUnloadedRanges\n        }\n      });\n    }\n  }, {\n    key: \"_registerChild\",\n    value: function _registerChild(registeredChild) {\n      this._registeredChild = registeredChild;\n    }\n  }]);\n\n  return InfiniteLoader;\n}(React.PureComponent);\n/**\n * Determines if the specified start/stop range is visible based on the most recently rendered range.\n */\n\n\n_defineProperty(InfiniteLoader, \"defaultProps\", {\n  minimumBatchSize: 10,\n  rowCount: 0,\n  threshold: 15\n});\n\nexport { InfiniteLoader as default };\nInfiniteLoader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering a virtualized component.\n   * This function should implement the following signature:\n   * ({ onRowsRendered, registerChild }) => PropTypes.element\n   *\n   * The specified :onRowsRendered function should be passed through to the child's :onRowsRendered property.\n   * The :registerChild callback should be set as the virtualized component's :ref.\n   */\n  children: PropTypes.func.isRequired,\n\n  /**\n   * Function responsible for tracking the loaded state of each row.\n   * It should implement the following signature: ({ index: number }): boolean\n   */\n  isRowLoaded: PropTypes.func.isRequired,\n\n  /**\n   * Callback to be invoked when more rows must be loaded.\n   * It should implement the following signature: ({ startIndex, stopIndex }): Promise\n   * The returned Promise should be resolved once row data has finished loading.\n   * It will be used to determine when to refresh the list with the newly-loaded data.\n   * This callback may be called multiple times in reaction to a single scroll event.\n   */\n  loadMoreRows: PropTypes.func.isRequired,\n\n  /**\n   * Minimum number of rows to be loaded at a time.\n   * This property can be used to batch requests to reduce HTTP requests.\n   */\n  minimumBatchSize: PropTypes.number.isRequired,\n\n  /**\n   * Number of rows in list; can be arbitrary high number if actual number is unknown.\n   */\n  rowCount: PropTypes.number.isRequired,\n\n  /**\n   * Threshold at which to pre-fetch data.\n   * A threshold X means that data will start loading when a user scrolls within X rows.\n   * This value defaults to 15.\n   */\n  threshold: PropTypes.number.isRequired\n} : {};\nexport function isRangeVisible(_ref4) {\n  var lastRenderedStartIndex = _ref4.lastRenderedStartIndex,\n      lastRenderedStopIndex = _ref4.lastRenderedStopIndex,\n      startIndex = _ref4.startIndex,\n      stopIndex = _ref4.stopIndex;\n  return !(startIndex > lastRenderedStopIndex || stopIndex < lastRenderedStartIndex);\n}\n/**\n * Returns all of the ranges within a larger range that contain unloaded rows.\n */\n\nexport function scanForUnloadedRanges(_ref5) {\n  var isRowLoaded = _ref5.isRowLoaded,\n      minimumBatchSize = _ref5.minimumBatchSize,\n      rowCount = _ref5.rowCount,\n      startIndex = _ref5.startIndex,\n      stopIndex = _ref5.stopIndex;\n  var unloadedRanges = [];\n  var rangeStartIndex = null;\n  var rangeStopIndex = null;\n\n  for (var index = startIndex; index <= stopIndex; index++) {\n    var loaded = isRowLoaded({\n      index: index\n    });\n\n    if (!loaded) {\n      rangeStopIndex = index;\n\n      if (rangeStartIndex === null) {\n        rangeStartIndex = index;\n      }\n    } else if (rangeStopIndex !== null) {\n      unloadedRanges.push({\n        startIndex: rangeStartIndex,\n        stopIndex: rangeStopIndex\n      });\n      rangeStartIndex = rangeStopIndex = null;\n    }\n  } // If :rangeStopIndex is not null it means we haven't ran out of unloaded rows.\n  // Scan forward to try filling our :minimumBatchSize.\n\n\n  if (rangeStopIndex !== null) {\n    var potentialStopIndex = Math.min(Math.max(rangeStopIndex, rangeStartIndex + minimumBatchSize - 1), rowCount - 1);\n\n    for (var _index = rangeStopIndex + 1; _index <= potentialStopIndex; _index++) {\n      if (!isRowLoaded({\n        index: _index\n      })) {\n        rangeStopIndex = _index;\n      } else {\n        break;\n      }\n    }\n\n    unloadedRanges.push({\n      startIndex: rangeStartIndex,\n      stopIndex: rangeStopIndex\n    });\n  } // Check to see if our first range ended prematurely.\n  // In this case we should scan backwards to try filling our :minimumBatchSize.\n\n\n  if (unloadedRanges.length) {\n    var firstUnloadedRange = unloadedRanges[0];\n\n    while (firstUnloadedRange.stopIndex - firstUnloadedRange.startIndex + 1 < minimumBatchSize && firstUnloadedRange.startIndex > 0) {\n      var _index2 = firstUnloadedRange.startIndex - 1;\n\n      if (!isRowLoaded({\n        index: _index2\n      })) {\n        firstUnloadedRange.startIndex = _index2;\n      } else {\n        break;\n      }\n    }\n  }\n\n  return unloadedRanges;\n}\n/**\n * Since RV components use shallowCompare we need to force a render (even though props haven't changed).\n * However InfiniteLoader may wrap a Grid or it may wrap a Table or List.\n * In the first case the built-in React forceUpdate() method is sufficient to force a re-render,\n * But in the latter cases we need to use the RV-specific forceUpdateGrid() method.\n * Else the inner Grid will not be re-rendered and visuals may be stale.\n *\n * Additionally, while a Grid is scrolling the cells can be cached,\n * So it's important to invalidate that cache by recalculating sizes\n * before forcing a rerender.\n */\n\nexport function forceUpdateReactVirtualizedComponent(component) {\n  var currentIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var recomputeSize = typeof component.recomputeGridSize === 'function' ? component.recomputeGridSize : component.recomputeRowHeights;\n\n  if (recomputeSize) {\n    recomputeSize.call(component, currentIndex);\n  } else {\n    component.forceUpdate();\n  }\n}","import InfiniteLoader from './InfiniteLoader';\nexport default InfiniteLoader;\nexport { InfiniteLoader };","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nimport Grid, { accessibilityOverscanIndicesGetter } from '../Grid';\nimport * as React from 'react';\nimport clsx from 'clsx';\n/**\n * It is inefficient to create and manage a large list of DOM elements within a scrolling container\n * if only a few of those elements are visible. The primary purpose of this component is to improve\n * performance by only rendering the DOM nodes that a user is able to see based on their current\n * scroll position.\n *\n * This component renders a virtualized list of elements with either fixed or dynamic heights.\n */\n\nvar List = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(List, _React$PureComponent);\n\n  function List() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, List);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(List)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"Grid\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRenderer\", function (_ref) {\n      var parent = _ref.parent,\n          rowIndex = _ref.rowIndex,\n          style = _ref.style,\n          isScrolling = _ref.isScrolling,\n          isVisible = _ref.isVisible,\n          key = _ref.key;\n      var rowRenderer = _this.props.rowRenderer; // TRICKY The style object is sometimes cached by Grid.\n      // This prevents new style objects from bypassing shallowCompare().\n      // However as of React 16, style props are auto-frozen (at least in dev mode)\n      // Check to make sure we can still modify the style before proceeding.\n      // https://github.com/facebook/react/commit/977357765b44af8ff0cfea327866861073095c12#commitcomment-20648713\n\n      var widthDescriptor = Object.getOwnPropertyDescriptor(style, 'width');\n\n      if (widthDescriptor && widthDescriptor.writable) {\n        // By default, List cells should be 100% width.\n        // This prevents them from flowing under a scrollbar (if present).\n        style.width = '100%';\n      }\n\n      return rowRenderer({\n        index: rowIndex,\n        style: style,\n        isScrolling: isScrolling,\n        isVisible: isVisible,\n        key: key,\n        parent: parent\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setRef\", function (ref) {\n      _this.Grid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (_ref2) {\n      var clientHeight = _ref2.clientHeight,\n          scrollHeight = _ref2.scrollHeight,\n          scrollTop = _ref2.scrollTop;\n      var onScroll = _this.props.onScroll;\n      onScroll({\n        clientHeight: clientHeight,\n        scrollHeight: scrollHeight,\n        scrollTop: scrollTop\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onSectionRendered\", function (_ref3) {\n      var rowOverscanStartIndex = _ref3.rowOverscanStartIndex,\n          rowOverscanStopIndex = _ref3.rowOverscanStopIndex,\n          rowStartIndex = _ref3.rowStartIndex,\n          rowStopIndex = _ref3.rowStopIndex;\n      var onRowsRendered = _this.props.onRowsRendered;\n      onRowsRendered({\n        overscanStartIndex: rowOverscanStartIndex,\n        overscanStopIndex: rowOverscanStopIndex,\n        startIndex: rowStartIndex,\n        stopIndex: rowStopIndex\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(List, [{\n    key: \"forceUpdateGrid\",\n    value: function forceUpdateGrid() {\n      if (this.Grid) {\n        this.Grid.forceUpdate();\n      }\n    }\n    /** See Grid#getOffsetForCell */\n\n  }, {\n    key: \"getOffsetForRow\",\n    value: function getOffsetForRow(_ref4) {\n      var alignment = _ref4.alignment,\n          index = _ref4.index;\n\n      if (this.Grid) {\n        var _this$Grid$getOffsetF = this.Grid.getOffsetForCell({\n          alignment: alignment,\n          rowIndex: index,\n          columnIndex: 0\n        }),\n            scrollTop = _this$Grid$getOffsetF.scrollTop;\n\n        return scrollTop;\n      }\n\n      return 0;\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref5) {\n      var columnIndex = _ref5.columnIndex,\n          rowIndex = _ref5.rowIndex;\n\n      if (this.Grid) {\n        this.Grid.invalidateCellSizeAfterRender({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllRows\",\n    value: function measureAllRows() {\n      if (this.Grid) {\n        this.Grid.measureAllCells();\n      }\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref6 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref6$columnIndex = _ref6.columnIndex,\n          columnIndex = _ref6$columnIndex === void 0 ? 0 : _ref6$columnIndex,\n          _ref6$rowIndex = _ref6.rowIndex,\n          rowIndex = _ref6$rowIndex === void 0 ? 0 : _ref6$rowIndex;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeRowHeights\",\n    value: function recomputeRowHeights() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: index,\n          columnIndex: 0\n        });\n      }\n    }\n    /** See Grid#scrollToPosition */\n\n  }, {\n    key: \"scrollToPosition\",\n    value: function scrollToPosition() {\n      var scrollTop = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToPosition({\n          scrollTop: scrollTop\n        });\n      }\n    }\n    /** See Grid#scrollToCell */\n\n  }, {\n    key: \"scrollToRow\",\n    value: function scrollToRow() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToCell({\n          columnIndex: 0,\n          rowIndex: index\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          className = _this$props.className,\n          noRowsRenderer = _this$props.noRowsRenderer,\n          scrollToIndex = _this$props.scrollToIndex,\n          width = _this$props.width;\n      var classNames = clsx('ReactVirtualized__List', className);\n      return React.createElement(Grid, _extends({}, this.props, {\n        autoContainerWidth: true,\n        cellRenderer: this._cellRenderer,\n        className: classNames,\n        columnWidth: width,\n        columnCount: 1,\n        noContentRenderer: noRowsRenderer,\n        onScroll: this._onScroll,\n        onSectionRendered: this._onSectionRendered,\n        ref: this._setRef,\n        scrollToRow: scrollToIndex\n      }));\n    }\n  }]);\n\n  return List;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"aria-label\": PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  \"autoHeight\": PropTypes.bool.isRequired,\n\n  /** Optional CSS class name */\n  \"className\": PropTypes.string,\n\n  /**\n   * Used to estimate the total height of a List before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  \"estimatedRowSize\": PropTypes.number.isRequired,\n\n  /** Height constraint for list (determines how many actual rows are rendered) */\n  \"height\": PropTypes.number.isRequired,\n\n  /** Optional renderer to be used in place of rows when rowCount is 0 */\n  \"noRowsRenderer\": function noRowsRenderer() {\n    return (typeof bpfrpt_proptype_NoContentRenderer === \"function\" ? bpfrpt_proptype_NoContentRenderer.isRequired ? bpfrpt_proptype_NoContentRenderer.isRequired : bpfrpt_proptype_NoContentRenderer : PropTypes.shape(bpfrpt_proptype_NoContentRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Callback invoked with information about the slice of rows that were just rendered.  */\n  \"onRowsRendered\": PropTypes.func.isRequired,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   */\n  \"onScroll\": PropTypes.func.isRequired,\n\n  /** See Grid#overscanIndicesGetter */\n  \"overscanIndicesGetter\": function overscanIndicesGetter() {\n    return (typeof bpfrpt_proptype_OverscanIndicesGetter === \"function\" ? bpfrpt_proptype_OverscanIndicesGetter.isRequired ? bpfrpt_proptype_OverscanIndicesGetter.isRequired : bpfrpt_proptype_OverscanIndicesGetter : PropTypes.shape(bpfrpt_proptype_OverscanIndicesGetter).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Number of rows to render above/below the visible bounds of the list.\n   * These rows can help for smoother scrolling on touch devices.\n   */\n  \"overscanRowCount\": PropTypes.number.isRequired,\n\n  /** Either a fixed row height (number) or a function that returns the height of a row given its index.  */\n  \"rowHeight\": function rowHeight() {\n    return (typeof bpfrpt_proptype_CellSize === \"function\" ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Responsible for rendering a row given an index; ({ index: number }): node */\n  \"rowRenderer\": function rowRenderer() {\n    return (typeof bpfrpt_proptype_RowRenderer === \"function\" ? bpfrpt_proptype_RowRenderer.isRequired ? bpfrpt_proptype_RowRenderer.isRequired : bpfrpt_proptype_RowRenderer : PropTypes.shape(bpfrpt_proptype_RowRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Number of rows in list. */\n  \"rowCount\": PropTypes.number.isRequired,\n\n  /** See Grid#scrollToAlignment */\n  \"scrollToAlignment\": function scrollToAlignment() {\n    return (typeof bpfrpt_proptype_Alignment === \"function\" ? bpfrpt_proptype_Alignment.isRequired ? bpfrpt_proptype_Alignment.isRequired : bpfrpt_proptype_Alignment : PropTypes.shape(bpfrpt_proptype_Alignment).isRequired).apply(this, arguments);\n  },\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToIndex\": PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  \"scrollTop\": PropTypes.number,\n\n  /** Optional inline style */\n  \"style\": PropTypes.object.isRequired,\n\n  /** Tab index for focus */\n  \"tabIndex\": PropTypes.number,\n\n  /** Width of list */\n  \"width\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(List, \"defaultProps\", {\n  autoHeight: false,\n  estimatedRowSize: 30,\n  onScroll: function onScroll() {},\n  noRowsRenderer: function noRowsRenderer() {\n    return null;\n  },\n  onRowsRendered: function onRowsRendered() {},\n  overscanIndicesGetter: accessibilityOverscanIndicesGetter,\n  overscanRowCount: 10,\n  scrollToAlignment: 'auto',\n  scrollToIndex: -1,\n  style: {}\n});\n\nexport { List as default };\nimport { bpfrpt_proptype_NoContentRenderer } from \"../Grid\";\nimport { bpfrpt_proptype_Alignment } from \"../Grid\";\nimport { bpfrpt_proptype_CellSize } from \"../Grid\";\nimport { bpfrpt_proptype_CellPosition } from \"../Grid\";\nimport { bpfrpt_proptype_OverscanIndicesGetter } from \"../Grid\";\nimport { bpfrpt_proptype_RenderedSection } from \"../Grid\";\nimport { bpfrpt_proptype_CellRendererParams } from \"../Grid\";\nimport { bpfrpt_proptype_Scroll as bpfrpt_proptype_GridScroll } from \"../Grid\";\nimport { bpfrpt_proptype_RowRenderer } from \"./types\";\nimport { bpfrpt_proptype_RenderedRows } from \"./types\";\nimport { bpfrpt_proptype_Scroll } from \"./types\";\nimport PropTypes from \"prop-types\";","/**\n * Binary Search Bounds\n * https://github.com/mikolalysenko/binary-search-bounds\n * Mikola Lysenko\n *\n * Inlined because of Content Security Policy issue caused by the use of `new Function(...)` syntax.\n * Issue reported here: https://github.com/mikolalysenko/binary-search-bounds/issues/5\n **/\nfunction _GEA(a, l, h, y) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x >= y) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _GEP(a, l, h, y, c) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) >= 0) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchGE(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _GEP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _GEA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _GTA(a, l, h, y) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x > y) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _GTP(a, l, h, y, c) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) > 0) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchGT(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _GTP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _GTA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _LTA(a, l, h, y) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x < y) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _LTP(a, l, h, y, c) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) < 0) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchLT(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _LTP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _LTA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _LEA(a, l, h, y) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x <= y) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _LEP(a, l, h, y, c) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) <= 0) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchLE(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _LEP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _LEA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _EQA(a, l, h, y) {\n  l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x === y) {\n      return m;\n    } else if (x <= y) {\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return -1;\n}\n\nfunction _EQP(a, l, h, y, c) {\n  l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n    var p = c(x, y);\n\n    if (p === 0) {\n      return m;\n    } else if (p <= 0) {\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return -1;\n}\n\nfunction dispatchBsearchEQ(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _EQP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _EQA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nexport default {\n  ge: dispatchBsearchGE,\n  gt: dispatchBsearchGT,\n  lt: dispatchBsearchLT,\n  le: dispatchBsearchLE,\n  eq: dispatchBsearchEQ\n};","/**\n * Binary Search Bounds\n * https://github.com/mikolalysenko/interval-tree-1d\n * Mikola Lysenko\n *\n * Inlined because of Content Security Policy issue caused by the use of `new Function(...)` syntax in an upstream dependency.\n * Issue reported here: https://github.com/mikolalysenko/binary-search-bounds/issues/5\n **/\nimport bounds from './binarySearchBounds';\nvar NOT_FOUND = 0;\nvar SUCCESS = 1;\nvar EMPTY = 2;\n\nfunction IntervalTreeNode(mid, left, right, leftPoints, rightPoints) {\n  this.mid = mid;\n  this.left = left;\n  this.right = right;\n  this.leftPoints = leftPoints;\n  this.rightPoints = rightPoints;\n  this.count = (left ? left.count : 0) + (right ? right.count : 0) + leftPoints.length;\n}\n\nvar proto = IntervalTreeNode.prototype;\n\nfunction copy(a, b) {\n  a.mid = b.mid;\n  a.left = b.left;\n  a.right = b.right;\n  a.leftPoints = b.leftPoints;\n  a.rightPoints = b.rightPoints;\n  a.count = b.count;\n}\n\nfunction rebuild(node, intervals) {\n  var ntree = createIntervalTree(intervals);\n  node.mid = ntree.mid;\n  node.left = ntree.left;\n  node.right = ntree.right;\n  node.leftPoints = ntree.leftPoints;\n  node.rightPoints = ntree.rightPoints;\n  node.count = ntree.count;\n}\n\nfunction rebuildWithInterval(node, interval) {\n  var intervals = node.intervals([]);\n  intervals.push(interval);\n  rebuild(node, intervals);\n}\n\nfunction rebuildWithoutInterval(node, interval) {\n  var intervals = node.intervals([]);\n  var idx = intervals.indexOf(interval);\n\n  if (idx < 0) {\n    return NOT_FOUND;\n  }\n\n  intervals.splice(idx, 1);\n  rebuild(node, intervals);\n  return SUCCESS;\n}\n\nproto.intervals = function (result) {\n  result.push.apply(result, this.leftPoints);\n\n  if (this.left) {\n    this.left.intervals(result);\n  }\n\n  if (this.right) {\n    this.right.intervals(result);\n  }\n\n  return result;\n};\n\nproto.insert = function (interval) {\n  var weight = this.count - this.leftPoints.length;\n  this.count += 1;\n\n  if (interval[1] < this.mid) {\n    if (this.left) {\n      if (4 * (this.left.count + 1) > 3 * (weight + 1)) {\n        rebuildWithInterval(this, interval);\n      } else {\n        this.left.insert(interval);\n      }\n    } else {\n      this.left = createIntervalTree([interval]);\n    }\n  } else if (interval[0] > this.mid) {\n    if (this.right) {\n      if (4 * (this.right.count + 1) > 3 * (weight + 1)) {\n        rebuildWithInterval(this, interval);\n      } else {\n        this.right.insert(interval);\n      }\n    } else {\n      this.right = createIntervalTree([interval]);\n    }\n  } else {\n    var l = bounds.ge(this.leftPoints, interval, compareBegin);\n    var r = bounds.ge(this.rightPoints, interval, compareEnd);\n    this.leftPoints.splice(l, 0, interval);\n    this.rightPoints.splice(r, 0, interval);\n  }\n};\n\nproto.remove = function (interval) {\n  var weight = this.count - this.leftPoints;\n\n  if (interval[1] < this.mid) {\n    if (!this.left) {\n      return NOT_FOUND;\n    }\n\n    var rw = this.right ? this.right.count : 0;\n\n    if (4 * rw > 3 * (weight - 1)) {\n      return rebuildWithoutInterval(this, interval);\n    }\n\n    var r = this.left.remove(interval);\n\n    if (r === EMPTY) {\n      this.left = null;\n      this.count -= 1;\n      return SUCCESS;\n    } else if (r === SUCCESS) {\n      this.count -= 1;\n    }\n\n    return r;\n  } else if (interval[0] > this.mid) {\n    if (!this.right) {\n      return NOT_FOUND;\n    }\n\n    var lw = this.left ? this.left.count : 0;\n\n    if (4 * lw > 3 * (weight - 1)) {\n      return rebuildWithoutInterval(this, interval);\n    }\n\n    var r = this.right.remove(interval);\n\n    if (r === EMPTY) {\n      this.right = null;\n      this.count -= 1;\n      return SUCCESS;\n    } else if (r === SUCCESS) {\n      this.count -= 1;\n    }\n\n    return r;\n  } else {\n    if (this.count === 1) {\n      if (this.leftPoints[0] === interval) {\n        return EMPTY;\n      } else {\n        return NOT_FOUND;\n      }\n    }\n\n    if (this.leftPoints.length === 1 && this.leftPoints[0] === interval) {\n      if (this.left && this.right) {\n        var p = this;\n        var n = this.left;\n\n        while (n.right) {\n          p = n;\n          n = n.right;\n        }\n\n        if (p === this) {\n          n.right = this.right;\n        } else {\n          var l = this.left;\n          var r = this.right;\n          p.count -= n.count;\n          p.right = n.left;\n          n.left = l;\n          n.right = r;\n        }\n\n        copy(this, n);\n        this.count = (this.left ? this.left.count : 0) + (this.right ? this.right.count : 0) + this.leftPoints.length;\n      } else if (this.left) {\n        copy(this, this.left);\n      } else {\n        copy(this, this.right);\n      }\n\n      return SUCCESS;\n    }\n\n    for (var l = bounds.ge(this.leftPoints, interval, compareBegin); l < this.leftPoints.length; ++l) {\n      if (this.leftPoints[l][0] !== interval[0]) {\n        break;\n      }\n\n      if (this.leftPoints[l] === interval) {\n        this.count -= 1;\n        this.leftPoints.splice(l, 1);\n\n        for (var r = bounds.ge(this.rightPoints, interval, compareEnd); r < this.rightPoints.length; ++r) {\n          if (this.rightPoints[r][1] !== interval[1]) {\n            break;\n          } else if (this.rightPoints[r] === interval) {\n            this.rightPoints.splice(r, 1);\n            return SUCCESS;\n          }\n        }\n      }\n    }\n\n    return NOT_FOUND;\n  }\n};\n\nfunction reportLeftRange(arr, hi, cb) {\n  for (var i = 0; i < arr.length && arr[i][0] <= hi; ++i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nfunction reportRightRange(arr, lo, cb) {\n  for (var i = arr.length - 1; i >= 0 && arr[i][1] >= lo; --i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nfunction reportRange(arr, cb) {\n  for (var i = 0; i < arr.length; ++i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nproto.queryPoint = function (x, cb) {\n  if (x < this.mid) {\n    if (this.left) {\n      var r = this.left.queryPoint(x, cb);\n\n      if (r) {\n        return r;\n      }\n    }\n\n    return reportLeftRange(this.leftPoints, x, cb);\n  } else if (x > this.mid) {\n    if (this.right) {\n      var r = this.right.queryPoint(x, cb);\n\n      if (r) {\n        return r;\n      }\n    }\n\n    return reportRightRange(this.rightPoints, x, cb);\n  } else {\n    return reportRange(this.leftPoints, cb);\n  }\n};\n\nproto.queryInterval = function (lo, hi, cb) {\n  if (lo < this.mid && this.left) {\n    var r = this.left.queryInterval(lo, hi, cb);\n\n    if (r) {\n      return r;\n    }\n  }\n\n  if (hi > this.mid && this.right) {\n    var r = this.right.queryInterval(lo, hi, cb);\n\n    if (r) {\n      return r;\n    }\n  }\n\n  if (hi < this.mid) {\n    return reportLeftRange(this.leftPoints, hi, cb);\n  } else if (lo > this.mid) {\n    return reportRightRange(this.rightPoints, lo, cb);\n  } else {\n    return reportRange(this.leftPoints, cb);\n  }\n};\n\nfunction compareNumbers(a, b) {\n  return a - b;\n}\n\nfunction compareBegin(a, b) {\n  var d = a[0] - b[0];\n\n  if (d) {\n    return d;\n  }\n\n  return a[1] - b[1];\n}\n\nfunction compareEnd(a, b) {\n  var d = a[1] - b[1];\n\n  if (d) {\n    return d;\n  }\n\n  return a[0] - b[0];\n}\n\nfunction createIntervalTree(intervals) {\n  if (intervals.length === 0) {\n    return null;\n  }\n\n  var pts = [];\n\n  for (var i = 0; i < intervals.length; ++i) {\n    pts.push(intervals[i][0], intervals[i][1]);\n  }\n\n  pts.sort(compareNumbers);\n  var mid = pts[pts.length >> 1];\n  var leftIntervals = [];\n  var rightIntervals = [];\n  var centerIntervals = [];\n\n  for (var i = 0; i < intervals.length; ++i) {\n    var s = intervals[i];\n\n    if (s[1] < mid) {\n      leftIntervals.push(s);\n    } else if (mid < s[0]) {\n      rightIntervals.push(s);\n    } else {\n      centerIntervals.push(s);\n    }\n  } //Split center intervals\n\n\n  var leftPoints = centerIntervals;\n  var rightPoints = centerIntervals.slice();\n  leftPoints.sort(compareBegin);\n  rightPoints.sort(compareEnd);\n  return new IntervalTreeNode(mid, createIntervalTree(leftIntervals), createIntervalTree(rightIntervals), leftPoints, rightPoints);\n} //User friendly wrapper that makes it possible to support empty trees\n\n\nfunction IntervalTree(root) {\n  this.root = root;\n}\n\nvar tproto = IntervalTree.prototype;\n\ntproto.insert = function (interval) {\n  if (this.root) {\n    this.root.insert(interval);\n  } else {\n    this.root = new IntervalTreeNode(interval[0], null, null, [interval], [interval]);\n  }\n};\n\ntproto.remove = function (interval) {\n  if (this.root) {\n    var r = this.root.remove(interval);\n\n    if (r === EMPTY) {\n      this.root = null;\n    }\n\n    return r !== NOT_FOUND;\n  }\n\n  return false;\n};\n\ntproto.queryPoint = function (p, cb) {\n  if (this.root) {\n    return this.root.queryPoint(p, cb);\n  }\n};\n\ntproto.queryInterval = function (lo, hi, cb) {\n  if (lo <= hi && this.root) {\n    return this.root.queryInterval(lo, hi, cb);\n  }\n};\n\nObject.defineProperty(tproto, 'count', {\n  get: function get() {\n    if (this.root) {\n      return this.root.count;\n    }\n\n    return 0;\n  }\n});\nObject.defineProperty(tproto, 'intervals', {\n  get: function get() {\n    if (this.root) {\n      return this.root.intervals([]);\n    }\n\n    return [];\n  }\n});\nexport default function createWrapper(intervals) {\n  if (!intervals || intervals.length === 0) {\n    return new IntervalTree(null);\n  }\n\n  return new IntervalTree(createIntervalTree(intervals));\n}","import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport createIntervalTree from '../vendor/intervalTree';\n\n// Position cache requirements:\n//   O(log(n)) lookup of cells to render for a given viewport size\n//   O(1) lookup of shortest measured column (so we know when to enter phase 1)\nvar PositionCache =\n/*#__PURE__*/\nfunction () {\n  function PositionCache() {\n    _classCallCheck(this, PositionCache);\n\n    _defineProperty(this, \"_columnSizeMap\", {});\n\n    _defineProperty(this, \"_intervalTree\", createIntervalTree());\n\n    _defineProperty(this, \"_leftMap\", {});\n  }\n\n  _createClass(PositionCache, [{\n    key: \"estimateTotalHeight\",\n    value: function estimateTotalHeight(cellCount, columnCount, defaultCellHeight) {\n      var unmeasuredCellCount = cellCount - this.count;\n      return this.tallestColumnSize + Math.ceil(unmeasuredCellCount / columnCount) * defaultCellHeight;\n    } // Render all cells visible within the viewport range defined.\n\n  }, {\n    key: \"range\",\n    value: function range(scrollTop, clientHeight, renderCallback) {\n      var _this = this;\n\n      this._intervalTree.queryInterval(scrollTop, scrollTop + clientHeight, function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 3),\n            top = _ref2[0],\n            _ = _ref2[1],\n            index = _ref2[2];\n\n        return renderCallback(index, _this._leftMap[index], top);\n      });\n    }\n  }, {\n    key: \"setPosition\",\n    value: function setPosition(index, left, top, height) {\n      this._intervalTree.insert([top, top + height, index]);\n\n      this._leftMap[index] = left;\n      var columnSizeMap = this._columnSizeMap;\n      var columnHeight = columnSizeMap[left];\n\n      if (columnHeight === undefined) {\n        columnSizeMap[left] = top + height;\n      } else {\n        columnSizeMap[left] = Math.max(columnHeight, top + height);\n      }\n    }\n  }, {\n    key: \"count\",\n    get: function get() {\n      return this._intervalTree.count;\n    }\n  }, {\n    key: \"shortestColumnSize\",\n    get: function get() {\n      var columnSizeMap = this._columnSizeMap;\n      var size = 0;\n\n      for (var i in columnSizeMap) {\n        var height = columnSizeMap[i];\n        size = size === 0 ? height : Math.min(size, height);\n      }\n\n      return size;\n    }\n  }, {\n    key: \"tallestColumnSize\",\n    get: function get() {\n      var columnSizeMap = this._columnSizeMap;\n      var size = 0;\n\n      for (var i in columnSizeMap) {\n        var height = columnSizeMap[i];\n        size = Math.max(size, height);\n      }\n\n      return size;\n    }\n  }]);\n\n  return PositionCache;\n}();\n\nexport { PositionCache as default };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport clsx from 'clsx';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport PositionCache from './PositionCache';\nimport { requestAnimationTimeout, cancelAnimationTimeout } from '../utils/requestAnimationTimeout';\nvar emptyObject = {};\n/**\n * Specifies the number of miliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nexport var DEFAULT_SCROLLING_RESET_TIME_INTERVAL = 150;\n/**\n * This component efficiently displays arbitrarily positioned cells using windowing techniques.\n * Cell position is determined by an injected `cellPositioner` property.\n * Windowing is vertical; this component does not support horizontal scrolling.\n *\n * Rendering occurs in two phases:\n * 1) First pass uses estimated cell sizes (provided by the cache) to determine how many cells to measure in a batch.\n *    Batch size is chosen using a fast, naive layout algorithm that stacks images in order until the viewport has been filled.\n *    After measurement is complete (componentDidMount or componentDidUpdate) this component evaluates positioned cells\n *    in order to determine if another measurement pass is required (eg if actual cell sizes were less than estimated sizes).\n *    All measurements are permanently cached (keyed by `keyMapper`) for performance purposes.\n * 2) Second pass uses the external `cellPositioner` to layout cells.\n *    At this time the positioner has access to cached size measurements for all cells.\n *    The positions it returns are cached by Masonry for fast access later.\n *    Phase one is repeated if the user scrolls beyond the current layout's bounds.\n *    If the layout is invalidated due to eg a resize, cached positions can be cleared using `recomputeCellPositions()`.\n *\n * Animation constraints:\n *   Simple animations are supported (eg translate/slide into place on initial reveal).\n *   More complex animations are not (eg flying from one position to another on resize).\n *\n * Layout constraints:\n *   This component supports multi-column layout.\n *   The height of each item may vary.\n *   The width of each item must not exceed the width of the column it is \"in\".\n *   The left position of all items within a column must align.\n *   (Items may not span multiple columns.)\n */\n\nvar Masonry = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Masonry, _React$PureComponent);\n\n  function Masonry() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Masonry);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Masonry)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isScrolling: false,\n      scrollTop: 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_debounceResetIsScrollingId\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_invalidateOnUpdateStartIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_invalidateOnUpdateStopIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_positionCache\", new PositionCache());\n\n    _defineProperty(_assertThisInitialized(_this), \"_startIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_startIndexMemoized\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_stopIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_stopIndexMemoized\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_debounceResetIsScrollingCallback\", function () {\n      _this.setState({\n        isScrolling: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (event) {\n      var height = _this.props.height;\n      var eventScrollTop = event.currentTarget.scrollTop; // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scroll offsets never exceed their bounds.\n\n      var scrollTop = Math.min(Math.max(0, _this._getEstimatedTotalHeight() - height), eventScrollTop); // On iOS, we can arrive at negative offsets by swiping past the start or end.\n      // Avoid re-rendering in this case as it can cause problems; see #532 for more.\n\n      if (eventScrollTop !== scrollTop) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      _this._debounceResetIsScrolling(); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n\n      if (_this.state.scrollTop !== scrollTop) {\n        _this.setState({\n          isScrolling: true,\n          scrollTop: scrollTop\n        });\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(Masonry, [{\n    key: \"clearCellPositions\",\n    value: function clearCellPositions() {\n      this._positionCache = new PositionCache();\n      this.forceUpdate();\n    } // HACK This method signature was intended for Grid\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref) {\n      var index = _ref.rowIndex;\n\n      if (this._invalidateOnUpdateStartIndex === null) {\n        this._invalidateOnUpdateStartIndex = index;\n        this._invalidateOnUpdateStopIndex = index;\n      } else {\n        this._invalidateOnUpdateStartIndex = Math.min(this._invalidateOnUpdateStartIndex, index);\n        this._invalidateOnUpdateStopIndex = Math.max(this._invalidateOnUpdateStopIndex, index);\n      }\n    }\n  }, {\n    key: \"recomputeCellPositions\",\n    value: function recomputeCellPositions() {\n      var stopIndex = this._positionCache.count - 1;\n      this._positionCache = new PositionCache();\n\n      this._populatePositionCache(0, stopIndex);\n\n      this.forceUpdate();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._checkInvalidateOnUpdate();\n\n      this._invokeOnScrollCallback();\n\n      this._invokeOnCellsRenderedCallback();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      this._checkInvalidateOnUpdate();\n\n      this._invokeOnScrollCallback();\n\n      this._invokeOnCellsRenderedCallback();\n\n      if (this.props.scrollTop !== prevProps.scrollTop) {\n        this._debounceResetIsScrolling();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._debounceResetIsScrollingId) {\n        cancelAnimationTimeout(this._debounceResetIsScrollingId);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          autoHeight = _this$props.autoHeight,\n          cellCount = _this$props.cellCount,\n          cellMeasurerCache = _this$props.cellMeasurerCache,\n          cellRenderer = _this$props.cellRenderer,\n          className = _this$props.className,\n          height = _this$props.height,\n          id = _this$props.id,\n          keyMapper = _this$props.keyMapper,\n          overscanByPixels = _this$props.overscanByPixels,\n          role = _this$props.role,\n          style = _this$props.style,\n          tabIndex = _this$props.tabIndex,\n          width = _this$props.width,\n          rowDirection = _this$props.rowDirection;\n      var _this$state = this.state,\n          isScrolling = _this$state.isScrolling,\n          scrollTop = _this$state.scrollTop;\n      var children = [];\n\n      var estimateTotalHeight = this._getEstimatedTotalHeight();\n\n      var shortestColumnSize = this._positionCache.shortestColumnSize;\n      var measuredCellCount = this._positionCache.count;\n      var startIndex = 0;\n      var stopIndex;\n\n      this._positionCache.range(Math.max(0, scrollTop - overscanByPixels), height + overscanByPixels * 2, function (index, left, top) {\n        var _style;\n\n        if (typeof stopIndex === 'undefined') {\n          startIndex = index;\n          stopIndex = index;\n        } else {\n          startIndex = Math.min(startIndex, index);\n          stopIndex = Math.max(stopIndex, index);\n        }\n\n        children.push(cellRenderer({\n          index: index,\n          isScrolling: isScrolling,\n          key: keyMapper(index),\n          parent: _this2,\n          style: (_style = {\n            height: cellMeasurerCache.getHeight(index)\n          }, _defineProperty(_style, rowDirection === 'ltr' ? 'left' : 'right', left), _defineProperty(_style, \"position\", 'absolute'), _defineProperty(_style, \"top\", top), _defineProperty(_style, \"width\", cellMeasurerCache.getWidth(index)), _style)\n        }));\n      }); // We need to measure additional cells for this layout\n\n\n      if (shortestColumnSize < scrollTop + height + overscanByPixels && measuredCellCount < cellCount) {\n        var batchSize = Math.min(cellCount - measuredCellCount, Math.ceil((scrollTop + height + overscanByPixels - shortestColumnSize) / cellMeasurerCache.defaultHeight * width / cellMeasurerCache.defaultWidth));\n\n        for (var _index = measuredCellCount; _index < measuredCellCount + batchSize; _index++) {\n          stopIndex = _index;\n          children.push(cellRenderer({\n            index: _index,\n            isScrolling: isScrolling,\n            key: keyMapper(_index),\n            parent: this,\n            style: {\n              width: cellMeasurerCache.getWidth(_index)\n            }\n          }));\n        }\n      }\n\n      this._startIndex = startIndex;\n      this._stopIndex = stopIndex;\n      return React.createElement(\"div\", {\n        ref: this._setScrollingContainerRef,\n        \"aria-label\": this.props['aria-label'],\n        className: clsx('ReactVirtualized__Masonry', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: role,\n        style: _objectSpread({\n          boxSizing: 'border-box',\n          direction: 'ltr',\n          height: autoHeight ? 'auto' : height,\n          overflowX: 'hidden',\n          overflowY: estimateTotalHeight < height ? 'hidden' : 'auto',\n          position: 'relative',\n          width: width,\n          WebkitOverflowScrolling: 'touch',\n          willChange: 'transform'\n        }, style),\n        tabIndex: tabIndex\n      }, React.createElement(\"div\", {\n        className: \"ReactVirtualized__Masonry__innerScrollContainer\",\n        style: {\n          width: '100%',\n          height: estimateTotalHeight,\n          maxWidth: '100%',\n          maxHeight: estimateTotalHeight,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          position: 'relative'\n        }\n      }, children));\n    }\n  }, {\n    key: \"_checkInvalidateOnUpdate\",\n    value: function _checkInvalidateOnUpdate() {\n      if (typeof this._invalidateOnUpdateStartIndex === 'number') {\n        var startIndex = this._invalidateOnUpdateStartIndex;\n        var stopIndex = this._invalidateOnUpdateStopIndex;\n        this._invalidateOnUpdateStartIndex = null;\n        this._invalidateOnUpdateStopIndex = null; // Query external layout logic for position of newly-measured cells\n\n        this._populatePositionCache(startIndex, stopIndex);\n\n        this.forceUpdate();\n      }\n    }\n  }, {\n    key: \"_debounceResetIsScrolling\",\n    value: function _debounceResetIsScrolling() {\n      var scrollingResetTimeInterval = this.props.scrollingResetTimeInterval;\n\n      if (this._debounceResetIsScrollingId) {\n        cancelAnimationTimeout(this._debounceResetIsScrollingId);\n      }\n\n      this._debounceResetIsScrollingId = requestAnimationTimeout(this._debounceResetIsScrollingCallback, scrollingResetTimeInterval);\n    }\n  }, {\n    key: \"_getEstimatedTotalHeight\",\n    value: function _getEstimatedTotalHeight() {\n      var _this$props2 = this.props,\n          cellCount = _this$props2.cellCount,\n          cellMeasurerCache = _this$props2.cellMeasurerCache,\n          width = _this$props2.width;\n      var estimatedColumnCount = Math.max(1, Math.floor(width / cellMeasurerCache.defaultWidth));\n      return this._positionCache.estimateTotalHeight(cellCount, estimatedColumnCount, cellMeasurerCache.defaultHeight);\n    }\n  }, {\n    key: \"_invokeOnScrollCallback\",\n    value: function _invokeOnScrollCallback() {\n      var _this$props3 = this.props,\n          height = _this$props3.height,\n          onScroll = _this$props3.onScroll;\n      var scrollTop = this.state.scrollTop;\n\n      if (this._onScrollMemoized !== scrollTop) {\n        onScroll({\n          clientHeight: height,\n          scrollHeight: this._getEstimatedTotalHeight(),\n          scrollTop: scrollTop\n        });\n        this._onScrollMemoized = scrollTop;\n      }\n    }\n  }, {\n    key: \"_invokeOnCellsRenderedCallback\",\n    value: function _invokeOnCellsRenderedCallback() {\n      if (this._startIndexMemoized !== this._startIndex || this._stopIndexMemoized !== this._stopIndex) {\n        var onCellsRendered = this.props.onCellsRendered;\n        onCellsRendered({\n          startIndex: this._startIndex,\n          stopIndex: this._stopIndex\n        });\n        this._startIndexMemoized = this._startIndex;\n        this._stopIndexMemoized = this._stopIndex;\n      }\n    }\n  }, {\n    key: \"_populatePositionCache\",\n    value: function _populatePositionCache(startIndex, stopIndex) {\n      var _this$props4 = this.props,\n          cellMeasurerCache = _this$props4.cellMeasurerCache,\n          cellPositioner = _this$props4.cellPositioner;\n\n      for (var _index2 = startIndex; _index2 <= stopIndex; _index2++) {\n        var _cellPositioner = cellPositioner(_index2),\n            left = _cellPositioner.left,\n            top = _cellPositioner.top;\n\n        this._positionCache.setPosition(_index2, left, top, cellMeasurerCache.getHeight(_index2));\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.scrollTop !== undefined && prevState.scrollTop !== nextProps.scrollTop) {\n        return {\n          isScrolling: true,\n          scrollTop: nextProps.scrollTop\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return Masonry;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"autoHeight\": PropTypes.bool.isRequired,\n  \"cellCount\": PropTypes.number.isRequired,\n  \"cellMeasurerCache\": function cellMeasurerCache() {\n    return (typeof CellMeasurerCache === \"function\" ? PropTypes.instanceOf(CellMeasurerCache).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"cellPositioner\": function cellPositioner() {\n    return (typeof Positioner === \"function\" ? PropTypes.instanceOf(Positioner).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"cellRenderer\": function cellRenderer() {\n    return (typeof CellRenderer === \"function\" ? PropTypes.instanceOf(CellRenderer).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"className\": PropTypes.string,\n  \"height\": PropTypes.number.isRequired,\n  \"id\": PropTypes.string,\n  \"keyMapper\": function keyMapper() {\n    return (typeof KeyMapper === \"function\" ? PropTypes.instanceOf(KeyMapper).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"onCellsRendered\": function onCellsRendered() {\n    return (typeof OnCellsRenderedCallback === \"function\" ? PropTypes.instanceOf(OnCellsRenderedCallback) : PropTypes.any).apply(this, arguments);\n  },\n  \"onScroll\": function onScroll() {\n    return (typeof OnScrollCallback === \"function\" ? PropTypes.instanceOf(OnScrollCallback) : PropTypes.any).apply(this, arguments);\n  },\n  \"overscanByPixels\": PropTypes.number.isRequired,\n  \"role\": PropTypes.string.isRequired,\n  \"scrollingResetTimeInterval\": PropTypes.number.isRequired,\n  \"style\": function style(props, propName, componentName) {\n    if (!Object.prototype.hasOwnProperty.call(props, propName)) {\n      throw new Error(\"Prop `\".concat(propName, \"` has type 'any' or 'mixed', but was not provided to `\").concat(componentName, \"`. Pass undefined or any other value.\"));\n    }\n  },\n  \"tabIndex\": PropTypes.number.isRequired,\n  \"width\": PropTypes.number.isRequired,\n  \"rowDirection\": PropTypes.string.isRequired,\n  \"scrollTop\": PropTypes.number\n}), _temp);\n\n_defineProperty(Masonry, \"defaultProps\", {\n  autoHeight: false,\n  keyMapper: identity,\n  onCellsRendered: noop,\n  onScroll: noop,\n  overscanByPixels: 20,\n  role: 'grid',\n  scrollingResetTimeInterval: DEFAULT_SCROLLING_RESET_TIME_INTERVAL,\n  style: emptyObject,\n  tabIndex: 0,\n  rowDirection: 'ltr'\n});\n\nfunction identity(value) {\n  return value;\n}\n\nfunction noop() {}\n\nvar bpfrpt_proptype_CellMeasurerCache = process.env.NODE_ENV === 'production' ? null : {\n  \"defaultHeight\": PropTypes.number.isRequired,\n  \"defaultWidth\": PropTypes.number.isRequired,\n  \"getHeight\": PropTypes.func.isRequired,\n  \"getWidth\": PropTypes.func.isRequired\n};\npolyfill(Masonry);\nexport default Masonry;\nvar bpfrpt_proptype_Positioner = process.env.NODE_ENV === 'production' ? null : PropTypes.func;\nimport { bpfrpt_proptype_AnimationTimeoutId } from \"../utils/requestAnimationTimeout\";\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_CellMeasurerCache };\nexport { bpfrpt_proptype_Positioner };","import createCellPositioner from './createCellPositioner';\nimport Masonry from './Masonry';\nexport default Masonry;\nexport { createCellPositioner, Masonry };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport { CellMeasurerCache } from '../CellMeasurer';\n\n/**\n * Caches measurements for a given cell.\n */\nvar CellMeasurerCacheDecorator =\n/*#__PURE__*/\nfunction () {\n  function CellMeasurerCacheDecorator() {\n    var _this = this;\n\n    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, CellMeasurerCacheDecorator);\n\n    _defineProperty(this, \"_cellMeasurerCache\", void 0);\n\n    _defineProperty(this, \"_columnIndexOffset\", void 0);\n\n    _defineProperty(this, \"_rowIndexOffset\", void 0);\n\n    _defineProperty(this, \"columnWidth\", function (_ref) {\n      var index = _ref.index;\n\n      _this._cellMeasurerCache.columnWidth({\n        index: index + _this._columnIndexOffset\n      });\n    });\n\n    _defineProperty(this, \"rowHeight\", function (_ref2) {\n      var index = _ref2.index;\n\n      _this._cellMeasurerCache.rowHeight({\n        index: index + _this._rowIndexOffset\n      });\n    });\n\n    var cellMeasurerCache = params.cellMeasurerCache,\n        _params$columnIndexOf = params.columnIndexOffset,\n        columnIndexOffset = _params$columnIndexOf === void 0 ? 0 : _params$columnIndexOf,\n        _params$rowIndexOffse = params.rowIndexOffset,\n        rowIndexOffset = _params$rowIndexOffse === void 0 ? 0 : _params$rowIndexOffse;\n    this._cellMeasurerCache = cellMeasurerCache;\n    this._columnIndexOffset = columnIndexOffset;\n    this._rowIndexOffset = rowIndexOffset;\n  }\n\n  _createClass(CellMeasurerCacheDecorator, [{\n    key: \"clear\",\n    value: function clear(rowIndex, columnIndex) {\n      this._cellMeasurerCache.clear(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"clearAll\",\n    value: function clearAll() {\n      this._cellMeasurerCache.clearAll();\n    }\n  }, {\n    key: \"hasFixedHeight\",\n    value: function hasFixedHeight() {\n      return this._cellMeasurerCache.hasFixedHeight();\n    }\n  }, {\n    key: \"hasFixedWidth\",\n    value: function hasFixedWidth() {\n      return this._cellMeasurerCache.hasFixedWidth();\n    }\n  }, {\n    key: \"getHeight\",\n    value: function getHeight(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.getHeight(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"getWidth\",\n    value: function getWidth(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.getWidth(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"has\",\n    value: function has(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.has(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"set\",\n    value: function set(rowIndex, columnIndex, width, height) {\n      this._cellMeasurerCache.set(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset, width, height);\n    }\n  }, {\n    key: \"defaultHeight\",\n    get: function get() {\n      return this._cellMeasurerCache.defaultHeight;\n    }\n  }, {\n    key: \"defaultWidth\",\n    get: function get() {\n      return this._cellMeasurerCache.defaultWidth;\n    }\n  }]);\n\n  return CellMeasurerCacheDecorator;\n}();\n\nexport { CellMeasurerCacheDecorator as default };","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport CellMeasurerCacheDecorator from './CellMeasurerCacheDecorator';\nimport Grid from '../Grid';\nvar SCROLLBAR_SIZE_BUFFER = 20;\n/**\n * Renders 1, 2, or 4 Grids depending on configuration.\n * A main (body) Grid will always be rendered.\n * Optionally, 1-2 Grids for sticky header rows will also be rendered.\n * If no sticky columns, only 1 sticky header Grid will be rendered.\n * If sticky columns, 2 sticky header Grids will be rendered.\n */\n\nvar MultiGrid =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(MultiGrid, _React$PureComponent);\n\n  function MultiGrid(props, context) {\n    var _this;\n\n    _classCallCheck(this, MultiGrid);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MultiGrid).call(this, props, context));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollbarSize: 0,\n      showHorizontalScrollbar: false,\n      showVerticalScrollbar: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateColumnIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateRowIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_bottomLeftGridRef\", function (ref) {\n      _this._bottomLeftGrid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_bottomRightGridRef\", function (ref) {\n      _this._bottomRightGrid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererBottomLeftGrid\", function (_ref) {\n      var rowIndex = _ref.rowIndex,\n          rest = _objectWithoutProperties(_ref, [\"rowIndex\"]);\n\n      var _this$props = _this.props,\n          cellRenderer = _this$props.cellRenderer,\n          fixedRowCount = _this$props.fixedRowCount,\n          rowCount = _this$props.rowCount;\n\n      if (rowIndex === rowCount - fixedRowCount) {\n        return React.createElement(\"div\", {\n          key: rest.key,\n          style: _objectSpread({}, rest.style, {\n            height: SCROLLBAR_SIZE_BUFFER\n          })\n        });\n      } else {\n        return cellRenderer(_objectSpread({}, rest, {\n          parent: _assertThisInitialized(_this),\n          rowIndex: rowIndex + fixedRowCount\n        }));\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererBottomRightGrid\", function (_ref2) {\n      var columnIndex = _ref2.columnIndex,\n          rowIndex = _ref2.rowIndex,\n          rest = _objectWithoutProperties(_ref2, [\"columnIndex\", \"rowIndex\"]);\n\n      var _this$props2 = _this.props,\n          cellRenderer = _this$props2.cellRenderer,\n          fixedColumnCount = _this$props2.fixedColumnCount,\n          fixedRowCount = _this$props2.fixedRowCount;\n      return cellRenderer(_objectSpread({}, rest, {\n        columnIndex: columnIndex + fixedColumnCount,\n        parent: _assertThisInitialized(_this),\n        rowIndex: rowIndex + fixedRowCount\n      }));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererTopRightGrid\", function (_ref3) {\n      var columnIndex = _ref3.columnIndex,\n          rest = _objectWithoutProperties(_ref3, [\"columnIndex\"]);\n\n      var _this$props3 = _this.props,\n          cellRenderer = _this$props3.cellRenderer,\n          columnCount = _this$props3.columnCount,\n          fixedColumnCount = _this$props3.fixedColumnCount;\n\n      if (columnIndex === columnCount - fixedColumnCount) {\n        return React.createElement(\"div\", {\n          key: rest.key,\n          style: _objectSpread({}, rest.style, {\n            width: SCROLLBAR_SIZE_BUFFER\n          })\n        });\n      } else {\n        return cellRenderer(_objectSpread({}, rest, {\n          columnIndex: columnIndex + fixedColumnCount,\n          parent: _assertThisInitialized(_this)\n        }));\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnWidthRightGrid\", function (_ref4) {\n      var index = _ref4.index;\n      var _this$props4 = _this.props,\n          columnCount = _this$props4.columnCount,\n          fixedColumnCount = _this$props4.fixedColumnCount,\n          columnWidth = _this$props4.columnWidth;\n      var _this$state = _this.state,\n          scrollbarSize = _this$state.scrollbarSize,\n          showHorizontalScrollbar = _this$state.showHorizontalScrollbar; // An extra cell is added to the count\n      // This gives the smaller Grid extra room for offset,\n      // In case the main (bottom right) Grid has a scrollbar\n      // If no scrollbar, the extra space is overflow:hidden anyway\n\n      if (showHorizontalScrollbar && index === columnCount - fixedColumnCount) {\n        return scrollbarSize;\n      }\n\n      return typeof columnWidth === 'function' ? columnWidth({\n        index: index + fixedColumnCount\n      }) : columnWidth;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (scrollInfo) {\n      var scrollLeft = scrollInfo.scrollLeft,\n          scrollTop = scrollInfo.scrollTop;\n\n      _this.setState({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      });\n\n      var onScroll = _this.props.onScroll;\n\n      if (onScroll) {\n        onScroll(scrollInfo);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollbarPresenceChange\", function (_ref5) {\n      var horizontal = _ref5.horizontal,\n          size = _ref5.size,\n          vertical = _ref5.vertical;\n      var _this$state2 = _this.state,\n          showHorizontalScrollbar = _this$state2.showHorizontalScrollbar,\n          showVerticalScrollbar = _this$state2.showVerticalScrollbar;\n\n      if (horizontal !== showHorizontalScrollbar || vertical !== showVerticalScrollbar) {\n        _this.setState({\n          scrollbarSize: size,\n          showHorizontalScrollbar: horizontal,\n          showVerticalScrollbar: vertical\n        });\n\n        var onScrollbarPresenceChange = _this.props.onScrollbarPresenceChange;\n\n        if (typeof onScrollbarPresenceChange === 'function') {\n          onScrollbarPresenceChange({\n            horizontal: horizontal,\n            size: size,\n            vertical: vertical\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollLeft\", function (scrollInfo) {\n      var scrollLeft = scrollInfo.scrollLeft;\n\n      _this._onScroll({\n        scrollLeft: scrollLeft,\n        scrollTop: _this.state.scrollTop\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollTop\", function (scrollInfo) {\n      var scrollTop = scrollInfo.scrollTop;\n\n      _this._onScroll({\n        scrollTop: scrollTop,\n        scrollLeft: _this.state.scrollLeft\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowHeightBottomGrid\", function (_ref6) {\n      var index = _ref6.index;\n      var _this$props5 = _this.props,\n          fixedRowCount = _this$props5.fixedRowCount,\n          rowCount = _this$props5.rowCount,\n          rowHeight = _this$props5.rowHeight;\n      var _this$state3 = _this.state,\n          scrollbarSize = _this$state3.scrollbarSize,\n          showVerticalScrollbar = _this$state3.showVerticalScrollbar; // An extra cell is added to the count\n      // This gives the smaller Grid extra room for offset,\n      // In case the main (bottom right) Grid has a scrollbar\n      // If no scrollbar, the extra space is overflow:hidden anyway\n\n      if (showVerticalScrollbar && index === rowCount - fixedRowCount) {\n        return scrollbarSize;\n      }\n\n      return typeof rowHeight === 'function' ? rowHeight({\n        index: index + fixedRowCount\n      }) : rowHeight;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_topLeftGridRef\", function (ref) {\n      _this._topLeftGrid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_topRightGridRef\", function (ref) {\n      _this._topRightGrid = ref;\n    });\n\n    var deferredMeasurementCache = props.deferredMeasurementCache,\n        _fixedColumnCount = props.fixedColumnCount,\n        _fixedRowCount = props.fixedRowCount;\n\n    _this._maybeCalculateCachedStyles(true);\n\n    if (deferredMeasurementCache) {\n      _this._deferredMeasurementCacheBottomLeftGrid = _fixedRowCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: 0,\n        rowIndexOffset: _fixedRowCount\n      }) : deferredMeasurementCache;\n      _this._deferredMeasurementCacheBottomRightGrid = _fixedColumnCount > 0 || _fixedRowCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: _fixedColumnCount,\n        rowIndexOffset: _fixedRowCount\n      }) : deferredMeasurementCache;\n      _this._deferredMeasurementCacheTopRightGrid = _fixedColumnCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: _fixedColumnCount,\n        rowIndexOffset: 0\n      }) : deferredMeasurementCache;\n    }\n\n    return _this;\n  }\n\n  _createClass(MultiGrid, [{\n    key: \"forceUpdateGrids\",\n    value: function forceUpdateGrids() {\n      this._bottomLeftGrid && this._bottomLeftGrid.forceUpdate();\n      this._bottomRightGrid && this._bottomRightGrid.forceUpdate();\n      this._topLeftGrid && this._topLeftGrid.forceUpdate();\n      this._topRightGrid && this._topRightGrid.forceUpdate();\n    }\n    /** See Grid#invalidateCellSizeAfterRender */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender() {\n      var _ref7 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref7$columnIndex = _ref7.columnIndex,\n          columnIndex = _ref7$columnIndex === void 0 ? 0 : _ref7$columnIndex,\n          _ref7$rowIndex = _ref7.rowIndex,\n          rowIndex = _ref7$rowIndex === void 0 ? 0 : _ref7$rowIndex;\n\n      this._deferredInvalidateColumnIndex = typeof this._deferredInvalidateColumnIndex === 'number' ? Math.min(this._deferredInvalidateColumnIndex, columnIndex) : columnIndex;\n      this._deferredInvalidateRowIndex = typeof this._deferredInvalidateRowIndex === 'number' ? Math.min(this._deferredInvalidateRowIndex, rowIndex) : rowIndex;\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllCells\",\n    value: function measureAllCells() {\n      this._bottomLeftGrid && this._bottomLeftGrid.measureAllCells();\n      this._bottomRightGrid && this._bottomRightGrid.measureAllCells();\n      this._topLeftGrid && this._topLeftGrid.measureAllCells();\n      this._topRightGrid && this._topRightGrid.measureAllCells();\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref8 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref8$columnIndex = _ref8.columnIndex,\n          columnIndex = _ref8$columnIndex === void 0 ? 0 : _ref8$columnIndex,\n          _ref8$rowIndex = _ref8.rowIndex,\n          rowIndex = _ref8$rowIndex === void 0 ? 0 : _ref8$rowIndex;\n\n      var _this$props6 = this.props,\n          fixedColumnCount = _this$props6.fixedColumnCount,\n          fixedRowCount = _this$props6.fixedRowCount;\n      var adjustedColumnIndex = Math.max(0, columnIndex - fixedColumnCount);\n      var adjustedRowIndex = Math.max(0, rowIndex - fixedRowCount);\n      this._bottomLeftGrid && this._bottomLeftGrid.recomputeGridSize({\n        columnIndex: columnIndex,\n        rowIndex: adjustedRowIndex\n      });\n      this._bottomRightGrid && this._bottomRightGrid.recomputeGridSize({\n        columnIndex: adjustedColumnIndex,\n        rowIndex: adjustedRowIndex\n      });\n      this._topLeftGrid && this._topLeftGrid.recomputeGridSize({\n        columnIndex: columnIndex,\n        rowIndex: rowIndex\n      });\n      this._topRightGrid && this._topRightGrid.recomputeGridSize({\n        columnIndex: adjustedColumnIndex,\n        rowIndex: rowIndex\n      });\n      this._leftGridWidth = null;\n      this._topGridHeight = null;\n\n      this._maybeCalculateCachedStyles(true);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props7 = this.props,\n          scrollLeft = _this$props7.scrollLeft,\n          scrollTop = _this$props7.scrollTop;\n\n      if (scrollLeft > 0 || scrollTop > 0) {\n        var newState = {};\n\n        if (scrollLeft > 0) {\n          newState.scrollLeft = scrollLeft;\n        }\n\n        if (scrollTop > 0) {\n          newState.scrollTop = scrollTop;\n        }\n\n        this.setState(newState);\n      }\n\n      this._handleInvalidatedGridSize();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._handleInvalidatedGridSize();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props8 = this.props,\n          onScroll = _this$props8.onScroll,\n          onSectionRendered = _this$props8.onSectionRendered,\n          onScrollbarPresenceChange = _this$props8.onScrollbarPresenceChange,\n          scrollLeftProp = _this$props8.scrollLeft,\n          scrollToColumn = _this$props8.scrollToColumn,\n          scrollTopProp = _this$props8.scrollTop,\n          scrollToRow = _this$props8.scrollToRow,\n          rest = _objectWithoutProperties(_this$props8, [\"onScroll\", \"onSectionRendered\", \"onScrollbarPresenceChange\", \"scrollLeft\", \"scrollToColumn\", \"scrollTop\", \"scrollToRow\"]);\n\n      this._prepareForRender(); // Don't render any of our Grids if there are no cells.\n      // This mirrors what Grid does,\n      // And prevents us from recording inaccurage measurements when used with CellMeasurer.\n\n\n      if (this.props.width === 0 || this.props.height === 0) {\n        return null;\n      } // scrollTop and scrollLeft props are explicitly filtered out and ignored\n\n\n      var _this$state4 = this.state,\n          scrollLeft = _this$state4.scrollLeft,\n          scrollTop = _this$state4.scrollTop;\n      return React.createElement(\"div\", {\n        style: this._containerOuterStyle\n      }, React.createElement(\"div\", {\n        style: this._containerTopStyle\n      }, this._renderTopLeftGrid(rest), this._renderTopRightGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        scrollLeft: scrollLeft\n      }))), React.createElement(\"div\", {\n        style: this._containerBottomStyle\n      }, this._renderBottomLeftGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        scrollTop: scrollTop\n      })), this._renderBottomRightGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        onSectionRendered: onSectionRendered,\n        scrollLeft: scrollLeft,\n        scrollToColumn: scrollToColumn,\n        scrollToRow: scrollToRow,\n        scrollTop: scrollTop\n      }))));\n    }\n  }, {\n    key: \"_getBottomGridHeight\",\n    value: function _getBottomGridHeight(props) {\n      var height = props.height;\n\n      var topGridHeight = this._getTopGridHeight(props);\n\n      return height - topGridHeight;\n    }\n  }, {\n    key: \"_getLeftGridWidth\",\n    value: function _getLeftGridWidth(props) {\n      var fixedColumnCount = props.fixedColumnCount,\n          columnWidth = props.columnWidth;\n\n      if (this._leftGridWidth == null) {\n        if (typeof columnWidth === 'function') {\n          var leftGridWidth = 0;\n\n          for (var index = 0; index < fixedColumnCount; index++) {\n            leftGridWidth += columnWidth({\n              index: index\n            });\n          }\n\n          this._leftGridWidth = leftGridWidth;\n        } else {\n          this._leftGridWidth = columnWidth * fixedColumnCount;\n        }\n      }\n\n      return this._leftGridWidth;\n    }\n  }, {\n    key: \"_getRightGridWidth\",\n    value: function _getRightGridWidth(props) {\n      var width = props.width;\n\n      var leftGridWidth = this._getLeftGridWidth(props);\n\n      return width - leftGridWidth;\n    }\n  }, {\n    key: \"_getTopGridHeight\",\n    value: function _getTopGridHeight(props) {\n      var fixedRowCount = props.fixedRowCount,\n          rowHeight = props.rowHeight;\n\n      if (this._topGridHeight == null) {\n        if (typeof rowHeight === 'function') {\n          var topGridHeight = 0;\n\n          for (var index = 0; index < fixedRowCount; index++) {\n            topGridHeight += rowHeight({\n              index: index\n            });\n          }\n\n          this._topGridHeight = topGridHeight;\n        } else {\n          this._topGridHeight = rowHeight * fixedRowCount;\n        }\n      }\n\n      return this._topGridHeight;\n    }\n  }, {\n    key: \"_handleInvalidatedGridSize\",\n    value: function _handleInvalidatedGridSize() {\n      if (typeof this._deferredInvalidateColumnIndex === 'number') {\n        var columnIndex = this._deferredInvalidateColumnIndex;\n        var rowIndex = this._deferredInvalidateRowIndex;\n        this._deferredInvalidateColumnIndex = null;\n        this._deferredInvalidateRowIndex = null;\n        this.recomputeGridSize({\n          columnIndex: columnIndex,\n          rowIndex: rowIndex\n        });\n        this.forceUpdate();\n      }\n    }\n    /**\n     * Avoid recreating inline styles each render; this bypasses Grid's shallowCompare.\n     * This method recalculates styles only when specific props change.\n     */\n\n  }, {\n    key: \"_maybeCalculateCachedStyles\",\n    value: function _maybeCalculateCachedStyles(resetAll) {\n      var _this$props9 = this.props,\n          columnWidth = _this$props9.columnWidth,\n          enableFixedColumnScroll = _this$props9.enableFixedColumnScroll,\n          enableFixedRowScroll = _this$props9.enableFixedRowScroll,\n          height = _this$props9.height,\n          fixedColumnCount = _this$props9.fixedColumnCount,\n          fixedRowCount = _this$props9.fixedRowCount,\n          rowHeight = _this$props9.rowHeight,\n          style = _this$props9.style,\n          styleBottomLeftGrid = _this$props9.styleBottomLeftGrid,\n          styleBottomRightGrid = _this$props9.styleBottomRightGrid,\n          styleTopLeftGrid = _this$props9.styleTopLeftGrid,\n          styleTopRightGrid = _this$props9.styleTopRightGrid,\n          width = _this$props9.width;\n      var sizeChange = resetAll || height !== this._lastRenderedHeight || width !== this._lastRenderedWidth;\n      var leftSizeChange = resetAll || columnWidth !== this._lastRenderedColumnWidth || fixedColumnCount !== this._lastRenderedFixedColumnCount;\n      var topSizeChange = resetAll || fixedRowCount !== this._lastRenderedFixedRowCount || rowHeight !== this._lastRenderedRowHeight;\n\n      if (resetAll || sizeChange || style !== this._lastRenderedStyle) {\n        this._containerOuterStyle = _objectSpread({\n          height: height,\n          overflow: 'visible',\n          // Let :focus outline show through\n          width: width\n        }, style);\n      }\n\n      if (resetAll || sizeChange || topSizeChange) {\n        this._containerTopStyle = {\n          height: this._getTopGridHeight(this.props),\n          position: 'relative',\n          width: width\n        };\n        this._containerBottomStyle = {\n          height: height - this._getTopGridHeight(this.props),\n          overflow: 'visible',\n          // Let :focus outline show through\n          position: 'relative',\n          width: width\n        };\n      }\n\n      if (resetAll || styleBottomLeftGrid !== this._lastRenderedStyleBottomLeftGrid) {\n        this._bottomLeftGridStyle = _objectSpread({\n          left: 0,\n          overflowX: 'hidden',\n          overflowY: enableFixedColumnScroll ? 'auto' : 'hidden',\n          position: 'absolute'\n        }, styleBottomLeftGrid);\n      }\n\n      if (resetAll || leftSizeChange || styleBottomRightGrid !== this._lastRenderedStyleBottomRightGrid) {\n        this._bottomRightGridStyle = _objectSpread({\n          left: this._getLeftGridWidth(this.props),\n          position: 'absolute'\n        }, styleBottomRightGrid);\n      }\n\n      if (resetAll || styleTopLeftGrid !== this._lastRenderedStyleTopLeftGrid) {\n        this._topLeftGridStyle = _objectSpread({\n          left: 0,\n          overflowX: 'hidden',\n          overflowY: 'hidden',\n          position: 'absolute',\n          top: 0\n        }, styleTopLeftGrid);\n      }\n\n      if (resetAll || leftSizeChange || styleTopRightGrid !== this._lastRenderedStyleTopRightGrid) {\n        this._topRightGridStyle = _objectSpread({\n          left: this._getLeftGridWidth(this.props),\n          overflowX: enableFixedRowScroll ? 'auto' : 'hidden',\n          overflowY: 'hidden',\n          position: 'absolute',\n          top: 0\n        }, styleTopRightGrid);\n      }\n\n      this._lastRenderedColumnWidth = columnWidth;\n      this._lastRenderedFixedColumnCount = fixedColumnCount;\n      this._lastRenderedFixedRowCount = fixedRowCount;\n      this._lastRenderedHeight = height;\n      this._lastRenderedRowHeight = rowHeight;\n      this._lastRenderedStyle = style;\n      this._lastRenderedStyleBottomLeftGrid = styleBottomLeftGrid;\n      this._lastRenderedStyleBottomRightGrid = styleBottomRightGrid;\n      this._lastRenderedStyleTopLeftGrid = styleTopLeftGrid;\n      this._lastRenderedStyleTopRightGrid = styleTopRightGrid;\n      this._lastRenderedWidth = width;\n    }\n  }, {\n    key: \"_prepareForRender\",\n    value: function _prepareForRender() {\n      if (this._lastRenderedColumnWidth !== this.props.columnWidth || this._lastRenderedFixedColumnCount !== this.props.fixedColumnCount) {\n        this._leftGridWidth = null;\n      }\n\n      if (this._lastRenderedFixedRowCount !== this.props.fixedRowCount || this._lastRenderedRowHeight !== this.props.rowHeight) {\n        this._topGridHeight = null;\n      }\n\n      this._maybeCalculateCachedStyles();\n\n      this._lastRenderedColumnWidth = this.props.columnWidth;\n      this._lastRenderedFixedColumnCount = this.props.fixedColumnCount;\n      this._lastRenderedFixedRowCount = this.props.fixedRowCount;\n      this._lastRenderedRowHeight = this.props.rowHeight;\n    }\n  }, {\n    key: \"_renderBottomLeftGrid\",\n    value: function _renderBottomLeftGrid(props) {\n      var enableFixedColumnScroll = props.enableFixedColumnScroll,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          rowCount = props.rowCount,\n          hideBottomLeftGridScrollbar = props.hideBottomLeftGridScrollbar;\n      var showVerticalScrollbar = this.state.showVerticalScrollbar;\n\n      if (!fixedColumnCount) {\n        return null;\n      }\n\n      var additionalRowCount = showVerticalScrollbar ? 1 : 0,\n          height = this._getBottomGridHeight(props),\n          width = this._getLeftGridWidth(props),\n          scrollbarSize = this.state.showVerticalScrollbar ? this.state.scrollbarSize : 0,\n          gridWidth = hideBottomLeftGridScrollbar ? width + scrollbarSize : width;\n\n      var bottomLeftGrid = React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererBottomLeftGrid,\n        className: this.props.classNameBottomLeftGrid,\n        columnCount: fixedColumnCount,\n        deferredMeasurementCache: this._deferredMeasurementCacheBottomLeftGrid,\n        height: height,\n        onScroll: enableFixedColumnScroll ? this._onScrollTop : undefined,\n        ref: this._bottomLeftGridRef,\n        rowCount: Math.max(0, rowCount - fixedRowCount) + additionalRowCount,\n        rowHeight: this._rowHeightBottomGrid,\n        style: this._bottomLeftGridStyle,\n        tabIndex: null,\n        width: gridWidth\n      }));\n\n      if (hideBottomLeftGridScrollbar) {\n        return React.createElement(\"div\", {\n          className: \"BottomLeftGrid_ScrollWrapper\",\n          style: _objectSpread({}, this._bottomLeftGridStyle, {\n            height: height,\n            width: width,\n            overflowY: 'hidden'\n          })\n        }, bottomLeftGrid);\n      }\n\n      return bottomLeftGrid;\n    }\n  }, {\n    key: \"_renderBottomRightGrid\",\n    value: function _renderBottomRightGrid(props) {\n      var columnCount = props.columnCount,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          rowCount = props.rowCount,\n          scrollToColumn = props.scrollToColumn,\n          scrollToRow = props.scrollToRow;\n      return React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererBottomRightGrid,\n        className: this.props.classNameBottomRightGrid,\n        columnCount: Math.max(0, columnCount - fixedColumnCount),\n        columnWidth: this._columnWidthRightGrid,\n        deferredMeasurementCache: this._deferredMeasurementCacheBottomRightGrid,\n        height: this._getBottomGridHeight(props),\n        onScroll: this._onScroll,\n        onScrollbarPresenceChange: this._onScrollbarPresenceChange,\n        ref: this._bottomRightGridRef,\n        rowCount: Math.max(0, rowCount - fixedRowCount),\n        rowHeight: this._rowHeightBottomGrid,\n        scrollToColumn: scrollToColumn - fixedColumnCount,\n        scrollToRow: scrollToRow - fixedRowCount,\n        style: this._bottomRightGridStyle,\n        width: this._getRightGridWidth(props)\n      }));\n    }\n  }, {\n    key: \"_renderTopLeftGrid\",\n    value: function _renderTopLeftGrid(props) {\n      var fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount;\n\n      if (!fixedColumnCount || !fixedRowCount) {\n        return null;\n      }\n\n      return React.createElement(Grid, _extends({}, props, {\n        className: this.props.classNameTopLeftGrid,\n        columnCount: fixedColumnCount,\n        height: this._getTopGridHeight(props),\n        ref: this._topLeftGridRef,\n        rowCount: fixedRowCount,\n        style: this._topLeftGridStyle,\n        tabIndex: null,\n        width: this._getLeftGridWidth(props)\n      }));\n    }\n  }, {\n    key: \"_renderTopRightGrid\",\n    value: function _renderTopRightGrid(props) {\n      var columnCount = props.columnCount,\n          enableFixedRowScroll = props.enableFixedRowScroll,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          scrollLeft = props.scrollLeft,\n          hideTopRightGridScrollbar = props.hideTopRightGridScrollbar;\n      var _this$state5 = this.state,\n          showHorizontalScrollbar = _this$state5.showHorizontalScrollbar,\n          scrollbarSize = _this$state5.scrollbarSize;\n\n      if (!fixedRowCount) {\n        return null;\n      }\n\n      var additionalColumnCount = showHorizontalScrollbar ? 1 : 0,\n          height = this._getTopGridHeight(props),\n          width = this._getRightGridWidth(props),\n          additionalHeight = showHorizontalScrollbar ? scrollbarSize : 0;\n\n      var gridHeight = height,\n          style = this._topRightGridStyle;\n\n      if (hideTopRightGridScrollbar) {\n        gridHeight = height + additionalHeight;\n        style = _objectSpread({}, this._topRightGridStyle, {\n          left: 0\n        });\n      }\n\n      var topRightGrid = React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererTopRightGrid,\n        className: this.props.classNameTopRightGrid,\n        columnCount: Math.max(0, columnCount - fixedColumnCount) + additionalColumnCount,\n        columnWidth: this._columnWidthRightGrid,\n        deferredMeasurementCache: this._deferredMeasurementCacheTopRightGrid,\n        height: gridHeight,\n        onScroll: enableFixedRowScroll ? this._onScrollLeft : undefined,\n        ref: this._topRightGridRef,\n        rowCount: fixedRowCount,\n        scrollLeft: scrollLeft,\n        style: style,\n        tabIndex: null,\n        width: width\n      }));\n\n      if (hideTopRightGridScrollbar) {\n        return React.createElement(\"div\", {\n          className: \"TopRightGrid_ScrollWrapper\",\n          style: _objectSpread({}, this._topRightGridStyle, {\n            height: height,\n            width: width,\n            overflowX: 'hidden'\n          })\n        }, topRightGrid);\n      }\n\n      return topRightGrid;\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.scrollLeft !== prevState.scrollLeft || nextProps.scrollTop !== prevState.scrollTop) {\n        return {\n          scrollLeft: nextProps.scrollLeft != null && nextProps.scrollLeft >= 0 ? nextProps.scrollLeft : prevState.scrollLeft,\n          scrollTop: nextProps.scrollTop != null && nextProps.scrollTop >= 0 ? nextProps.scrollTop : prevState.scrollTop\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return MultiGrid;\n}(React.PureComponent);\n\n_defineProperty(MultiGrid, \"defaultProps\", {\n  classNameBottomLeftGrid: '',\n  classNameBottomRightGrid: '',\n  classNameTopLeftGrid: '',\n  classNameTopRightGrid: '',\n  enableFixedColumnScroll: false,\n  enableFixedRowScroll: false,\n  fixedColumnCount: 0,\n  fixedRowCount: 0,\n  scrollToColumn: -1,\n  scrollToRow: -1,\n  style: {},\n  styleBottomLeftGrid: {},\n  styleBottomRightGrid: {},\n  styleTopLeftGrid: {},\n  styleTopRightGrid: {},\n  hideTopRightGridScrollbar: false,\n  hideBottomLeftGridScrollbar: false\n});\n\nMultiGrid.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  classNameBottomLeftGrid: PropTypes.string.isRequired,\n  classNameBottomRightGrid: PropTypes.string.isRequired,\n  classNameTopLeftGrid: PropTypes.string.isRequired,\n  classNameTopRightGrid: PropTypes.string.isRequired,\n  enableFixedColumnScroll: PropTypes.bool.isRequired,\n  enableFixedRowScroll: PropTypes.bool.isRequired,\n  fixedColumnCount: PropTypes.number.isRequired,\n  fixedRowCount: PropTypes.number.isRequired,\n  onScrollbarPresenceChange: PropTypes.func,\n  style: PropTypes.object.isRequired,\n  styleBottomLeftGrid: PropTypes.object.isRequired,\n  styleBottomRightGrid: PropTypes.object.isRequired,\n  styleTopLeftGrid: PropTypes.object.isRequired,\n  styleTopRightGrid: PropTypes.object.isRequired,\n  hideTopRightGridScrollbar: PropTypes.bool,\n  hideBottomLeftGridScrollbar: PropTypes.bool\n} : {};\npolyfill(MultiGrid);\nexport default MultiGrid;","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\n/**\n * HOC that simplifies the process of synchronizing scrolling between two or more virtualized components.\n */\n\nvar ScrollSync =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(ScrollSync, _React$PureComponent);\n\n  function ScrollSync(props, context) {\n    var _this;\n\n    _classCallCheck(this, ScrollSync);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ScrollSync).call(this, props, context));\n    _this.state = {\n      clientHeight: 0,\n      clientWidth: 0,\n      scrollHeight: 0,\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollWidth: 0\n    };\n    _this._onScroll = _this._onScroll.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ScrollSync, [{\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      var _this$state = this.state,\n          clientHeight = _this$state.clientHeight,\n          clientWidth = _this$state.clientWidth,\n          scrollHeight = _this$state.scrollHeight,\n          scrollLeft = _this$state.scrollLeft,\n          scrollTop = _this$state.scrollTop,\n          scrollWidth = _this$state.scrollWidth;\n      return children({\n        clientHeight: clientHeight,\n        clientWidth: clientWidth,\n        onScroll: this._onScroll,\n        scrollHeight: scrollHeight,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        scrollWidth: scrollWidth\n      });\n    }\n  }, {\n    key: \"_onScroll\",\n    value: function _onScroll(_ref) {\n      var clientHeight = _ref.clientHeight,\n          clientWidth = _ref.clientWidth,\n          scrollHeight = _ref.scrollHeight,\n          scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop,\n          scrollWidth = _ref.scrollWidth;\n      this.setState({\n        clientHeight: clientHeight,\n        clientWidth: clientWidth,\n        scrollHeight: scrollHeight,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        scrollWidth: scrollWidth\n      });\n    }\n  }]);\n\n  return ScrollSync;\n}(React.PureComponent);\n\nexport { ScrollSync as default };\nScrollSync.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering 2 or more virtualized components.\n   * This function should implement the following signature:\n   * ({ onScroll, scrollLeft, scrollTop }) => PropTypes.element\n   */\n  children: PropTypes.func.isRequired\n} : {};","import * as React from 'react';\nexport default function defaultHeaderRowRenderer(_ref) {\n  var className = _ref.className,\n      columns = _ref.columns,\n      style = _ref.style;\n  return React.createElement(\"div\", {\n    className: className,\n    role: \"row\",\n    style: style\n  }, columns);\n}\ndefaultHeaderRowRenderer.propTypes = process.env.NODE_ENV === 'production' ? null : bpfrpt_proptype_HeaderRowRendererParams === PropTypes.any ? {} : bpfrpt_proptype_HeaderRowRendererParams;\nimport { bpfrpt_proptype_HeaderRowRendererParams } from \"./types\";\nimport PropTypes from \"prop-types\";","var SortDirection = {\n  /**\n   * Sort items in ascending order.\n   * This means arranging from the lowest value to the highest (e.g. a-z, 0-9).\n   */\n  ASC: 'ASC',\n\n  /**\n   * Sort items in descending order.\n   * This means arranging from the highest value to the lowest (e.g. z-a, 9-0).\n   */\n  DESC: 'DESC'\n};\nexport default SortDirection;","import clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport SortDirection from './SortDirection';\n/**\n * Displayed beside a header to indicate that a Table is currently sorted by this column.\n */\n\nexport default function SortIndicator(_ref) {\n  var sortDirection = _ref.sortDirection;\n  var classNames = clsx('ReactVirtualized__Table__sortableHeaderIcon', {\n    'ReactVirtualized__Table__sortableHeaderIcon--ASC': sortDirection === SortDirection.ASC,\n    'ReactVirtualized__Table__sortableHeaderIcon--DESC': sortDirection === SortDirection.DESC\n  });\n  return React.createElement(\"svg\", {\n    className: classNames,\n    width: 18,\n    height: 18,\n    viewBox: \"0 0 24 24\"\n  }, sortDirection === SortDirection.ASC ? React.createElement(\"path\", {\n    d: \"M7 14l5-5 5 5z\"\n  }) : React.createElement(\"path\", {\n    d: \"M7 10l5 5 5-5z\"\n  }), React.createElement(\"path\", {\n    d: \"M0 0h24v24H0z\",\n    fill: \"none\"\n  }));\n}\nSortIndicator.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  sortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC])\n} : {};","import * as React from 'react';\nimport SortIndicator from './SortIndicator';\n\n/**\n * Default table header renderer.\n */\nexport default function defaultHeaderRenderer(_ref) {\n  var dataKey = _ref.dataKey,\n      label = _ref.label,\n      sortBy = _ref.sortBy,\n      sortDirection = _ref.sortDirection;\n  var showSortIndicator = sortBy === dataKey;\n  var children = [React.createElement(\"span\", {\n    className: \"ReactVirtualized__Table__headerTruncatedText\",\n    key: \"label\",\n    title: typeof label === 'string' ? label : null\n  }, label)];\n\n  if (showSortIndicator) {\n    children.push(React.createElement(SortIndicator, {\n      key: \"SortIndicator\",\n      sortDirection: sortDirection\n    }));\n  }\n\n  return children;\n}\ndefaultHeaderRenderer.propTypes = process.env.NODE_ENV === 'production' ? null : bpfrpt_proptype_HeaderRendererParams === PropTypes.any ? {} : bpfrpt_proptype_HeaderRendererParams;\nimport { bpfrpt_proptype_HeaderRendererParams } from \"./types\";\nimport PropTypes from \"prop-types\";","import _extends from \"@babel/runtime/helpers/extends\";\nimport * as React from 'react';\n\n/**\n * Default row renderer for Table.\n */\nexport default function defaultRowRenderer(_ref) {\n  var className = _ref.className,\n      columns = _ref.columns,\n      index = _ref.index,\n      key = _ref.key,\n      onRowClick = _ref.onRowClick,\n      onRowDoubleClick = _ref.onRowDoubleClick,\n      onRowMouseOut = _ref.onRowMouseOut,\n      onRowMouseOver = _ref.onRowMouseOver,\n      onRowRightClick = _ref.onRowRightClick,\n      rowData = _ref.rowData,\n      style = _ref.style;\n  var a11yProps = {\n    'aria-rowindex': index + 1\n  };\n\n  if (onRowClick || onRowDoubleClick || onRowMouseOut || onRowMouseOver || onRowRightClick) {\n    a11yProps['aria-label'] = 'row';\n    a11yProps.tabIndex = 0;\n\n    if (onRowClick) {\n      a11yProps.onClick = function (event) {\n        return onRowClick({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowDoubleClick) {\n      a11yProps.onDoubleClick = function (event) {\n        return onRowDoubleClick({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowMouseOut) {\n      a11yProps.onMouseOut = function (event) {\n        return onRowMouseOut({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowMouseOver) {\n      a11yProps.onMouseOver = function (event) {\n        return onRowMouseOver({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowRightClick) {\n      a11yProps.onContextMenu = function (event) {\n        return onRowRightClick({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n  }\n\n  return React.createElement(\"div\", _extends({}, a11yProps, {\n    className: className,\n    key: key,\n    role: \"row\",\n    style: style\n  }), columns);\n}\ndefaultRowRenderer.propTypes = process.env.NODE_ENV === 'production' ? null : bpfrpt_proptype_RowRendererParams === PropTypes.any ? {} : bpfrpt_proptype_RowRendererParams;\nimport { bpfrpt_proptype_RowRendererParams } from \"./types\";\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport defaultHeaderRenderer from './defaultHeaderRenderer';\nimport defaultCellRenderer from './defaultCellRenderer';\nimport defaultCellDataGetter from './defaultCellDataGetter';\nimport SortDirection from './SortDirection';\n/**\n * Describes the header and cell contents of a table column.\n */\n\nvar Column =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Column, _React$Component);\n\n  function Column() {\n    _classCallCheck(this, Column);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Column).apply(this, arguments));\n  }\n\n  return Column;\n}(React.Component);\n\n_defineProperty(Column, \"defaultProps\", {\n  cellDataGetter: defaultCellDataGetter,\n  cellRenderer: defaultCellRenderer,\n  defaultSortDirection: SortDirection.ASC,\n  flexGrow: 0,\n  flexShrink: 1,\n  headerRenderer: defaultHeaderRenderer,\n  style: {}\n});\n\nexport { Column as default };\nColumn.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** Optional aria-label value to set on the column header */\n  'aria-label': PropTypes.string,\n\n  /**\n   * Callback responsible for returning a cell's data, given its :dataKey\n   * ({ columnData: any, dataKey: string, rowData: any }): any\n   */\n  cellDataGetter: PropTypes.func,\n\n  /**\n   * Callback responsible for rendering a cell's contents.\n   * ({ cellData: any, columnData: any, dataKey: string, rowData: any, rowIndex: number }): node\n   */\n  cellRenderer: PropTypes.func,\n\n  /** Optional CSS class to apply to cell */\n  className: PropTypes.string,\n\n  /** Optional additional data passed to this column's :cellDataGetter */\n  columnData: PropTypes.object,\n\n  /** Uniquely identifies the row-data attribute corresponding to this cell */\n  dataKey: PropTypes.any.isRequired,\n\n  /** Optional direction to be used when clicked the first time */\n  defaultSortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC]),\n\n  /** If sort is enabled for the table at large, disable it for this column */\n  disableSort: PropTypes.bool,\n\n  /** Flex grow style; defaults to 0 */\n  flexGrow: PropTypes.number,\n\n  /** Flex shrink style; defaults to 1 */\n  flexShrink: PropTypes.number,\n\n  /** Optional CSS class to apply to this column's header */\n  headerClassName: PropTypes.string,\n\n  /**\n   * Optional callback responsible for rendering a column header contents.\n   * ({ columnData: object, dataKey: string, disableSort: boolean, label: node, sortBy: string, sortDirection: string }): PropTypes.node\n   */\n  headerRenderer: PropTypes.func.isRequired,\n\n  /** Optional inline style to apply to this column's header */\n  headerStyle: PropTypes.object,\n\n  /** Optional id to set on the column header */\n  id: PropTypes.string,\n\n  /** Header label for this column */\n  label: PropTypes.node,\n\n  /** Maximum width of column; this property will only be used if :flexGrow is > 0. */\n  maxWidth: PropTypes.number,\n\n  /** Minimum width of column. */\n  minWidth: PropTypes.number,\n\n  /** Optional inline style to apply to cell */\n  style: PropTypes.object,\n\n  /** Flex basis (width) for this column; This value can grow or shrink based on :flexGrow and :flexShrink properties. */\n  width: PropTypes.number.isRequired\n} : {};","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport clsx from 'clsx';\nimport Column from './Column';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { findDOMNode } from 'react-dom';\nimport Grid, { accessibilityOverscanIndicesGetter } from '../Grid';\nimport defaultRowRenderer from './defaultRowRenderer';\nimport defaultHeaderRowRenderer from './defaultHeaderRowRenderer';\nimport SortDirection from './SortDirection';\n/**\n * Table component with fixed headers and virtualized rows for improved performance with large data sets.\n * This component expects explicit width, height, and padding parameters.\n */\n\nvar Table =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Table, _React$PureComponent);\n\n  function Table(props) {\n    var _this;\n\n    _classCallCheck(this, Table);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Table).call(this, props));\n    _this.state = {\n      scrollbarWidth: 0\n    };\n    _this._createColumn = _this._createColumn.bind(_assertThisInitialized(_this));\n    _this._createRow = _this._createRow.bind(_assertThisInitialized(_this));\n    _this._onScroll = _this._onScroll.bind(_assertThisInitialized(_this));\n    _this._onSectionRendered = _this._onSectionRendered.bind(_assertThisInitialized(_this));\n    _this._setRef = _this._setRef.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Table, [{\n    key: \"forceUpdateGrid\",\n    value: function forceUpdateGrid() {\n      if (this.Grid) {\n        this.Grid.forceUpdate();\n      }\n    }\n    /** See Grid#getOffsetForCell */\n\n  }, {\n    key: \"getOffsetForRow\",\n    value: function getOffsetForRow(_ref) {\n      var alignment = _ref.alignment,\n          index = _ref.index;\n\n      if (this.Grid) {\n        var _this$Grid$getOffsetF = this.Grid.getOffsetForCell({\n          alignment: alignment,\n          rowIndex: index\n        }),\n            scrollTop = _this$Grid$getOffsetF.scrollTop;\n\n        return scrollTop;\n      }\n\n      return 0;\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref2) {\n      var columnIndex = _ref2.columnIndex,\n          rowIndex = _ref2.rowIndex;\n\n      if (this.Grid) {\n        this.Grid.invalidateCellSizeAfterRender({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllRows\",\n    value: function measureAllRows() {\n      if (this.Grid) {\n        this.Grid.measureAllCells();\n      }\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref3$columnIndex = _ref3.columnIndex,\n          columnIndex = _ref3$columnIndex === void 0 ? 0 : _ref3$columnIndex,\n          _ref3$rowIndex = _ref3.rowIndex,\n          rowIndex = _ref3$rowIndex === void 0 ? 0 : _ref3$rowIndex;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeRowHeights\",\n    value: function recomputeRowHeights() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: index\n        });\n      }\n    }\n    /** See Grid#scrollToPosition */\n\n  }, {\n    key: \"scrollToPosition\",\n    value: function scrollToPosition() {\n      var scrollTop = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToPosition({\n          scrollTop: scrollTop\n        });\n      }\n    }\n    /** See Grid#scrollToCell */\n\n  }, {\n    key: \"scrollToRow\",\n    value: function scrollToRow() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToCell({\n          columnIndex: 0,\n          rowIndex: index\n        });\n      }\n    }\n  }, {\n    key: \"getScrollbarWidth\",\n    value: function getScrollbarWidth() {\n      if (this.Grid) {\n        var _Grid = findDOMNode(this.Grid);\n\n        var clientWidth = _Grid.clientWidth || 0;\n        var offsetWidth = _Grid.offsetWidth || 0;\n        return offsetWidth - clientWidth;\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._setScrollbarWidth();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._setScrollbarWidth();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          children = _this$props.children,\n          className = _this$props.className,\n          disableHeader = _this$props.disableHeader,\n          gridClassName = _this$props.gridClassName,\n          gridStyle = _this$props.gridStyle,\n          headerHeight = _this$props.headerHeight,\n          headerRowRenderer = _this$props.headerRowRenderer,\n          height = _this$props.height,\n          id = _this$props.id,\n          noRowsRenderer = _this$props.noRowsRenderer,\n          rowClassName = _this$props.rowClassName,\n          rowStyle = _this$props.rowStyle,\n          scrollToIndex = _this$props.scrollToIndex,\n          style = _this$props.style,\n          width = _this$props.width;\n      var scrollbarWidth = this.state.scrollbarWidth;\n      var availableRowsHeight = disableHeader ? height : height - headerHeight;\n      var rowClass = typeof rowClassName === 'function' ? rowClassName({\n        index: -1\n      }) : rowClassName;\n      var rowStyleObject = typeof rowStyle === 'function' ? rowStyle({\n        index: -1\n      }) : rowStyle; // Precompute and cache column styles before rendering rows and columns to speed things up\n\n      this._cachedColumnStyles = [];\n      React.Children.toArray(children).forEach(function (column, index) {\n        var flexStyles = _this2._getFlexStyleForColumn(column, column.props.style);\n\n        _this2._cachedColumnStyles[index] = _objectSpread({\n          overflow: 'hidden'\n        }, flexStyles);\n      }); // Note that we specify :rowCount, :scrollbarWidth, :sortBy, and :sortDirection as properties on Grid even though these have nothing to do with Grid.\n      // This is done because Grid is a pure component and won't update unless its properties or state has changed.\n      // Any property that should trigger a re-render of Grid then is specified here to avoid a stale display.\n\n      return React.createElement(\"div\", {\n        \"aria-label\": this.props['aria-label'],\n        \"aria-labelledby\": this.props['aria-labelledby'],\n        \"aria-colcount\": React.Children.toArray(children).length,\n        \"aria-rowcount\": this.props.rowCount,\n        className: clsx('ReactVirtualized__Table', className),\n        id: id,\n        role: \"grid\",\n        style: style\n      }, !disableHeader && headerRowRenderer({\n        className: clsx('ReactVirtualized__Table__headerRow', rowClass),\n        columns: this._getHeaderColumns(),\n        style: _objectSpread({\n          height: headerHeight,\n          overflow: 'hidden',\n          paddingRight: scrollbarWidth,\n          width: width\n        }, rowStyleObject)\n      }), React.createElement(Grid, _extends({}, this.props, {\n        \"aria-readonly\": null,\n        autoContainerWidth: true,\n        className: clsx('ReactVirtualized__Table__Grid', gridClassName),\n        cellRenderer: this._createRow,\n        columnWidth: width,\n        columnCount: 1,\n        height: availableRowsHeight,\n        id: undefined,\n        noContentRenderer: noRowsRenderer,\n        onScroll: this._onScroll,\n        onSectionRendered: this._onSectionRendered,\n        ref: this._setRef,\n        role: \"rowgroup\",\n        scrollbarWidth: scrollbarWidth,\n        scrollToRow: scrollToIndex,\n        style: _objectSpread({}, gridStyle, {\n          overflowX: 'hidden'\n        })\n      })));\n    }\n  }, {\n    key: \"_createColumn\",\n    value: function _createColumn(_ref4) {\n      var column = _ref4.column,\n          columnIndex = _ref4.columnIndex,\n          isScrolling = _ref4.isScrolling,\n          parent = _ref4.parent,\n          rowData = _ref4.rowData,\n          rowIndex = _ref4.rowIndex;\n      var onColumnClick = this.props.onColumnClick;\n      var _column$props = column.props,\n          cellDataGetter = _column$props.cellDataGetter,\n          cellRenderer = _column$props.cellRenderer,\n          className = _column$props.className,\n          columnData = _column$props.columnData,\n          dataKey = _column$props.dataKey,\n          id = _column$props.id;\n      var cellData = cellDataGetter({\n        columnData: columnData,\n        dataKey: dataKey,\n        rowData: rowData\n      });\n      var renderedCell = cellRenderer({\n        cellData: cellData,\n        columnData: columnData,\n        columnIndex: columnIndex,\n        dataKey: dataKey,\n        isScrolling: isScrolling,\n        parent: parent,\n        rowData: rowData,\n        rowIndex: rowIndex\n      });\n\n      var onClick = function onClick(event) {\n        onColumnClick && onColumnClick({\n          columnData: columnData,\n          dataKey: dataKey,\n          event: event\n        });\n      };\n\n      var style = this._cachedColumnStyles[columnIndex];\n      var title = typeof renderedCell === 'string' ? renderedCell : null; // Avoid using object-spread syntax with multiple objects here,\n      // Since it results in an extra method call to 'babel-runtime/helpers/extends'\n      // See PR https://github.com/bvaughn/react-virtualized/pull/942\n\n      return React.createElement(\"div\", {\n        \"aria-colindex\": columnIndex + 1,\n        \"aria-describedby\": id,\n        className: clsx('ReactVirtualized__Table__rowColumn', className),\n        key: 'Row' + rowIndex + '-' + 'Col' + columnIndex,\n        onClick: onClick,\n        role: \"gridcell\",\n        style: style,\n        title: title\n      }, renderedCell);\n    }\n  }, {\n    key: \"_createHeader\",\n    value: function _createHeader(_ref5) {\n      var column = _ref5.column,\n          index = _ref5.index;\n      var _this$props2 = this.props,\n          headerClassName = _this$props2.headerClassName,\n          headerStyle = _this$props2.headerStyle,\n          onHeaderClick = _this$props2.onHeaderClick,\n          sort = _this$props2.sort,\n          sortBy = _this$props2.sortBy,\n          sortDirection = _this$props2.sortDirection;\n      var _column$props2 = column.props,\n          columnData = _column$props2.columnData,\n          dataKey = _column$props2.dataKey,\n          defaultSortDirection = _column$props2.defaultSortDirection,\n          disableSort = _column$props2.disableSort,\n          headerRenderer = _column$props2.headerRenderer,\n          id = _column$props2.id,\n          label = _column$props2.label;\n      var sortEnabled = !disableSort && sort;\n      var classNames = clsx('ReactVirtualized__Table__headerColumn', headerClassName, column.props.headerClassName, {\n        ReactVirtualized__Table__sortableHeaderColumn: sortEnabled\n      });\n\n      var style = this._getFlexStyleForColumn(column, _objectSpread({}, headerStyle, {}, column.props.headerStyle));\n\n      var renderedHeader = headerRenderer({\n        columnData: columnData,\n        dataKey: dataKey,\n        disableSort: disableSort,\n        label: label,\n        sortBy: sortBy,\n        sortDirection: sortDirection\n      });\n      var headerOnClick, headerOnKeyDown, headerTabIndex, headerAriaSort, headerAriaLabel;\n\n      if (sortEnabled || onHeaderClick) {\n        // If this is a sortable header, clicking it should update the table data's sorting.\n        var isFirstTimeSort = sortBy !== dataKey; // If this is the firstTime sort of this column, use the column default sort order.\n        // Otherwise, invert the direction of the sort.\n\n        var newSortDirection = isFirstTimeSort ? defaultSortDirection : sortDirection === SortDirection.DESC ? SortDirection.ASC : SortDirection.DESC;\n\n        var onClick = function onClick(event) {\n          sortEnabled && sort({\n            defaultSortDirection: defaultSortDirection,\n            event: event,\n            sortBy: dataKey,\n            sortDirection: newSortDirection\n          });\n          onHeaderClick && onHeaderClick({\n            columnData: columnData,\n            dataKey: dataKey,\n            event: event\n          });\n        };\n\n        var onKeyDown = function onKeyDown(event) {\n          if (event.key === 'Enter' || event.key === ' ') {\n            onClick(event);\n          }\n        };\n\n        headerAriaLabel = column.props['aria-label'] || label || dataKey;\n        headerAriaSort = 'none';\n        headerTabIndex = 0;\n        headerOnClick = onClick;\n        headerOnKeyDown = onKeyDown;\n      }\n\n      if (sortBy === dataKey) {\n        headerAriaSort = sortDirection === SortDirection.ASC ? 'ascending' : 'descending';\n      } // Avoid using object-spread syntax with multiple objects here,\n      // Since it results in an extra method call to 'babel-runtime/helpers/extends'\n      // See PR https://github.com/bvaughn/react-virtualized/pull/942\n\n\n      return React.createElement(\"div\", {\n        \"aria-label\": headerAriaLabel,\n        \"aria-sort\": headerAriaSort,\n        className: classNames,\n        id: id,\n        key: 'Header-Col' + index,\n        onClick: headerOnClick,\n        onKeyDown: headerOnKeyDown,\n        role: \"columnheader\",\n        style: style,\n        tabIndex: headerTabIndex\n      }, renderedHeader);\n    }\n  }, {\n    key: \"_createRow\",\n    value: function _createRow(_ref6) {\n      var _this3 = this;\n\n      var index = _ref6.rowIndex,\n          isScrolling = _ref6.isScrolling,\n          key = _ref6.key,\n          parent = _ref6.parent,\n          style = _ref6.style;\n      var _this$props3 = this.props,\n          children = _this$props3.children,\n          onRowClick = _this$props3.onRowClick,\n          onRowDoubleClick = _this$props3.onRowDoubleClick,\n          onRowRightClick = _this$props3.onRowRightClick,\n          onRowMouseOver = _this$props3.onRowMouseOver,\n          onRowMouseOut = _this$props3.onRowMouseOut,\n          rowClassName = _this$props3.rowClassName,\n          rowGetter = _this$props3.rowGetter,\n          rowRenderer = _this$props3.rowRenderer,\n          rowStyle = _this$props3.rowStyle;\n      var scrollbarWidth = this.state.scrollbarWidth;\n      var rowClass = typeof rowClassName === 'function' ? rowClassName({\n        index: index\n      }) : rowClassName;\n      var rowStyleObject = typeof rowStyle === 'function' ? rowStyle({\n        index: index\n      }) : rowStyle;\n      var rowData = rowGetter({\n        index: index\n      });\n      var columns = React.Children.toArray(children).map(function (column, columnIndex) {\n        return _this3._createColumn({\n          column: column,\n          columnIndex: columnIndex,\n          isScrolling: isScrolling,\n          parent: parent,\n          rowData: rowData,\n          rowIndex: index,\n          scrollbarWidth: scrollbarWidth\n        });\n      });\n      var className = clsx('ReactVirtualized__Table__row', rowClass);\n\n      var flattenedStyle = _objectSpread({}, style, {\n        height: this._getRowHeight(index),\n        overflow: 'hidden',\n        paddingRight: scrollbarWidth\n      }, rowStyleObject);\n\n      return rowRenderer({\n        className: className,\n        columns: columns,\n        index: index,\n        isScrolling: isScrolling,\n        key: key,\n        onRowClick: onRowClick,\n        onRowDoubleClick: onRowDoubleClick,\n        onRowRightClick: onRowRightClick,\n        onRowMouseOver: onRowMouseOver,\n        onRowMouseOut: onRowMouseOut,\n        rowData: rowData,\n        style: flattenedStyle\n      });\n    }\n    /**\n     * Determines the flex-shrink, flex-grow, and width values for a cell (header or column).\n     */\n\n  }, {\n    key: \"_getFlexStyleForColumn\",\n    value: function _getFlexStyleForColumn(column) {\n      var customStyle = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var flexValue = \"\".concat(column.props.flexGrow, \" \").concat(column.props.flexShrink, \" \").concat(column.props.width, \"px\");\n\n      var style = _objectSpread({}, customStyle, {\n        flex: flexValue,\n        msFlex: flexValue,\n        WebkitFlex: flexValue\n      });\n\n      if (column.props.maxWidth) {\n        style.maxWidth = column.props.maxWidth;\n      }\n\n      if (column.props.minWidth) {\n        style.minWidth = column.props.minWidth;\n      }\n\n      return style;\n    }\n  }, {\n    key: \"_getHeaderColumns\",\n    value: function _getHeaderColumns() {\n      var _this4 = this;\n\n      var _this$props4 = this.props,\n          children = _this$props4.children,\n          disableHeader = _this$props4.disableHeader;\n      var items = disableHeader ? [] : React.Children.toArray(children);\n      return items.map(function (column, index) {\n        return _this4._createHeader({\n          column: column,\n          index: index\n        });\n      });\n    }\n  }, {\n    key: \"_getRowHeight\",\n    value: function _getRowHeight(rowIndex) {\n      var rowHeight = this.props.rowHeight;\n      return typeof rowHeight === 'function' ? rowHeight({\n        index: rowIndex\n      }) : rowHeight;\n    }\n  }, {\n    key: \"_onScroll\",\n    value: function _onScroll(_ref7) {\n      var clientHeight = _ref7.clientHeight,\n          scrollHeight = _ref7.scrollHeight,\n          scrollTop = _ref7.scrollTop;\n      var onScroll = this.props.onScroll;\n      onScroll({\n        clientHeight: clientHeight,\n        scrollHeight: scrollHeight,\n        scrollTop: scrollTop\n      });\n    }\n  }, {\n    key: \"_onSectionRendered\",\n    value: function _onSectionRendered(_ref8) {\n      var rowOverscanStartIndex = _ref8.rowOverscanStartIndex,\n          rowOverscanStopIndex = _ref8.rowOverscanStopIndex,\n          rowStartIndex = _ref8.rowStartIndex,\n          rowStopIndex = _ref8.rowStopIndex;\n      var onRowsRendered = this.props.onRowsRendered;\n      onRowsRendered({\n        overscanStartIndex: rowOverscanStartIndex,\n        overscanStopIndex: rowOverscanStopIndex,\n        startIndex: rowStartIndex,\n        stopIndex: rowStopIndex\n      });\n    }\n  }, {\n    key: \"_setRef\",\n    value: function _setRef(ref) {\n      this.Grid = ref;\n    }\n  }, {\n    key: \"_setScrollbarWidth\",\n    value: function _setScrollbarWidth() {\n      var scrollbarWidth = this.getScrollbarWidth();\n      this.setState({\n        scrollbarWidth: scrollbarWidth\n      });\n    }\n  }]);\n\n  return Table;\n}(React.PureComponent);\n\n_defineProperty(Table, \"defaultProps\", {\n  disableHeader: false,\n  estimatedRowSize: 30,\n  headerHeight: 0,\n  headerStyle: {},\n  noRowsRenderer: function noRowsRenderer() {\n    return null;\n  },\n  onRowsRendered: function onRowsRendered() {\n    return null;\n  },\n  onScroll: function onScroll() {\n    return null;\n  },\n  overscanIndicesGetter: accessibilityOverscanIndicesGetter,\n  overscanRowCount: 10,\n  rowRenderer: defaultRowRenderer,\n  headerRowRenderer: defaultHeaderRowRenderer,\n  rowStyle: {},\n  scrollToAlignment: 'auto',\n  scrollToIndex: -1,\n  style: {}\n});\n\nexport { Table as default };\nTable.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** This is just set on the grid top element. */\n  'aria-label': PropTypes.string,\n\n  /** This is just set on the grid top element. */\n  'aria-labelledby': PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  autoHeight: PropTypes.bool,\n\n  /** One or more Columns describing the data displayed in this row */\n  children: function children(props) {\n    var children = React.Children.toArray(props.children);\n\n    for (var i = 0; i < children.length; i++) {\n      var childType = children[i].type;\n\n      if (childType !== Column && !(childType.prototype instanceof Column)) {\n        return new Error('Table only accepts children of type Column');\n      }\n    }\n  },\n\n  /** Optional CSS class name */\n  className: PropTypes.string,\n\n  /** Disable rendering the header at all */\n  disableHeader: PropTypes.bool,\n\n  /**\n   * Used to estimate the total height of a Table before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  estimatedRowSize: PropTypes.number.isRequired,\n\n  /** Optional custom CSS class name to attach to inner Grid element. */\n  gridClassName: PropTypes.string,\n\n  /** Optional inline style to attach to inner Grid element. */\n  gridStyle: PropTypes.object,\n\n  /** Optional CSS class to apply to all column headers */\n  headerClassName: PropTypes.string,\n\n  /** Fixed height of header row */\n  headerHeight: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a table row given an array of columns:\n   * Should implement the following interface: ({\n   *   className: string,\n   *   columns: any[],\n   *   style: any\n   * }): PropTypes.node\n   */\n  headerRowRenderer: PropTypes.func,\n\n  /** Optional custom inline style to attach to table header columns. */\n  headerStyle: PropTypes.object,\n\n  /** Fixed/available height for out DOM element */\n  height: PropTypes.number.isRequired,\n\n  /** Optional id */\n  id: PropTypes.string,\n\n  /** Optional renderer to be used in place of table body rows when rowCount is 0 */\n  noRowsRenderer: PropTypes.func,\n\n  /**\n   * Optional callback when a column is clicked.\n   * ({ columnData: any, dataKey: string }): void\n   */\n  onColumnClick: PropTypes.func,\n\n  /**\n   * Optional callback when a column's header is clicked.\n   * ({ columnData: any, dataKey: string }): void\n   */\n  onHeaderClick: PropTypes.func,\n\n  /**\n   * Callback invoked when a user clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowClick: PropTypes.func,\n\n  /**\n   * Callback invoked when a user double-clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowDoubleClick: PropTypes.func,\n\n  /**\n   * Callback invoked when the mouse leaves a table row.\n   * ({ index: number }): void\n   */\n  onRowMouseOut: PropTypes.func,\n\n  /**\n   * Callback invoked when a user moves the mouse over a table row.\n   * ({ index: number }): void\n   */\n  onRowMouseOver: PropTypes.func,\n\n  /**\n   * Callback invoked when a user right-clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowRightClick: PropTypes.func,\n\n  /**\n   * Callback invoked with information about the slice of rows that were just rendered.\n   * ({ startIndex, stopIndex }): void\n   */\n  onRowsRendered: PropTypes.func,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   * ({ clientHeight, scrollHeight, scrollTop }): void\n   */\n  onScroll: PropTypes.func.isRequired,\n\n  /** See Grid#overscanIndicesGetter */\n  overscanIndicesGetter: PropTypes.func.isRequired,\n\n  /**\n   * Number of rows to render above/below the visible bounds of the list.\n   * These rows can help for smoother scrolling on touch devices.\n   */\n  overscanRowCount: PropTypes.number.isRequired,\n\n  /**\n   * Optional CSS class to apply to all table rows (including the header row).\n   * This property can be a CSS class name (string) or a function that returns a class name.\n   * If a function is provided its signature should be: ({ index: number }): string\n   */\n  rowClassName: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n\n  /**\n   * Callback responsible for returning a data row given an index.\n   * ({ index: number }): any\n   */\n  rowGetter: PropTypes.func.isRequired,\n\n  /**\n   * Either a fixed row height (number) or a function that returns the height of a row given its index.\n   * ({ index: number }): number\n   */\n  rowHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n\n  /** Number of rows in table. */\n  rowCount: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a table row given an array of columns:\n   * Should implement the following interface: ({\n   *   className: string,\n   *   columns: Array,\n   *   index: number,\n   *   isScrolling: boolean,\n   *   onRowClick: ?Function,\n   *   onRowDoubleClick: ?Function,\n   *   onRowMouseOver: ?Function,\n   *   onRowMouseOut: ?Function,\n   *   rowData: any,\n   *   style: any\n   * }): PropTypes.node\n   */\n  rowRenderer: PropTypes.func,\n\n  /** Optional custom inline style to attach to table rows. */\n  rowStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired,\n\n  /** See Grid#scrollToAlignment */\n  scrollToAlignment: PropTypes.oneOf(['auto', 'end', 'start', 'center']).isRequired,\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  scrollToIndex: PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  scrollTop: PropTypes.number,\n\n  /**\n   * Sort function to be called if a sortable header is clicked.\n   * Should implement the following interface: ({\n   *   defaultSortDirection: 'ASC' | 'DESC',\n   *   event: MouseEvent,\n   *   sortBy: string,\n   *   sortDirection: SortDirection\n   * }): void\n   */\n  sort: PropTypes.func,\n\n  /** Table data is currently sorted by this :dataKey (if it is sorted at all) */\n  sortBy: PropTypes.string,\n\n  /** Table data is currently sorted in this direction (if it is sorted at all) */\n  sortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC]),\n\n  /** Optional inline style */\n  style: PropTypes.object,\n\n  /** Tab index for focus */\n  tabIndex: PropTypes.number,\n\n  /** Width of list */\n  width: PropTypes.number.isRequired\n} : {};\nimport { bpfrpt_proptype_CellPosition } from \"../Grid\";","/**\n * Default accessor for returning a cell value for a given attribute.\n * This function expects to operate on either a vanilla Object or an Immutable Map.\n * You should override the column's cellDataGetter if your data is some other type of object.\n */\nexport default function defaultCellDataGetter(_ref) {\n  var dataKey = _ref.dataKey,\n      rowData = _ref.rowData;\n\n  if (typeof rowData.get === 'function') {\n    return rowData.get(dataKey);\n  } else {\n    return rowData[dataKey];\n  }\n}\nimport { bpfrpt_proptype_CellDataGetterParams } from \"./types\";","/**\n * Default cell renderer that displays an attribute as a simple string\n * You should override the column's cellRenderer if your data is some other type of object.\n */\nexport default function defaultCellRenderer(_ref) {\n  var cellData = _ref.cellData;\n\n  if (cellData == null) {\n    return '';\n  } else {\n    return String(cellData);\n  }\n}\nimport { bpfrpt_proptype_CellRendererParams } from \"./types\";","import createMultiSort from './createMultiSort';\nimport defaultCellDataGetter from './defaultCellDataGetter';\nimport defaultCellRenderer from './defaultCellRenderer';\nimport defaultHeaderRowRenderer from './defaultHeaderRowRenderer.js';\nimport defaultHeaderRenderer from './defaultHeaderRenderer';\nimport defaultRowRenderer from './defaultRowRenderer';\nimport Column from './Column';\nimport SortDirection from './SortDirection';\nimport SortIndicator from './SortIndicator';\nimport Table from './Table';\nexport default Table;\nexport { createMultiSort, defaultCellDataGetter, defaultCellRenderer, defaultHeaderRowRenderer, defaultHeaderRenderer, defaultRowRenderer, Column, SortDirection, SortIndicator, Table };","import { requestAnimationTimeout, cancelAnimationTimeout } from '../../utils/requestAnimationTimeout';\nvar mountedInstances = [];\nvar originalBodyPointerEvents = null;\nvar disablePointerEventsTimeoutId = null;\n\nfunction enablePointerEventsIfDisabled() {\n  if (disablePointerEventsTimeoutId) {\n    disablePointerEventsTimeoutId = null;\n\n    if (document.body && originalBodyPointerEvents != null) {\n      document.body.style.pointerEvents = originalBodyPointerEvents;\n    }\n\n    originalBodyPointerEvents = null;\n  }\n}\n\nfunction enablePointerEventsAfterDelayCallback() {\n  enablePointerEventsIfDisabled();\n  mountedInstances.forEach(function (instance) {\n    return instance.__resetIsScrolling();\n  });\n}\n\nfunction enablePointerEventsAfterDelay() {\n  if (disablePointerEventsTimeoutId) {\n    cancelAnimationTimeout(disablePointerEventsTimeoutId);\n  }\n\n  var maximumTimeout = 0;\n  mountedInstances.forEach(function (instance) {\n    maximumTimeout = Math.max(maximumTimeout, instance.props.scrollingResetTimeInterval);\n  });\n  disablePointerEventsTimeoutId = requestAnimationTimeout(enablePointerEventsAfterDelayCallback, maximumTimeout);\n}\n\nfunction onScrollWindow(event) {\n  if (event.currentTarget === window && originalBodyPointerEvents == null && document.body) {\n    originalBodyPointerEvents = document.body.style.pointerEvents;\n    document.body.style.pointerEvents = 'none';\n  }\n\n  enablePointerEventsAfterDelay();\n  mountedInstances.forEach(function (instance) {\n    if (instance.props.scrollElement === event.currentTarget) {\n      instance.__handleWindowScrollEvent();\n    }\n  });\n}\n\nexport function registerScrollListener(component, element) {\n  if (!mountedInstances.some(function (instance) {\n    return instance.props.scrollElement === element;\n  })) {\n    element.addEventListener('scroll', onScrollWindow);\n  }\n\n  mountedInstances.push(component);\n}\nexport function unregisterScrollListener(component, element) {\n  mountedInstances = mountedInstances.filter(function (instance) {\n    return instance !== component;\n  });\n\n  if (!mountedInstances.length) {\n    element.removeEventListener('scroll', onScrollWindow);\n\n    if (disablePointerEventsTimeoutId) {\n      cancelAnimationTimeout(disablePointerEventsTimeoutId);\n      enablePointerEventsIfDisabled();\n    }\n  }\n}\nimport { bpfrpt_proptype_WindowScroller } from \"../WindowScroller.js\";","/**\n * Gets the dimensions of the element, accounting for API differences between\n * `window` and other DOM elements.\n */\n// TODO Move this into WindowScroller and import from there\nvar isWindow = function isWindow(element) {\n  return element === window;\n};\n\nvar getBoundingBox = function getBoundingBox(element) {\n  return element.getBoundingClientRect();\n};\n\nexport function getDimensions(scrollElement, props) {\n  if (!scrollElement) {\n    return {\n      height: props.serverHeight,\n      width: props.serverWidth\n    };\n  } else if (isWindow(scrollElement)) {\n    var _window = window,\n        innerHeight = _window.innerHeight,\n        innerWidth = _window.innerWidth;\n    return {\n      height: typeof innerHeight === 'number' ? innerHeight : 0,\n      width: typeof innerWidth === 'number' ? innerWidth : 0\n    };\n  } else {\n    return getBoundingBox(scrollElement);\n  }\n}\n/**\n * Gets the vertical and horizontal position of an element within its scroll container.\n * Elements that have been “scrolled past” return negative values.\n * Handles edge-case where a user is navigating back (history) from an already-scrolled page.\n * In this case the body’s top or left position will be a negative number and this element’s top or left will be increased (by that amount).\n */\n\nexport function getPositionOffset(element, container) {\n  if (isWindow(container) && document.documentElement) {\n    var containerElement = document.documentElement;\n    var elementRect = getBoundingBox(element);\n    var containerRect = getBoundingBox(containerElement);\n    return {\n      top: elementRect.top - containerRect.top,\n      left: elementRect.left - containerRect.left\n    };\n  } else {\n    var scrollOffset = getScrollOffset(container);\n\n    var _elementRect = getBoundingBox(element);\n\n    var _containerRect = getBoundingBox(container);\n\n    return {\n      top: _elementRect.top + scrollOffset.top - _containerRect.top,\n      left: _elementRect.left + scrollOffset.left - _containerRect.left\n    };\n  }\n}\n/**\n * Gets the vertical and horizontal scroll amount of the element, accounting for IE compatibility\n * and API differences between `window` and other DOM elements.\n */\n\nexport function getScrollOffset(element) {\n  if (isWindow(element) && document.documentElement) {\n    return {\n      top: 'scrollY' in window ? window.scrollY : document.documentElement.scrollTop,\n      left: 'scrollX' in window ? window.scrollX : document.documentElement.scrollLeft\n    };\n  } else {\n    return {\n      top: element.scrollTop,\n      left: element.scrollLeft\n    };\n  }\n}","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { registerScrollListener, unregisterScrollListener } from './utils/onScroll';\nimport { getDimensions, getPositionOffset, getScrollOffset } from './utils/dimensions';\nimport createDetectElementResize from '../vendor/detectElementResize';\n\n/**\n * Specifies the number of miliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\nexport var IS_SCROLLING_TIMEOUT = 150;\n\nvar getWindow = function getWindow() {\n  return typeof window !== 'undefined' ? window : undefined;\n};\n\nvar WindowScroller = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(WindowScroller, _React$PureComponent);\n\n  function WindowScroller() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, WindowScroller);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(WindowScroller)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"_window\", getWindow());\n\n    _defineProperty(_assertThisInitialized(_this), \"_isMounted\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_positionFromTop\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_positionFromLeft\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_detectElementResize\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_child\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", _objectSpread({}, getDimensions(_this.props.scrollElement, _this.props), {\n      isScrolling: false,\n      scrollLeft: 0,\n      scrollTop: 0\n    }));\n\n    _defineProperty(_assertThisInitialized(_this), \"_registerChild\", function (element) {\n      if (element && !(element instanceof Element)) {\n        console.warn('WindowScroller registerChild expects to be passed Element or null');\n      }\n\n      _this._child = element;\n\n      _this.updatePosition();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onChildScroll\", function (_ref) {\n      var scrollTop = _ref.scrollTop;\n\n      if (_this.state.scrollTop === scrollTop) {\n        return;\n      }\n\n      var scrollElement = _this.props.scrollElement;\n\n      if (scrollElement) {\n        if (typeof scrollElement.scrollTo === 'function') {\n          scrollElement.scrollTo(0, scrollTop + _this._positionFromTop);\n        } else {\n          scrollElement.scrollTop = scrollTop + _this._positionFromTop;\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_registerResizeListener\", function (element) {\n      if (element === window) {\n        window.addEventListener('resize', _this._onResize, false);\n      } else {\n        _this._detectElementResize.addResizeListener(element, _this._onResize);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_unregisterResizeListener\", function (element) {\n      if (element === window) {\n        window.removeEventListener('resize', _this._onResize, false);\n      } else if (element) {\n        _this._detectElementResize.removeResizeListener(element, _this._onResize);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onResize\", function () {\n      _this.updatePosition();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"__handleWindowScrollEvent\", function () {\n      if (!_this._isMounted) {\n        return;\n      }\n\n      var onScroll = _this.props.onScroll;\n      var scrollElement = _this.props.scrollElement;\n\n      if (scrollElement) {\n        var scrollOffset = getScrollOffset(scrollElement);\n        var scrollLeft = Math.max(0, scrollOffset.left - _this._positionFromLeft);\n        var scrollTop = Math.max(0, scrollOffset.top - _this._positionFromTop);\n\n        _this.setState({\n          isScrolling: true,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n\n        onScroll({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"__resetIsScrolling\", function () {\n      _this.setState({\n        isScrolling: false\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(WindowScroller, [{\n    key: \"updatePosition\",\n    value: function updatePosition() {\n      var scrollElement = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props.scrollElement;\n      var onResize = this.props.onResize;\n      var _this$state = this.state,\n          height = _this$state.height,\n          width = _this$state.width;\n      var thisNode = this._child || ReactDOM.findDOMNode(this);\n\n      if (thisNode instanceof Element && scrollElement) {\n        var offset = getPositionOffset(thisNode, scrollElement);\n        this._positionFromTop = offset.top;\n        this._positionFromLeft = offset.left;\n      }\n\n      var dimensions = getDimensions(scrollElement, this.props);\n\n      if (height !== dimensions.height || width !== dimensions.width) {\n        this.setState({\n          height: dimensions.height,\n          width: dimensions.width\n        });\n        onResize({\n          height: dimensions.height,\n          width: dimensions.width\n        });\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var scrollElement = this.props.scrollElement;\n      this._detectElementResize = createDetectElementResize();\n      this.updatePosition(scrollElement);\n\n      if (scrollElement) {\n        registerScrollListener(this, scrollElement);\n\n        this._registerResizeListener(scrollElement);\n      }\n\n      this._isMounted = true;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var scrollElement = this.props.scrollElement;\n      var prevScrollElement = prevProps.scrollElement;\n\n      if (prevScrollElement !== scrollElement && prevScrollElement != null && scrollElement != null) {\n        this.updatePosition(scrollElement);\n        unregisterScrollListener(this, prevScrollElement);\n        registerScrollListener(this, scrollElement);\n\n        this._unregisterResizeListener(prevScrollElement);\n\n        this._registerResizeListener(scrollElement);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var scrollElement = this.props.scrollElement;\n\n      if (scrollElement) {\n        unregisterScrollListener(this, scrollElement);\n\n        this._unregisterResizeListener(scrollElement);\n      }\n\n      this._isMounted = false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      var _this$state2 = this.state,\n          isScrolling = _this$state2.isScrolling,\n          scrollTop = _this$state2.scrollTop,\n          scrollLeft = _this$state2.scrollLeft,\n          height = _this$state2.height,\n          width = _this$state2.width;\n      return children({\n        onChildScroll: this._onChildScroll,\n        registerChild: this._registerChild,\n        height: height,\n        isScrolling: isScrolling,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        width: width\n      });\n    }\n  }]);\n\n  return WindowScroller;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  /**\n   * Function responsible for rendering children.\n   * This function should implement the following signature:\n   * ({ height, isScrolling, scrollLeft, scrollTop, width }) => PropTypes.element\n   */\n  \"children\": PropTypes.func.isRequired,\n\n  /** Callback to be invoked on-resize: ({ height, width }) */\n  \"onResize\": PropTypes.func.isRequired,\n\n  /** Callback to be invoked on-scroll: ({ scrollLeft, scrollTop }) */\n  \"onScroll\": PropTypes.func.isRequired,\n\n  /** Element to attach scroll event listeners. Defaults to window. */\n  \"scrollElement\": PropTypes.oneOfType([PropTypes.any, function () {\n    return (typeof Element === \"function\" ? PropTypes.instanceOf(Element) : PropTypes.any).apply(this, arguments);\n  }]),\n\n  /**\n   * Wait this amount of time after the last scroll event before resetting child `pointer-events`.\n   */\n  \"scrollingResetTimeInterval\": PropTypes.number.isRequired,\n\n  /** Height used for server-side rendering */\n  \"serverHeight\": PropTypes.number.isRequired,\n\n  /** Width used for server-side rendering */\n  \"serverWidth\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(WindowScroller, \"defaultProps\", {\n  onResize: function onResize() {},\n  onScroll: function onScroll() {},\n  scrollingResetTimeInterval: IS_SCROLLING_TIMEOUT,\n  scrollElement: getWindow(),\n  serverHeight: 0,\n  serverWidth: 0\n});\n\nexport { WindowScroller as default };\nimport PropTypes from \"prop-types\";"],"sourceRoot":""}