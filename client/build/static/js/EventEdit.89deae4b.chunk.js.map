{"version":3,"sources":["components/Loader.js","components/Input.js","validations/index.js","components/FormContainer.js","../../../../node_modules/react-bootstrap/esm/Spinner.js","components/ImageInput.js","views/EventEdit.js","actions/event.js"],"names":["Loader","width","height","animation","role","style","className","BootstrapInput","props","Control","BootstrapTextArea","as","row","BootstrapSelect","options","map","option","key","title","value","BootstrapDate","type","BootstrapCheckbox","Check","BootstrapRadio","Input","name","label","disabled","useField","meta","renderInput","Group","controlId","Label","placeholder","isInvalid","touched","error","render","msg","Feedback","loginFormValidationSchema","yup","email","required","password","min","signupFormValidationSchema","confirmPassword","profileFormValidationSchema","eventFormValidationSchema","redirectUrl","userFormValidationSchema","productFormValidationSchema","price","typeError","brand","category","countInStock","description","reviewFormValidationSchema","rating","addressFormValidationSchema","address","city","postalCode","country","FormContainer","children","xs","md","Spinner","React","forwardRef","_ref","ref","bsPrefix","variant","size","_ref$as","Component","_objectWithoutPropertiesLoose","bsSpinnerPrefix","useBootstrapPrefix","createElement","_extends","classNames","displayName","ImageInput","src","helpers","previewImage","useRef","rounded","fluid","File","id","custom","onChange","e","file","target","files","reader","FileReader","setValue","onload","current","result","readAsDataURL","initialValues","EventEdit","match","useState","eventFormValues","setEventFormValues","dispatch","useDispatch","useSelector","state","event","loading","data","eventId","params","useEffect","cancelToken","source","axios","CancelToken","_id","token","getState","a","FETCH_EVENT_REQUEST","get","FETCH_EVENT_SUCCESS","payload","isCancel","FETCH_EVENT_CANCELLED","FETCH_EVENT_FAIL","response","message","cancel","to","Message","validationSchema","onSubmit","formValues","UPDATE_EVENT_REQUEST","formData","FormData","eventImg","append","patch","UPDATE_EVENT_SUCCESS","RESET_EVENTS","history","push","UPDATE_EVENT_FAIL","enableReinitialize","isSubmitting","Button"],"mappings":"kGAAA,6BAkBeA,IAfA,SAAC,GAA2C,IAAD,IAAxCC,aAAwC,MAAhC,QAAgC,MAAvBC,cAAuB,MAAd,QAAc,EACxD,OACE,kBAAC,IAAD,CACEC,UAAU,SACVC,KAAK,SACLC,MAAO,CACLJ,QACAC,UAEFI,UAAU,kBACV,0BAAMA,UAAU,WAAhB,iB,wFCPAC,EAAiB,SAACC,GAAD,OAAW,kBAAC,IAAKC,QAAYD,IAE9CE,EAAoB,SAACF,GAAD,OACxB,kBAAC,IAAKC,QAAN,eAAcE,GAAG,WAAWC,IAAI,KAAQJ,KAGpCK,EAAkB,SAACL,GACvB,OACE,kBAAC,IAAKC,QAAN,eAAcE,GAAG,UAAaH,GAC3BA,EAAMM,QAAQC,KAAI,SAACC,GAAD,OACjB,4BAAQC,IAAKD,EAAOE,MAAOC,MAAOH,EAAOG,OACtCH,EAAOE,YAOZE,EAAgB,SAACZ,GAAD,OAAW,kBAAC,IAAKC,QAAN,eAAcY,KAAK,QAAWb,KAEzDc,EAAoB,SAACd,GAAD,OAAW,kBAAC,IAAKe,MAAUf,IAE/CgB,EAAiB,SAAChB,GAAD,OAAW,kBAAC,IAAKe,MAAUf,IAmEnCiB,IAjED,SAAC,GAAqD,IAAnDC,EAAkD,EAAlDA,KAAML,EAA4C,EAA5CA,KAAMM,EAAsC,EAAtCA,MAAOC,EAA+B,EAA/BA,SAAUd,EAAqB,EAArBA,QAASK,EAAY,EAAZA,MAAY,EAChDU,YAASH,GAAjBI,EADwD,oBAG3DC,EAAc,SAACV,GACnB,OAAQA,GACN,IAAK,SACH,OAAOR,EAET,IAAK,WACH,OAAOH,EAET,IAAK,OACH,OAAOU,EAET,IAAK,WACH,OAAOE,EAET,IAAK,QACH,OAAOE,EAET,QACE,OAAOjB,IAIb,OACE,kBAAC,IAAKyB,MAAN,CAAYC,UAAWN,GACX,aAATN,GAAgC,UAATA,EACtB,kBAAC,IAAD,CACEK,KAAMA,EACNL,KAAMA,EACNM,MAAOA,EACPR,MAAOA,EACPR,GAAIoB,EAAYV,KAGlB,oCACE,kBAAC,IAAKa,MAAN,KAAaP,GACb,kBAAC,IAAD,CACED,KAAMA,EACNL,KAAMA,EACNc,YAAW,gBAAWR,GACtBS,UAAWN,EAAKO,SAAWP,EAAKQ,MAChCV,SAAUA,EACVd,QAASA,EACTH,GAAIoB,EAAYV,KAElB,kBAAC,IAAD,CACEK,KAAMA,EACNa,OAAQ,SAACC,GAAD,OACN,kBAAC,IAAYC,SAAb,CAAsBpB,KAAK,WAAWmB,U,iCChFpD,6RAEaE,EAA4BC,IAAW,CAClDC,MAAOD,MAEJC,MAAM,wBACNC,SAAS,qBACZC,SAAUH,MAEPE,SAAS,wBACTE,IAAI,EAAG,oCAGCC,EAA6BL,IAAW,CACnDjB,KAAMiB,MAAaE,SAAS,oBAC5BD,MAAOD,MAEJC,MAAM,wBACNC,SAAS,qBACZC,SAAUH,MAEPE,SAAS,wBACTE,IAAI,EAAG,kCACVE,gBAAiBN,MAEdE,SAAS,gCACTE,IAAI,EAAG,oCAGCG,EAA8BP,IAAW,CACpDjB,KAAMiB,MAAaE,SAAS,oBAC5BC,SAAUH,MAAaI,IAAI,EAAG,kCAC9BE,gBAAiBN,MAAaI,IAAI,EAAG,oCAG1BI,EAA4BR,IAAW,CAClDS,YAAaT,MAAaE,SAAS,8BAGxBQ,EAA2BV,IAAW,CACjDjB,KAAMiB,MAAaE,SAAS,oBAC5BD,MAAOD,MAEJE,SAAS,qBACTD,MAAM,0BAGEU,EAA8BX,IAAW,CACpDjB,KAAMiB,MAAaE,SAAS,oBAC5BU,MAAOZ,MAEJa,UAAU,oBACVX,SAAS,qBACZY,MAAOd,MAAaE,SAAS,qBAC7Ba,SAAUf,MAAaE,SAAS,wBAChCc,aAAchB,MAEXa,UAAU,oBACVX,SAAS,4BACZe,YAAajB,MAAaE,SAAS,6BAGxBgB,EAA6BlB,IAAW,CACnDmB,OAAQnB,MAAaE,SAAS,wBAGnBkB,EAA8BpB,IAAW,CACpDqB,QAASrB,MAAaE,SAAS,uBAC/BoB,KAAMtB,MAAaE,SAAS,oBAC5BqB,WAAYvB,MACZwB,QAASxB,MAAaE,SAAS,0B,iCCtEjC,8CAeeuB,IAZO,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACvB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAK/D,UAAU,6BACb,kBAAC,IAAD,CAAKgE,GAAI,GAAIC,GAAI,GACdF,O,iCCRX,yDAKIG,EAAUC,IAAMC,YAAW,SAAUC,EAAMC,GAC7C,IAAIC,EAAWF,EAAKE,SAChBC,EAAUH,EAAKG,QACf3E,EAAYwE,EAAKxE,UACjB4E,EAAOJ,EAAKI,KACZV,EAAWM,EAAKN,SAChBW,EAAUL,EAAKhE,GACfsE,OAAwB,IAAZD,EAAqB,MAAQA,EACzC1E,EAAYqE,EAAKrE,UACjBE,EAAQ0E,YAA8BP,EAAM,CAAC,WAAY,UAAW,YAAa,OAAQ,WAAY,KAAM,cAG3GQ,GADJN,EAAWO,YAAmBP,EAAU,YACP,IAAM1E,EACvC,OAAoBsE,IAAMY,cAAcJ,EAAWK,YAAS,CAC1DV,IAAKA,GACJpE,EAAO,CACRF,UAAWiF,IAAWjF,EAAW6E,EAAiBJ,GAAQI,EAAkB,IAAMJ,EAAMD,GAAW,QAAUA,KAC3GT,MAENG,EAAQgB,YAAc,UACPhB,O,wFCsBAiB,IAzCI,SAAC,GAA0B,IAAxB9D,EAAuB,EAAvBA,MAAOD,EAAgB,EAAhBA,KAAMgE,EAAU,EAAVA,IAAU,EACrB7D,YAASH,GAApBiE,EADgC,oBAGrCC,EAAeC,mBAiBrB,OACE,kBAAC,IAAK7D,MAAN,CAAYC,UAAWP,GACrB,kBAAC,IAAKQ,MAAN,KACE,6BAAMP,GACN,kBAAC,IAAD,CAAOiD,IAAKgB,EAAcF,IAAKA,EAAKI,SAAO,EAACC,OAAK,KAEnD,kBAAC,IAAKC,KAAN,CACEC,GAAG,aACHtE,MAAM,cACNuE,QAAM,EACNC,SAzBe,SAACC,GACpB,IAAMC,EAAOD,EAAEE,OAAOC,MAAM,GAEtBC,EAAS,IAAIC,WAEnBd,EAAQe,SAASL,GAEbA,IACFG,EAAOG,OAAS,SAAUP,GACxBR,EAAagB,QAAQlB,IAAMU,EAAEE,OAAOO,QAEtCL,EAAOM,cAAcT,U,mNCNrBU,EAAgB,CACpB3D,YAAa,IA6EA4D,UA1EG,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAAY,EACeC,mBAAS,MADxB,mBACxBC,EADwB,KACPC,EADO,KAGzBC,EAAWC,cAHc,EAISC,aAAY,SAACC,GAAD,OAAWA,EAAMC,SAA7DC,EAJuB,EAIvBA,QAAeD,EAJQ,EAIdE,KAAarF,EAJC,EAIDA,MAExBsF,EAAUX,EAAMY,OAAO5B,GAE7B6B,qBAAU,WACR,IChBuB7B,EAAI8B,EDgBrBC,EAASC,IAAMC,YAAYF,SAQjC,OANKP,GAASA,EAAMU,MAAQP,EAG1BR,EAAmB,CAAEhE,YAAaqE,EAAMrE,cAFxCiE,GCnBqBpB,EDmBD2B,ECnBKG,EDmBIC,EAAOI,MCnBhB,uCAAqB,WAAOf,EAAUgB,GAAjB,iBAAAC,EAAA,6DAC7CjB,EAAS,CAAEhG,KAAMkH,MAD4B,kBAIpBN,IAAMO,IAAN,sBAAyBvC,GAAM,CAAE8B,gBAJb,gBAInCJ,EAJmC,EAInCA,KAERN,EAAS,CAAEhG,KAAMoH,IAAqBC,QAASf,IANJ,gDAQvCM,IAAMU,SAAN,MACFtB,EAAS,CACPhG,KAAMuH,MAGRvB,EAAS,CACPhG,KAAMwH,IACNH,QACE,KAAMI,UAAY,KAAMA,SAASC,QAC7B,KAAMD,SAASC,QACf,KAAMD,SAASnB,KAAKoB,UAlBa,yDAArB,0DDwBf,WACLf,EAAOgB,YAER,CAAC3B,EAAUI,EAAOG,EAASR,IAM9B,OACE,oCACE,kBAAC,OAAD,CAAM6B,GAAG,mBAAmB3I,UAAU,sBAAtC,WAGA,kBAAC8D,EAAA,EAAD,KACGsD,EACC,kBAAC1H,EAAA,EAAD,MAEA,oCACE,0CACCsC,GAAS,kBAAC4G,EAAA,EAAD,CAASpE,QAAQ,UAAUxC,GACpCmF,GACC,kBAAC,IAAD,CACEV,cAAeI,GAAmBJ,EAClCoC,iBAAkBhG,IAClBiG,SApBG,SAACjC,GCLO,IAAClB,EAAIoD,EDM5BhC,GCNwBpB,EDMH2B,ECNOyB,EDMElC,ECNP,uCAAoB,WAAOE,EAAUgB,GAAjB,uBAAAC,EAAA,6DAC7CjB,EAAS,CAAEhG,KAAMiI,MAD4B,SAGrCC,EAAW,IAAIC,SACbpG,EAA0BiG,EAA1BjG,YAAaqG,EAAaJ,EAAbI,SAErBF,EAASG,OAAO,cAAetG,GAC/BmG,EAASG,OAAO,WAAYD,GAPe,SASpBxB,IAAM0B,MAAN,sBAA2B1D,GAAMsD,GATb,gBASnC5B,EATmC,EASnCA,KAERN,EAAS,CAAEhG,KAAMuI,IAAsBlB,QAASf,IAEhDN,EAAS,CAAEhG,KAAMwI,MACjBC,IAAQC,KAAK,oBAd8B,kDAgB3C1C,EAAS,CACPhG,KAAM2I,IACNtB,QACE,KAAMI,UAAY,KAAMA,SAASC,QAC7B,KAAMD,SAASC,QACf,KAAMD,SAASnB,KAAKoB,UArBe,0DAApB,2DD0BXkB,oBAAkB,IACjB,gBAAGC,EAAH,EAAGA,aAAH,OACC,kBAAC,IAAD,KACE,kBAACzI,EAAA,EAAD,CACEE,MAAM,eACND,KAAK,cACLL,KAAK,SAEP,kBAACoE,EAAA,EAAD,CACE9D,MAAM,QACND,KAAK,WACLgE,IAAG,sBAAiBkC,EAAjB,YAEL,kBAACuC,EAAA,EAAD,CACE7J,UAAU,kBACVwE,QAAQ,UACRzD,KAAK,SACLO,SAAUsI,GAJZ","file":"static/js/EventEdit.89deae4b.chunk.js","sourcesContent":["import React from 'react';\nimport { Spinner } from 'react-bootstrap';\n\nconst Loader = ({ width = '100px', height = '100px' }) => {\n  return (\n    <Spinner\n      animation='border'\n      role='status'\n      style={{\n        width,\n        height,\n      }}\n      className='d-block m-auto'>\n      <span className='sr-only'>Loading...</span>\n    </Spinner>\n  );\n};\n\nexport default Loader;\n","import React from 'react';\nimport { useField, Field, ErrorMessage } from 'formik';\nimport PropTypes from 'prop-types';\n\nimport { Form, FormControl } from 'react-bootstrap';\n\nconst BootstrapInput = (props) => <Form.Control {...props} />;\n\nconst BootstrapTextArea = (props) => (\n  <Form.Control as='textarea' row='5' {...props} />\n);\n\nconst BootstrapSelect = (props) => {\n  return (\n    <Form.Control as='select' {...props}>\n      {props.options.map((option) => (\n        <option key={option.title} value={option.value}>\n          {option.title}\n        </option>\n      ))}\n    </Form.Control>\n  );\n};\n\nconst BootstrapDate = (props) => <Form.Control type='date' {...props} />;\n\nconst BootstrapCheckbox = (props) => <Form.Check {...props} />;\n\nconst BootstrapRadio = (props) => <Form.Check {...props} />;\n\nconst Input = ({ name, type, label, disabled, options, value }) => {\n  const [, meta] = useField(name);\n\n  const renderInput = (type) => {\n    switch (type) {\n      case 'select':\n        return BootstrapSelect;\n\n      case 'textarea':\n        return BootstrapTextArea;\n\n      case 'date':\n        return BootstrapDate;\n\n      case 'checkbox':\n        return BootstrapCheckbox;\n\n      case 'radio':\n        return BootstrapRadio;\n\n      default:\n        return BootstrapInput;\n    }\n  };\n\n  return (\n    <Form.Group controlId={label}>\n      {type === 'checkbox' || type === 'radio' ? (\n        <Field\n          name={name}\n          type={type}\n          label={label}\n          value={value}\n          as={renderInput(type)}\n        />\n      ) : (\n        <>\n          <Form.Label>{label}</Form.Label>\n          <Field\n            name={name}\n            type={type}\n            placeholder={`Enter ${label}`}\n            isInvalid={meta.touched && meta.error}\n            disabled={disabled}\n            options={options}\n            as={renderInput(type)}\n          />\n          <ErrorMessage\n            name={name}\n            render={(msg) => (\n              <FormControl.Feedback type='invalid'>{msg}</FormControl.Feedback>\n            )}\n          />\n        </>\n      )}\n    </Form.Group>\n  );\n};\n\nInput.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n};\n\nexport default Input;\n","import * as yup from 'yup';\n\nexport const loginFormValidationSchema = yup.object({\n  email: yup\n    .string()\n    .email('Invalid email format')\n    .required('Email is required'),\n  password: yup\n    .string()\n    .required('Password is required')\n    .min(6, 'Required at least 6 characters'),\n});\n\nexport const signupFormValidationSchema = yup.object({\n  name: yup.string().required('Name is required'),\n  email: yup\n    .string()\n    .email('Invalid email format')\n    .required('Email is required'),\n  password: yup\n    .string()\n    .required('Password is required')\n    .min(6, 'Required at least 6 characters'),\n  confirmPassword: yup\n    .string()\n    .required('Confirm password is required')\n    .min(6, 'Required at least 6 characters'),\n});\n\nexport const profileFormValidationSchema = yup.object({\n  name: yup.string().required('Name is required'),\n  password: yup.string().min(6, 'Required at least 6 characters'),\n  confirmPassword: yup.string().min(6, 'Required at least 6 characters'),\n});\n\nexport const eventFormValidationSchema = yup.object({\n  redirectUrl: yup.string().required('Redirect url is required'),\n});\n\nexport const userFormValidationSchema = yup.object({\n  name: yup.string().required('Name is required'),\n  email: yup\n    .string()\n    .required('Email is required')\n    .email('Invalid email format'),\n});\n\nexport const productFormValidationSchema = yup.object({\n  name: yup.string().required('Name is required'),\n  price: yup\n    .number()\n    .typeError('Must be a number')\n    .required('Price is required'),\n  brand: yup.string().required('Brand is required'),\n  category: yup.string().required('Category is required'),\n  countInStock: yup\n    .number()\n    .typeError('Must be a number')\n    .required('CountInStock is required'),\n  description: yup.string().required('Description is required'),\n});\n\nexport const reviewFormValidationSchema = yup.object({\n  rating: yup.string().required('Rating is required'),\n});\n\nexport const addressFormValidationSchema = yup.object({\n  address: yup.string().required('Address is required'),\n  city: yup.string().required('City is required'),\n  postalCode: yup.number(),\n  country: yup.string().required('Country is required'),\n});\n","import React from 'react';\nimport { Col, Container, Row } from 'react-bootstrap';\n\nconst FormContainer = ({ children }) => {\n  return (\n    <Container>\n      <Row className=\"justify-content-md-center\">\n        <Col xs={12} md={6}>\n          {children}\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default FormContainer;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar Spinner = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      variant = _ref.variant,\n      animation = _ref.animation,\n      size = _ref.size,\n      children = _ref.children,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"variant\", \"animation\", \"size\", \"children\", \"as\", \"className\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'spinner');\n  var bsSpinnerPrefix = bsPrefix + \"-\" + animation;\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, bsSpinnerPrefix, size && bsSpinnerPrefix + \"-\" + size, variant && \"text-\" + variant)\n  }), children);\n});\nSpinner.displayName = 'Spinner';\nexport default Spinner;","import React, { useRef } from 'react';\nimport { Form, Image } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\n\nimport { useField } from 'formik';\n\nconst ImageInput = ({ label, name, src }) => {\n  const [, , helpers] = useField(name);\n\n  const previewImage = useRef();\n\n  const onSelectFile = (e) => {\n    const file = e.target.files[0];\n\n    const reader = new FileReader();\n\n    helpers.setValue(file);\n\n    if (file) {\n      reader.onload = function (e) {\n        previewImage.current.src = e.target.result;\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n  return (\n    <Form.Group controlId={name}>\n      <Form.Label>\n        <div>{label}</div>\n        <Image ref={previewImage} src={src} rounded fluid />\n      </Form.Label>\n      <Form.File\n        id='image-file'\n        label='Choose file'\n        custom\n        onChange={onSelectFile}\n      />\n    </Form.Group>\n  );\n};\n\nImageInput.propTypes = {\n  name: PropTypes.string.isRequired,\n  src: PropTypes.string.isRequired,\n};\n\nexport default ImageInput;\n","import React, { useState, useEffect } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Formik, Form } from 'formik';\n\nimport axios from '../axios';\nimport { fetchEvent, updateEvent } from '../actions/event';\nimport { eventFormValidationSchema } from '../validations';\n\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport Input from '../components/Input';\nimport ImageInput from '../components/ImageInput';\nimport FormContainer from '../components/FormContainer';\n\nconst initialValues = {\n  redirectUrl: '',\n};\n\nconst EventEdit = ({ match }) => {\n  const [eventFormValues, setEventFormValues] = useState(null);\n\n  const dispatch = useDispatch();\n  const { loading, data: event, error } = useSelector((state) => state.event);\n\n  const eventId = match.params.id;\n\n  useEffect(() => {\n    const source = axios.CancelToken.source();\n\n    if (!event || event._id !== eventId) {\n      dispatch(fetchEvent(eventId, source.token));\n    } else {\n      setEventFormValues({ redirectUrl: event.redirectUrl });\n    }\n\n    return () => {\n      source.cancel();\n    };\n  }, [dispatch, event, eventId, setEventFormValues]);\n\n  const onSubmit = (eventFormValues) => {\n    dispatch(updateEvent(eventId, eventFormValues));\n  };\n\n  return (\n    <>\n      <Link to='/admin/eventList' className='btn btn-light my-3'>\n        Go back\n      </Link>\n      <FormContainer>\n        {loading ? (\n          <Loader />\n        ) : (\n          <>\n            <h1>Edit Event</h1>\n            {error && <Message variant='danger'>{error}</Message>}\n            {event && (\n              <Formik\n                initialValues={eventFormValues || initialValues}\n                validationSchema={eventFormValidationSchema}\n                onSubmit={onSubmit}\n                enableReinitialize>\n                {({ isSubmitting }) => (\n                  <Form>\n                    <Input\n                      label='Redirect url'\n                      name='redirectUrl'\n                      type='text'\n                    />\n                    <ImageInput\n                      label='Image'\n                      name='eventImg'\n                      src={`/api/events/${eventId}/image`}\n                    />\n                    <Button\n                      className='d-block ml-auto'\n                      variant='primary'\n                      type='submit'\n                      disabled={isSubmitting}>\n                      Submit\n                    </Button>\n                  </Form>\n                )}\n              </Formik>\n            )}\n          </>\n        )}\n      </FormContainer>\n    </>\n  );\n};\n\nexport default EventEdit;\n","import axios from '../axios';\nimport {\n  FETCH_EVENT_REQUEST,\n  FETCH_EVENT_SUCCESS,\n  FETCH_EVENT_FAIL,\n  UPDATE_EVENT_REQUEST,\n  UPDATE_EVENT_SUCCESS,\n  UPDATE_EVENT_FAIL,\n  FETCH_EVENT_CANCELLED,\n} from '../types/event';\nimport { RESET_EVENTS } from '../types/events';\nimport history from '../history';\n\nexport const fetchEvent = (id, cancelToken) => async (dispatch, getState) => {\n  dispatch({ type: FETCH_EVENT_REQUEST });\n\n  try {\n    const { data } = await axios.get(`/api/events/${id}`, { cancelToken });\n\n    dispatch({ type: FETCH_EVENT_SUCCESS, payload: data });\n  } catch (error) {\n    if (axios.isCancel(error)) {\n      dispatch({\n        type: FETCH_EVENT_CANCELLED,\n      });\n    } else {\n      dispatch({\n        type: FETCH_EVENT_FAIL,\n        payload:\n          error.response && error.response.message\n            ? error.response.message\n            : error.response.data.message,\n      });\n    }\n  }\n};\n\nexport const updateEvent = (id, formValues) => async (dispatch, getState) => {\n  dispatch({ type: UPDATE_EVENT_REQUEST });\n  try {\n    const formData = new FormData();\n    const { redirectUrl, eventImg } = formValues;\n\n    formData.append('redirectUrl', redirectUrl);\n    formData.append('eventImg', eventImg);\n\n    const { data } = await axios.patch(`/api/events/${id}`, formData);\n\n    dispatch({ type: UPDATE_EVENT_SUCCESS, payload: data });\n\n    dispatch({ type: RESET_EVENTS });\n    history.push('/admin/eventList');\n  } catch (error) {\n    dispatch({\n      type: UPDATE_EVENT_FAIL,\n      payload:\n        error.response && error.response.message\n          ? error.response.message\n          : error.response.data.message,\n    });\n  }\n};\n"],"sourceRoot":""}