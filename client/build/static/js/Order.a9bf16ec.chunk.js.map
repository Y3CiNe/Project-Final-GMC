{"version":3,"sources":["components/Loader.js","../../../../node_modules/react-bootstrap/esm/Spinner.js","actions/order.js","components/OrderSummary.js","components/ShippingDetails.js","components/PaymentMethod.js","components/OrderItems.js","../../../../node_modules/react-bootstrap/esm/ListGroupItem.js","../../../../node_modules/react-bootstrap/esm/ListGroup.js","../../src/index.tsx","views/Order.js"],"names":["Loader","width","height","animation","role","style","className","Spinner","React","forwardRef","_ref","ref","bsPrefix","variant","size","children","_ref$as","as","Component","props","_objectWithoutPropertiesLoose","bsSpinnerPrefix","useBootstrapPrefix","createElement","_extends","classNames","displayName","fetchMyOrder","id","cancelToken","dispatch","a","type","FETCH_MY_ORDER_REQUEST","axios","get","data","FETCH_MY_ORDER_SUCCESS","payload","isCancel","FETCH_MY_ORDER_CANCELLED","FETCH_MY_ORDER_FAIL","response","message","createOrder","order","CREATE_ORDER_REQUEST","post","CREATE_ORDER_SUCCESS","RESET_CART_ITEM","localStorage","removeItem","history","push","_id","CREATE_ORDER_FAIL","updateOrderToPaid","paymentResult","UPDATE_ORDER_PAY_REQUEST","put","UPDATE_ORDER_PAY_SUCCESS","UPDATE_ORDER_PAY_FAIL","OrderSummary","Item","itemsPrice","shippingPrice","totalPrice","ShippingDetails","urlParams","location","pathname","split","shippingAddress","address","city","postalCode","country","isDelivered","deliveredAt","PaymentMethod","JSON","parse","getItem","isPaid","paidAt","OrderItems","items","length","map","item","index","key","md","src","product","alt","name","fluid","rounded","to","qty","price","defaultProps","undefined","active","disabled","ListGroupItem","action","eventKey","onClick","handleClick","useCallback","event","preventDefault","stopPropagation","AbstractNavItem","makeEventKey","href","horizontal","ListGroup","horizontalVariant","_useUncontrolled","useUncontrolled","activeKey","initialBsPrefix","_useUncontrolled$as","controlledProps","AbstractNav","PayPalButton","isSdkReady","window","this","actions","currency","options","amount","shippingPreference","purchase_units","currency_code","value","application_context","shipping_preference","onSuccess","createSubscription","onApprove","Button","ReactDOM","createOrderFn","onButtonReady","queryParams","Object","k","script","document","Error","PropTypes","catchError","onError","clientId","merchantId","intent","commit","vault","component","disableFunding","disableCard","integrationDate","locale","buyerCountry","debug","func","Order","match","useDispatch","useSelector","state","loading","paying","error","useState","sdkReady","setSdkReady","orderId","params","useEffect","source","CancelToken","addPayPalScript","async","onload","body","appendChild","paypal","token","cancel","title","paymentMethod","email_address","user","email","renderPaymentButton"],"mappings":"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","file":"static/js/Order.a9bf16ec.chunk.js","sourcesContent":["import React from 'react';\nimport { Spinner } from 'react-bootstrap';\n\nconst Loader = ({ width = '100px', height = '100px' }) => {\n  return (\n    <Spinner\n      animation='border'\n      role='status'\n      style={{\n        width,\n        height,\n      }}\n      className='d-block m-auto'>\n      <span className='sr-only'>Loading...</span>\n    </Spinner>\n  );\n};\n\nexport default Loader;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar Spinner = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      variant = _ref.variant,\n      animation = _ref.animation,\n      size = _ref.size,\n      children = _ref.children,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"variant\", \"animation\", \"size\", \"children\", \"as\", \"className\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'spinner');\n  var bsSpinnerPrefix = bsPrefix + \"-\" + animation;\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, bsSpinnerPrefix, size && bsSpinnerPrefix + \"-\" + size, variant && \"text-\" + variant)\n  }), children);\n});\nSpinner.displayName = 'Spinner';\nexport default Spinner;","import axios from '../axios';\nimport history from '../history';\nimport { RESET_CART_ITEM } from '../types/cart';\nimport {\n  FETCH_MY_ORDER_REQUEST,\n  FETCH_MY_ORDER_SUCCESS,\n  FETCH_MY_ORDER_FAIL,\n  FETCH_MY_ORDER_CANCELLED,\n  CREATE_ORDER_REQUEST,\n  CREATE_ORDER_SUCCESS,\n  CREATE_ORDER_FAIL,\n  UPDATE_ORDER_PAY_REQUEST,\n  UPDATE_ORDER_PAY_SUCCESS,\n  UPDATE_ORDER_PAY_FAIL,\n} from '../types/order';\n\nexport const fetchMyOrder = (id, cancelToken) => async (dispatch) => {\n  dispatch({ type: FETCH_MY_ORDER_REQUEST });\n\n  try {\n    const { data } = await axios.get(`/api/orders/${id}`, { cancelToken });\n\n    dispatch({ type: FETCH_MY_ORDER_SUCCESS, payload: data });\n  } catch (error) {\n    if (axios.isCancel(error)) {\n      dispatch({ type: FETCH_MY_ORDER_CANCELLED });\n    } else {\n      dispatch({\n        type: FETCH_MY_ORDER_FAIL,\n        payload:\n          error.response && error.response.data.message\n            ? error.response.data.message\n            : error.response,\n      });\n    }\n  }\n};\n\nexport const createOrder = (order) => async (dispatch) => {\n  dispatch({ type: CREATE_ORDER_REQUEST });\n  try {\n    const { data } = await axios.post('/api/orders', order);\n\n    dispatch({ type: CREATE_ORDER_SUCCESS });\n\n    dispatch({ type: RESET_CART_ITEM });\n    localStorage.removeItem('cartItems');\n\n    history.push(`/orders/${data._id}`);\n  } catch (error) {\n    dispatch({\n      type: CREATE_ORDER_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.response,\n    });\n  }\n};\n\nexport const updateOrderToPaid = (id, paymentResult) => async (dispatch) => {\n  dispatch({ type: UPDATE_ORDER_PAY_REQUEST });\n\n  try {\n    const { data } = await axios.put(`/api/orders/${id}/pay`, paymentResult);\n\n    dispatch({ type: UPDATE_ORDER_PAY_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      type: UPDATE_ORDER_PAY_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.response,\n    });\n  }\n};\n","import React from 'react';\nimport { Row, Col, ListGroup, Card } from 'react-bootstrap';\n\nconst OrderSummary = ({ order, children }) => {\n  return (\n    <Card>\n      <ListGroup variant='flush'>\n        <ListGroup.Item>\n          <h2>Order Summary</h2>\n        </ListGroup.Item>\n        <ListGroup.Item>\n          <Row>\n            <Col>Items</Col>\n            <Col>${order.itemsPrice}</Col>\n          </Row>\n        </ListGroup.Item>\n        <ListGroup.Item>\n          <Row>\n            <Col>Shipping</Col>\n            <Col>${order.shippingPrice}</Col>\n          </Row>\n        </ListGroup.Item>\n        <ListGroup.Item>\n          <Row>\n            <Col>Total</Col>\n            <Col>${order.totalPrice}</Col>\n          </Row>\n        </ListGroup.Item>\n\n        {children ? <ListGroup.Item>{children}</ListGroup.Item> : null}\n      </ListGroup>\n    </Card>\n  );\n};\n\nexport default OrderSummary;\n","import React from 'react';\nimport { ListGroup } from 'react-bootstrap';\n\nimport history from '../history';\nimport Message from '../components/Message';\n\nconst ShippingDetails = ({ order }) => {\n  const urlParams = history.location.pathname.split('/')[1];\n\n  return (\n    <ListGroup.Item>\n      <h2>Shipping</h2>\n      <p>\n        <strong>Address: </strong>\n        {order.shippingAddress.address}, {order.shippingAddress.city},\n        {order.shippingAddress.postalCode},{order.shippingAddress.country}\n      </p>\n\n      {urlParams === 'orders' ? (\n        order.isDelivered ? (\n          <Message variant='success'>\n            Delivered at {order.deliveredAt.split('T')[0]}\n          </Message>\n        ) : (\n          <Message variant='danger'>Not delivered</Message>\n        )\n      ) : null}\n    </ListGroup.Item>\n  );\n};\n\nexport default ShippingDetails;\n","import React from 'react';\nimport { ListGroup } from 'react-bootstrap';\n\nimport history from '../history';\nimport Message from '../components/Message';\n\nconst PaymentMethod = ({ order }) => {\n  const urlParams = history.location.pathname.split('/')[1];\n\n  return (\n    <ListGroup.Item>\n      <h2>Payment Method</h2>\n      <p>\n        <strong>Method: </strong>\n        {JSON.parse(localStorage.getItem('paymentMethod'))}\n      </p>\n      {urlParams === 'orders' ? (\n        order.isPaid ? (\n          <Message variant='success'>\n            Paid on {order.paidAt.split('T')[0]}\n          </Message>\n        ) : (\n          <Message variant='danger'>Not paid</Message>\n        )\n      ) : null}\n    </ListGroup.Item>\n  );\n};\n\nexport default PaymentMethod;\n","import React from 'react';\nimport { ListGroup, Row, Col, Image } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nimport history from '../history';\nimport Message from '../components/Message';\n\nconst OrderItems = ({ order }) => {\n  const urlParams = history.location.pathname.split('/')[1];\n\n  const items = urlParams === 'placeorder' ? 'cartItems' : 'orderItems';\n\n  return (\n    <ListGroup.Item>\n      <h2>Order Items</h2>\n      {order[items].length === 0 ? (\n        <Message>Your cart is empty</Message>\n      ) : (\n        <ListGroup variant='flush'>\n          {order[items].map((item, index) => {\n            return (\n              <ListGroup.Item key={index}>\n                <Row>\n                  <Col md={2}>\n                    <Image\n                      src={`/api/products/${item.product}/image`}\n                      alt={item.name}\n                      fluid\n                      rounded\n                    />\n                  </Col>\n                  <Col>\n                    <Link to={`/products/${item.product}`}>{item.name}</Link>\n                  </Col>\n                  <Col md={4}>\n                    {item.qty} x ${item.price} = ${item.qty * item.price}\n                  </Col>\n                </Row>\n              </ListGroup.Item>\n            );\n          })}\n        </ListGroup>\n      )}\n    </ListGroup.Item>\n  );\n};\n\nexport default OrderItems;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useCallback } from 'react';\nimport AbstractNavItem from './AbstractNavItem';\nimport { makeEventKey } from './SelectableContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  variant: undefined,\n  active: false,\n  disabled: false\n};\nvar ListGroupItem = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      active = _ref.active,\n      disabled = _ref.disabled,\n      className = _ref.className,\n      variant = _ref.variant,\n      action = _ref.action,\n      as = _ref.as,\n      eventKey = _ref.eventKey,\n      onClick = _ref.onClick,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"active\", \"disabled\", \"className\", \"variant\", \"action\", \"as\", \"eventKey\", \"onClick\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'list-group-item');\n  var handleClick = useCallback(function (event) {\n    if (disabled) {\n      event.preventDefault();\n      event.stopPropagation();\n      return;\n    }\n\n    if (onClick) onClick(event);\n  }, [disabled, onClick]);\n  return /*#__PURE__*/React.createElement(AbstractNavItem, _extends({\n    ref: ref\n  }, props, {\n    eventKey: makeEventKey(eventKey || null, props.href) // eslint-disable-next-line no-nested-ternary\n    ,\n    as: as || (action ? props.href ? 'a' : 'button' : 'div'),\n    onClick: handleClick,\n    className: classNames(className, bsPrefix, active && 'active', disabled && 'disabled', variant && bsPrefix + \"-\" + variant, action && bsPrefix + \"-action\")\n  }));\n});\nListGroupItem.defaultProps = defaultProps;\nListGroupItem.displayName = 'ListGroupItem';\nexport default ListGroupItem;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport warning from 'warning';\nimport { useUncontrolled } from 'uncontrollable';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractNav from './AbstractNav';\nimport ListGroupItem from './ListGroupItem';\nvar defaultProps = {\n  variant: undefined,\n  horizontal: undefined\n};\nvar ListGroup = React.forwardRef(function (props, ref) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      className = _useUncontrolled.className,\n      initialBsPrefix = _useUncontrolled.bsPrefix,\n      variant = _useUncontrolled.variant,\n      horizontal = _useUncontrolled.horizontal,\n      _useUncontrolled$as = _useUncontrolled.as,\n      as = _useUncontrolled$as === void 0 ? 'div' : _useUncontrolled$as,\n      controlledProps = _objectWithoutPropertiesLoose(_useUncontrolled, [\"className\", \"bsPrefix\", \"variant\", \"horizontal\", \"as\"]);\n\n  var bsPrefix = useBootstrapPrefix(initialBsPrefix, 'list-group');\n  var horizontalVariant;\n\n  if (horizontal) {\n    horizontalVariant = horizontal === true ? 'horizontal' : \"horizontal-\" + horizontal;\n  } else {\n    horizontalVariant = null;\n  }\n\n  process.env.NODE_ENV !== \"production\" ? warning(!(horizontal && variant === 'flush'), '`variant=\"flush\"` and `horizontal` should not be used together.') : void 0;\n  return /*#__PURE__*/React.createElement(AbstractNav, _extends({\n    ref: ref\n  }, controlledProps, {\n    as: as,\n    className: classNames(className, bsPrefix, variant && bsPrefix + \"-\" + variant, horizontalVariant && bsPrefix + \"-\" + horizontalVariant)\n  }));\n});\nListGroup.defaultProps = defaultProps;\nListGroup.displayName = 'ListGroup';\nListGroup.Item = ListGroupItem;\nexport default ListGroup;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport PropTypes from \"prop-types\";\n\ndeclare global {\n    interface Window { paypal: any }\n}\n\nexport interface PayPalButtonProps {\n    amount?: number|string,\n    currency?: number|string,\n    shippingPreference?: \"NO_SHIPPING\" | \"GET_FROM_FILE\" | \"SET_PROVIDED_ADDRESS\",\n    onSuccess?: Function,\n    catchError?: Function,\n    onError?: Function,\n    createOrder?: Function,\n    createSubscription?: Function,\n    onApprove?: Function,\n    style?: object,\n    options?: PaypalOptions,\n    onButtonReady?: Function,\n}\n\nexport interface PayPalButtonState {\n    isSdkReady: boolean\n}\n\nexport interface PaypalOptions {\n    clientId?: string,\n    merchantId?: string,\n    currency?: number|string,\n    intent?: string,\n    commit?: boolean|string,\n    vault?: boolean|string,\n    component?: string,\n    disableFunding?: string,\n    disableCard?: string,\n    integrationDate?: string,\n    locale?: string,\n    buyerCountry?: string,\n    debug?: boolean|string\n}\n\nclass PayPalButton extends React.Component<PayPalButtonProps, PayPalButtonState> {\n    static propTypes = {\n        amount: PropTypes.oneOfType([\n            PropTypes.number,\n            PropTypes.string,\n        ]),\n        currency: PropTypes.oneOfType([\n            PropTypes.number,\n            PropTypes.string,\n        ]),\n        shippingPreference: PropTypes.string,\n        onSuccess: PropTypes.func,\n        catchError: PropTypes.func,\n        onError: PropTypes.func,\n        createOrder: PropTypes.func,\n        createSubscription: PropTypes.func,\n        onApprove: PropTypes.func,\n        style: PropTypes.object,\n        options: PropTypes.shape({\n            clientId: PropTypes.string,\n            merchantId: PropTypes.string,\n            currency: PropTypes.oneOfType([\n                PropTypes.number,\n                PropTypes.string,\n            ]),\n            intent: PropTypes.string,\n            commit: PropTypes.oneOfType([\n                PropTypes.bool,\n                PropTypes.string\n            ]),\n            vault: PropTypes.oneOfType([\n                PropTypes.bool,\n                PropTypes.string\n            ]),\n            component: PropTypes.string,\n            disableFunding: PropTypes.string,\n            disableCard: PropTypes.string,\n            integrationDate: PropTypes.string,\n            locale: PropTypes.string,\n            buyerCountry: PropTypes.string,\n            debug: PropTypes.oneOfType([\n                PropTypes.bool,\n                PropTypes.string\n            ])\n        }),\n        onButtonReady: PropTypes.func,\n    }\n\n    static defaultProps = {\n        style: {},\n        options: {\n            clientId: \"sb\",\n            currency: \"USD\"\n        },\n        shippingPreference: \"GET_FROM_FILE\",\n    }\n\n    constructor(props: PayPalButtonProps) {\n        super(props);\n\n        this.state = {\n            isSdkReady: false,\n        };\n    }\n\n    componentDidMount() {\n        if (\n            typeof window !== \"undefined\" &&\n            window !== undefined &&\n            window.paypal === undefined\n        ) {\n            this.addPaypalSdk();\n        }\n        else if (\n            typeof window !== \"undefined\" &&\n            window !== undefined &&\n            window.paypal !== undefined &&\n            this.props.onButtonReady\n        ) {\n            this.props.onButtonReady();\n        }\n    }\n\n    createOrder(data: any, actions: any) {\n\n        const { currency, options, amount, shippingPreference } = this.props;\n\n        return actions.order.create({\n          purchase_units: [\n            {\n              amount: {\n                currency_code: currency\n                  ? currency\n                  : options && options.currency\n                  ? options.currency\n                  : \"USD\",\n                value: amount.toString()\n              }\n            }\n          ],\n          application_context: {\n            shipping_preference: shippingPreference\n          }\n        });\n    }\n\n    onApprove(data: any, actions: any) {\n        return actions.order\n            .capture()\n            .then((details) => {\n                if (this.props.onSuccess) {\n                    return this.props.onSuccess(details, data);\n                }\n            })\n            .catch((err) => {\n                if (this.props.catchError) {\n                    return this.props.catchError(err);\n                }\n            });\n    }\n\n    render() {\n        const {\n            amount,\n            onSuccess,\n            createOrder,\n            createSubscription,\n            onApprove,\n            style,\n        } = this.props;\n        const { isSdkReady } = this.state;\n\n        if (\n            !isSdkReady &&\n            (typeof window === \"undefined\" || window.paypal === undefined)\n        ) {\n            return null;\n        }\n\n        const Button = window.paypal.Buttons.driver(\"react\", {\n            React,\n            ReactDOM,\n        });\n\n        const createOrderFn =\n            amount && !createOrder\n                ? (data: any, actions: any) => this.createOrder(data, actions)\n                : (data: any, actions: any) => createOrder(data, actions);\n\n        return (\n            <Button\n                {...this.props}\n                createOrder={createSubscription ? undefined : createOrderFn}\n                createSubscription={createSubscription}\n                onApprove={\n                    onSuccess\n                        ? (data: any, actions: any) => this.onApprove(data, actions)\n                        : (data: any, actions: any) => onApprove(data, actions)\n                }\n                style={style}\n            />\n        );\n    }\n\n    private addPaypalSdk() {\n        const { options, onButtonReady } = this.props;\n        const queryParams: string[] = [];\n\n        // replacing camelCase with dashes\n        Object.keys(options).forEach(k => {\n            const name = k.split(/(?=[A-Z])/).join(\"-\").toLowerCase();\n            queryParams.push(`${name}=${options[k]}`);\n        });\n\n        const script = document.createElement(\"script\");\n        script.type = \"text/javascript\";\n        script.src = `https://www.paypal.com/sdk/js?${queryParams.join(\"&\")}`;\n        script.async = true;\n        script.onload = () => {\n            this.setState({ isSdkReady: true });\n\n            if (onButtonReady) {\n                onButtonReady();\n            }\n        };\n        script.onerror = () => {\n            throw new Error(\"Paypal SDK could not be loaded.\");\n        };\n    \n        document.body.appendChild(script);\n    }\n}\n\nexport { PayPalButton };\n","import React, { useState, useEffect } from 'react';\nimport { Row, Col, ListGroup, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { PayPalButton } from 'react-paypal-button-v2';\nimport axios from 'axios';\n\nimport { fetchMyOrder, updateOrderToPaid } from '../actions/order';\n\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport OrderSummary from '../components/OrderSummary';\nimport ShippingDetails from '../components/ShippingDetails';\nimport PaymentMethod from '../components/PaymentMethod';\nimport OrderItems from '../components/OrderItems';\nimport Meta from '../components/Meta';\n\nconst Order = ({ match }) => {\n  const dispatch = useDispatch();\n  const { loading, paying, data: order, error } = useSelector(\n    (state) => state.order\n  );\n  const [sdkReady, setSdkReady] = useState(false);\n\n  const orderId = match.params.id;\n\n  useEffect(() => {\n    const source = axios.CancelToken.source();\n\n    const addPayPalScript = async () => {\n      // to add a script tag that paypal needed\n      const { data: clientId } = await axios.get('/api/config/paypal');\n      const script = document.createElement('script');\n      script.type = 'text/javascript';\n      script.async = true;\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`;\n      script.onload = () => {\n        setSdkReady(true);\n      };\n      document.body.appendChild(script);\n    };\n\n    if (!order || orderId !== order._id) {\n      dispatch(fetchMyOrder(orderId, source.token));\n    } else if (!order.isPaid) {\n      if (!window.paypal) {\n        addPayPalScript();\n      } else {\n        setSdkReady(true);\n      }\n    }\n\n    return () => {\n      source.cancel();\n    };\n  }, [order, dispatch, orderId]);\n\n  const renderPaymentButton = () => {\n    if (order.isPaid) {\n      return null;\n    }\n\n    switch (order.paymentMethod) {\n      case 'Free':\n        return (\n          <Button\n            className='d-block w-100'\n            onClick={() =>\n              dispatch(\n                updateOrderToPaid(orderId, {\n                  email_address: order.user.email,\n                })\n              )\n            }>\n            Free!\n          </Button>\n        );\n\n      case 'Paypal':\n        return !sdkReady ? (\n          <Loader />\n        ) : (\n          <PayPalButton\n            amount={order.totalPrice}\n            onSuccess={(paymentResult) =>\n              dispatch(updateOrderToPaid(orderId, paymentResult))\n            }\n          />\n        );\n\n      default:\n        return null;\n    }\n  };\n\n  return loading || paying ? (\n    <Loader />\n  ) : (\n    <>\n      <Meta title='Order' />\n      {error && <Message variant='danger'>{error}</Message>}\n      <h1>Order {order._id}</h1>\n      <Row>\n        <Col md={8}>\n          <ListGroup variant='flush'>\n            <ShippingDetails order={order} />\n\n            <PaymentMethod order={order} />\n\n            <OrderItems order={order} />\n          </ListGroup>\n        </Col>\n\n        <Col md={4}>\n          <OrderSummary order={order} error={error}>\n            {renderPaymentButton()}\n          </OrderSummary>\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default Order;\n"],"sourceRoot":""}