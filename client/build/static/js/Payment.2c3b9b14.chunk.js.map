{"version":3,"sources":["components/Input.js","components/FormContainer.js","actions/cart.js","components/CheckoutSteps.js","views/Payment.js"],"names":["BootstrapInput","props","Control","BootstrapTextArea","as","row","BootstrapSelect","options","map","option","key","title","value","BootstrapDate","type","BootstrapCheckbox","Check","BootstrapRadio","Input","name","label","disabled","useField","meta","renderInput","Group","controlId","Label","placeholder","isInvalid","touched","error","render","msg","Feedback","FormContainer","children","className","xs","md","addToCart","id","qty","dispatch","getState","a","axios","get","data","ADD_CART_ITEM","payload","product","_id","image","price","countInStock","isPreOrder","localStorage","setItem","JSON","stringify","cart","cartItems","removeFromCart","REMOVE_CART_ITEM","saveShippingAddress","history","push","SAVE_CART_SHIPPING_ADDRESS","savePaymentMethod","SAVE_CART_PAYMENT_METHOD","CheckoutSteps","step1","step2","step3","step4","Item","Link","to","Payment","shippingAddress","useSelector","state","useDispatch","initialValues","paymentMethod","onSubmit","variant"],"mappings":"yJAMMA,EAAiB,SAACC,GAAD,OAAW,kBAAC,IAAKC,QAAYD,IAE9CE,EAAoB,SAACF,GAAD,OACxB,kBAAC,IAAKC,QAAN,eAAcE,GAAG,WAAWC,IAAI,KAAQJ,KAGpCK,EAAkB,SAACL,GACvB,OACE,kBAAC,IAAKC,QAAN,eAAcE,GAAG,UAAaH,GAC3BA,EAAMM,QAAQC,KAAI,SAACC,GAAD,OACjB,4BAAQC,IAAKD,EAAOE,MAAOC,MAAOH,EAAOG,OACtCH,EAAOE,YAOZE,EAAgB,SAACZ,GAAD,OAAW,kBAAC,IAAKC,QAAN,eAAcY,KAAK,QAAWb,KAEzDc,EAAoB,SAACd,GAAD,OAAW,kBAAC,IAAKe,MAAUf,IAE/CgB,EAAiB,SAAChB,GAAD,OAAW,kBAAC,IAAKe,MAAUf,IAmEnCiB,IAjED,SAAC,GAAqD,IAAnDC,EAAkD,EAAlDA,KAAML,EAA4C,EAA5CA,KAAMM,EAAsC,EAAtCA,MAAOC,EAA+B,EAA/BA,SAAUd,EAAqB,EAArBA,QAASK,EAAY,EAAZA,MAAY,EAChDU,YAASH,GAAjBI,EADwD,oBAG3DC,EAAc,SAACV,GACnB,OAAQA,GACN,IAAK,SACH,OAAOR,EAET,IAAK,WACH,OAAOH,EAET,IAAK,OACH,OAAOU,EAET,IAAK,WACH,OAAOE,EAET,IAAK,QACH,OAAOE,EAET,QACE,OAAOjB,IAIb,OACE,kBAAC,IAAKyB,MAAN,CAAYC,UAAWN,GACX,aAATN,GAAgC,UAATA,EACtB,kBAAC,IAAD,CACEK,KAAMA,EACNL,KAAMA,EACNM,MAAOA,EACPR,MAAOA,EACPR,GAAIoB,EAAYV,KAGlB,oCACE,kBAAC,IAAKa,MAAN,KAAaP,GACb,kBAAC,IAAD,CACED,KAAMA,EACNL,KAAMA,EACNc,YAAW,gBAAWR,GACtBS,UAAWN,EAAKO,SAAWP,EAAKQ,MAChCV,SAAUA,EACVd,QAASA,EACTH,GAAIoB,EAAYV,KAElB,kBAAC,IAAD,CACEK,KAAMA,EACNa,OAAQ,SAACC,GAAD,OACN,kBAAC,IAAYC,SAAb,CAAsBpB,KAAK,WAAWmB,U,iCChFpD,8CAeeE,IAZO,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACvB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,UAAU,6BACb,kBAAC,IAAD,CAAKC,GAAI,GAAIC,GAAI,GACdH,O,6NCCEI,EAAY,SAACC,EAAIC,GAAL,8CAAa,WAAOC,EAAUC,GAAjB,iBAAAC,EAAA,sEACbC,IAAMC,IAAN,wBAA2BN,IADd,gBAC5BO,EAD4B,EAC5BA,KAERL,EAAS,CACP7B,KAAMmC,IACNC,QAAS,CACPC,QAASH,EAAKI,IACdjC,KAAM6B,EAAK7B,KACXkC,MAAOL,EAAKK,MACZC,MAAON,EAAKM,MACZC,aAAcP,EAAKO,aACnBC,WAAYR,EAAKQ,WACjBd,SAIJe,aAAaC,QAAQ,YAAaC,KAAKC,UAAUhB,IAAWiB,KAAKC,YAhB7B,2CAAb,yDAmBZC,EAAiB,SAACtB,GAAD,OAAQ,SAACE,EAAUC,GAC/CD,EAAS,CAAE7B,KAAMkD,IAAkBd,QAAST,IAE5CgB,aAAaC,QAAQ,YAAaC,KAAKC,UAAUhB,IAAWiB,KAAKC,cAGtDG,EAAsB,SAACjB,GAIlC,OAHAS,aAAaC,QAAQ,kBAAmBC,KAAKC,UAAUZ,IACvDkB,IAAQC,KAAK,YAEN,CAAErD,KAAMsD,IAA4BlB,QAASF,IAGzCqB,EAAoB,SAACrB,GAGhC,OAFAS,aAAaC,QAAQ,gBAAiBC,KAAKC,UAAUZ,IAE9C,CAAElC,KAAMwD,IAA0BpB,QAASF,K,iCC5CpD,qCAiDeuB,IA7CO,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAC5C,OACE,kBAAC,IAAD,CAAKtC,UAAU,+BACb,kBAAC,IAAIuC,KAAL,KACGJ,EACC,kBAAC,IAAIK,KAAL,CAAUzE,GAAIyE,OAAMC,GAAG,UAAvB,WAIA,kBAAC,IAAID,KAAL,CAAUxD,UAAQ,GAAlB,YAIJ,kBAAC,IAAIuD,KAAL,KACGH,EACC,kBAAC,IAAII,KAAL,CAAUzE,GAAIyE,OAAMC,GAAG,aAAvB,YAIA,kBAAC,IAAID,KAAL,CAAUxD,UAAQ,GAAlB,aAIJ,kBAAC,IAAIuD,KAAL,KACGF,EACC,kBAAC,IAAIG,KAAL,CAAUzE,GAAIyE,OAAMC,GAAG,YAAvB,WAIA,kBAAC,IAAID,KAAL,CAAUxD,UAAQ,GAAlB,YAGJ,kBAAC,IAAIuD,KAAL,KACGD,EACC,kBAAC,IAAIE,KAAL,CAAUzE,GAAIyE,OAAMC,GAAG,eAAvB,eAIA,kBAAC,IAAID,KAAL,CAAUxD,UAAQ,GAAlB,mB,iCC1CV,iGAgEe0D,UApDC,SAAC,GAAiB,IAAfb,EAAc,EAAdA,QACTc,EAAoBC,aAAY,SAACC,GAAD,OAAWA,EAAMrB,QAAjDmB,gBAEFrC,EAAWwC,cAEZH,GACHd,EAAQC,KAAK,aAQf,OACE,oCACE,kBAAC,IAAD,CAAMxD,MAAM,YAEZ,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAe6D,OAAK,EAACC,OAAK,EAACC,OAAK,IAChC,8CACA,kBAAC,IAAD,CACEU,cAAe,CAAEC,cAAe,UAChCC,SAda,SAAC,GAAuB,IAArBD,EAAoB,EAApBA,cACtB1C,EAAS0B,YAAkBgB,IAC3BnB,EAAQC,KAAK,kBAaN,kBACC,kBAAC,IAAD,KACE,kBAAC,IAAD,CACE/C,MAAM,wBACNN,KAAK,QACLK,KAAK,gBACLP,MAAM,WAER,kBAAC,IAAD,CACEQ,MAAM,OACNN,KAAK,QACLK,KAAK,gBACLP,MAAM,SAER,kBAAC,IAAD,CACEyB,UAAU,kBACVvB,KAAK,SACLyE,QAAQ,WAHV","file":"static/js/Payment.2c3b9b14.chunk.js","sourcesContent":["import React from 'react';\nimport { useField, Field, ErrorMessage } from 'formik';\nimport PropTypes from 'prop-types';\n\nimport { Form, FormControl } from 'react-bootstrap';\n\nconst BootstrapInput = (props) => <Form.Control {...props} />;\n\nconst BootstrapTextArea = (props) => (\n  <Form.Control as='textarea' row='5' {...props} />\n);\n\nconst BootstrapSelect = (props) => {\n  return (\n    <Form.Control as='select' {...props}>\n      {props.options.map((option) => (\n        <option key={option.title} value={option.value}>\n          {option.title}\n        </option>\n      ))}\n    </Form.Control>\n  );\n};\n\nconst BootstrapDate = (props) => <Form.Control type='date' {...props} />;\n\nconst BootstrapCheckbox = (props) => <Form.Check {...props} />;\n\nconst BootstrapRadio = (props) => <Form.Check {...props} />;\n\nconst Input = ({ name, type, label, disabled, options, value }) => {\n  const [, meta] = useField(name);\n\n  const renderInput = (type) => {\n    switch (type) {\n      case 'select':\n        return BootstrapSelect;\n\n      case 'textarea':\n        return BootstrapTextArea;\n\n      case 'date':\n        return BootstrapDate;\n\n      case 'checkbox':\n        return BootstrapCheckbox;\n\n      case 'radio':\n        return BootstrapRadio;\n\n      default:\n        return BootstrapInput;\n    }\n  };\n\n  return (\n    <Form.Group controlId={label}>\n      {type === 'checkbox' || type === 'radio' ? (\n        <Field\n          name={name}\n          type={type}\n          label={label}\n          value={value}\n          as={renderInput(type)}\n        />\n      ) : (\n        <>\n          <Form.Label>{label}</Form.Label>\n          <Field\n            name={name}\n            type={type}\n            placeholder={`Enter ${label}`}\n            isInvalid={meta.touched && meta.error}\n            disabled={disabled}\n            options={options}\n            as={renderInput(type)}\n          />\n          <ErrorMessage\n            name={name}\n            render={(msg) => (\n              <FormControl.Feedback type='invalid'>{msg}</FormControl.Feedback>\n            )}\n          />\n        </>\n      )}\n    </Form.Group>\n  );\n};\n\nInput.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n};\n\nexport default Input;\n","import React from 'react';\nimport { Col, Container, Row } from 'react-bootstrap';\n\nconst FormContainer = ({ children }) => {\n  return (\n    <Container>\n      <Row className=\"justify-content-md-center\">\n        <Col xs={12} md={6}>\n          {children}\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default FormContainer;\n","import axios from '../axios';\nimport history from '../history';\nimport {\n  ADD_CART_ITEM,\n  REMOVE_CART_ITEM,\n  SAVE_CART_SHIPPING_ADDRESS,\n  SAVE_CART_PAYMENT_METHOD,\n} from '../types/cart';\n\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\n  const { data } = await axios.get(`/api/products/${id}`);\n\n  dispatch({\n    type: ADD_CART_ITEM,\n    payload: {\n      product: data._id,\n      name: data.name,\n      image: data.image,\n      price: data.price,\n      countInStock: data.countInStock,\n      isPreOrder: data.isPreOrder,\n      qty,\n    },\n  });\n\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\n};\n\nexport const removeFromCart = (id) => (dispatch, getState) => {\n  dispatch({ type: REMOVE_CART_ITEM, payload: id });\n\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\n};\n\nexport const saveShippingAddress = (data) => {\n  localStorage.setItem('shippingAddress', JSON.stringify(data));\n  history.push('/payment');\n\n  return { type: SAVE_CART_SHIPPING_ADDRESS, payload: data };\n};\n\nexport const savePaymentMethod = (data) => {\n  localStorage.setItem('paymentMethod', JSON.stringify(data));\n\n  return { type: SAVE_CART_PAYMENT_METHOD, payload: data };\n};\n","import React from 'react';\nimport { Nav } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nconst CheckoutSteps = ({ step1, step2, step3, step4 }) => {\n  return (\n    <Nav className='justify-content-center mb-4'>\n      <Nav.Item>\n        {step1 ? (\n          <Nav.Link as={Link} to='/login'>\n            Sign In\n          </Nav.Link>\n        ) : (\n          <Nav.Link disabled>Sign In</Nav.Link>\n        )}\n      </Nav.Item>\n\n      <Nav.Item>\n        {step2 ? (\n          <Nav.Link as={Link} to='/shipping'>\n            Shipping\n          </Nav.Link>\n        ) : (\n          <Nav.Link disabled>Shipping</Nav.Link>\n        )}\n      </Nav.Item>\n\n      <Nav.Item>\n        {step3 ? (\n          <Nav.Link as={Link} to='/payment'>\n            Payment\n          </Nav.Link>\n        ) : (\n          <Nav.Link disabled>Payment</Nav.Link>\n        )}\n      </Nav.Item>\n      <Nav.Item>\n        {step4 ? (\n          <Nav.Link as={Link} to='/placeorder'>\n            Place Order\n          </Nav.Link>\n        ) : (\n          <Nav.Link disabled>Place Order</Nav.Link>\n        )}\n      </Nav.Item>\n    </Nav>\n  );\n};\n\nexport default CheckoutSteps;\n","import React from 'react';\nimport { Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Formik, Form } from 'formik';\n\nimport { savePaymentMethod } from '../actions/cart';\n\nimport FormContainer from '../components/FormContainer';\nimport CheckoutSteps from '../components/CheckoutSteps';\nimport Input from '../components/Input';\nimport Meta from '../components/Meta';\n\nconst Payment = ({ history }) => {\n  const { shippingAddress } = useSelector((state) => state.cart);\n\n  const dispatch = useDispatch();\n\n  if (!shippingAddress) {\n    history.push('/shipping');\n  }\n\n  const onFormSubmit = ({ paymentMethod }) => {\n    dispatch(savePaymentMethod(paymentMethod));\n    history.push('/placeorder');\n  };\n\n  return (\n    <>\n      <Meta title='Payment' />\n\n      <FormContainer>\n        <CheckoutSteps step1 step2 step3 />\n        <h1>Payment method</h1>\n        <Formik\n          initialValues={{ paymentMethod: 'Paypal' }}\n          onSubmit={onFormSubmit}>\n          {() => (\n            <Form>\n              <Input\n                label='Paypal or Credit Card'\n                type='radio'\n                name='paymentMethod'\n                value='Paypal'\n              />\n              <Input\n                label='Free'\n                type='radio'\n                name='paymentMethod'\n                value='Free'\n              />\n              <Button\n                className='d-block ml-auto'\n                type='submit'\n                variant='primary'>\n                Continue\n              </Button>\n            </Form>\n          )}\n        </Formik>\n      </FormContainer>\n    </>\n  );\n};\n\nexport default Payment;\n"],"sourceRoot":""}