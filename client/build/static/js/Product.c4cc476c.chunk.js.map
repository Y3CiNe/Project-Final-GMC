{"version":3,"sources":["components/Loader.js","components/Input.js","validations/index.js","actions/product.js","actions/reviews.js","components/CommentReview.js","components/ProductDetails.js","components/ProductAvailability.js","components/Review.js","components/ReviewList.js","views/Product.js"],"names":["Loader","width","height","animation","role","style","className","BootstrapInput","props","Control","BootstrapTextArea","as","row","BootstrapSelect","options","map","option","key","title","value","BootstrapDate","type","BootstrapCheckbox","Check","BootstrapRadio","Input","name","label","disabled","useField","meta","renderInput","Group","controlId","Label","placeholder","isInvalid","touched","error","render","msg","Feedback","loginFormValidationSchema","yup","email","required","password","min","signupFormValidationSchema","confirmPassword","profileFormValidationSchema","eventFormValidationSchema","redirectUrl","userFormValidationSchema","productFormValidationSchema","price","typeError","brand","category","countInStock","description","reviewFormValidationSchema","rating","addressFormValidationSchema","address","city","postalCode","country","fetchProduct","id","cancelToken","dispatch","a","FETCH_PRODUCT_REQUEST","axios","get","data","FETCH_PRODUCT_SUCCESS","payload","isCancel","FETCH_PRODUCT_CANCELLED","FETCH_PRODUCT_FAIL","response","message","updateProduct","formValues","UPDATE_PRODUCT_REQUEST","releaseDate","image","isPreOrder","formData","FormData","append","put","history","push","UPDATE_PRODUCT_SUCCESS","UPDATE_PRODUCT_FAIL","fetchReviews","productId","pageNumber","FETCH_REVIEWS_REQUEST","FETCH_REVIEWS_SUCCESS","FETCH_REVIEWS_FAIL","initialValues","comment","commentOptions","CommentReview","redirect","user","useSelector","state","auth","product","success","reviews","formik","useRef","useDispatch","useEffect","current","resetForm","ListGroup","variant","Item","innerRef","validationSchema","onSubmit","reviewFormValues","_id","CREATE_REVIEW_REQUEST","post","CREATE_REVIEW_SUCCESS","UPDATE_PRODUCT_RATING_AND_NUM_REVIEWS","review","CREATE_REVIEW_FAIL","isSubmitting","Button","varaint","Message","to","ProductDetails","Rating","text","numReviews","ProductAvailability","useState","qty","setQty","renderWishlistText","wishList","find","wish","Card","varient","Row","Col","Form","onChange","e","target","Array","keys","index","onClick","updateWishProduct","Review","lastReviewEleRef","ref","createdAt","substring","wordBreak","whiteSpace","ReviewList","loadingReview","loading","productReview","hasMore","creatingReview","creating","createReviewSuccess","createReviewError","observer","list","cache","CellMeasurerCache","fixedWidth","defaultHeight","useCallback","node","disconnect","IntersectionObserver","entries","isIntersecting","setTimeout","observe","rowRenderer","parent","length","columnIndex","rowIndex","clearAll","forceUpdateGrid","RESET_CREATE_REVIEW","page","isScrolling","onChildScroll","scrollTop","disableHeight","autoHeight","onScroll","rowCount","rowHeight","deferredMeasurementCache","Product","match","imgLoaded","setImgLoaded","params","Meta","keywords","goBack","md","Image","src","objectFit","fluid","alt","onLoad","url"],"mappings":"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","file":"static/js/Product.c4cc476c.chunk.js","sourcesContent":["import React from 'react';\nimport { Spinner } from 'react-bootstrap';\n\nconst Loader = ({ width = '100px', height = '100px' }) => {\n  return (\n    <Spinner\n      animation='border'\n      role='status'\n      style={{\n        width,\n        height,\n      }}\n      className='d-block m-auto'>\n      <span className='sr-only'>Loading...</span>\n    </Spinner>\n  );\n};\n\nexport default Loader;\n","import React from 'react';\nimport { useField, Field, ErrorMessage } from 'formik';\nimport PropTypes from 'prop-types';\n\nimport { Form, FormControl } from 'react-bootstrap';\n\nconst BootstrapInput = (props) => <Form.Control {...props} />;\n\nconst BootstrapTextArea = (props) => (\n  <Form.Control as='textarea' row='5' {...props} />\n);\n\nconst BootstrapSelect = (props) => {\n  return (\n    <Form.Control as='select' {...props}>\n      {props.options.map((option) => (\n        <option key={option.title} value={option.value}>\n          {option.title}\n        </option>\n      ))}\n    </Form.Control>\n  );\n};\n\nconst BootstrapDate = (props) => <Form.Control type='date' {...props} />;\n\nconst BootstrapCheckbox = (props) => <Form.Check {...props} />;\n\nconst BootstrapRadio = (props) => <Form.Check {...props} />;\n\nconst Input = ({ name, type, label, disabled, options, value }) => {\n  const [, meta] = useField(name);\n\n  const renderInput = (type) => {\n    switch (type) {\n      case 'select':\n        return BootstrapSelect;\n\n      case 'textarea':\n        return BootstrapTextArea;\n\n      case 'date':\n        return BootstrapDate;\n\n      case 'checkbox':\n        return BootstrapCheckbox;\n\n      case 'radio':\n        return BootstrapRadio;\n\n      default:\n        return BootstrapInput;\n    }\n  };\n\n  return (\n    <Form.Group controlId={label}>\n      {type === 'checkbox' || type === 'radio' ? (\n        <Field\n          name={name}\n          type={type}\n          label={label}\n          value={value}\n          as={renderInput(type)}\n        />\n      ) : (\n        <>\n          <Form.Label>{label}</Form.Label>\n          <Field\n            name={name}\n            type={type}\n            placeholder={`Enter ${label}`}\n            isInvalid={meta.touched && meta.error}\n            disabled={disabled}\n            options={options}\n            as={renderInput(type)}\n          />\n          <ErrorMessage\n            name={name}\n            render={(msg) => (\n              <FormControl.Feedback type='invalid'>{msg}</FormControl.Feedback>\n            )}\n          />\n        </>\n      )}\n    </Form.Group>\n  );\n};\n\nInput.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n};\n\nexport default Input;\n","import * as yup from 'yup';\n\nexport const loginFormValidationSchema = yup.object({\n  email: yup\n    .string()\n    .email('Invalid email format')\n    .required('Email is required'),\n  password: yup\n    .string()\n    .required('Password is required')\n    .min(6, 'Required at least 6 characters'),\n});\n\nexport const signupFormValidationSchema = yup.object({\n  name: yup.string().required('Name is required'),\n  email: yup\n    .string()\n    .email('Invalid email format')\n    .required('Email is required'),\n  password: yup\n    .string()\n    .required('Password is required')\n    .min(6, 'Required at least 6 characters'),\n  confirmPassword: yup\n    .string()\n    .required('Confirm password is required')\n    .min(6, 'Required at least 6 characters'),\n});\n\nexport const profileFormValidationSchema = yup.object({\n  name: yup.string().required('Name is required'),\n  password: yup.string().min(6, 'Required at least 6 characters'),\n  confirmPassword: yup.string().min(6, 'Required at least 6 characters'),\n});\n\nexport const eventFormValidationSchema = yup.object({\n  redirectUrl: yup.string().required('Redirect url is required'),\n});\n\nexport const userFormValidationSchema = yup.object({\n  name: yup.string().required('Name is required'),\n  email: yup\n    .string()\n    .required('Email is required')\n    .email('Invalid email format'),\n});\n\nexport const productFormValidationSchema = yup.object({\n  name: yup.string().required('Name is required'),\n  price: yup\n    .number()\n    .typeError('Must be a number')\n    .required('Price is required'),\n  brand: yup.string().required('Brand is required'),\n  category: yup.string().required('Category is required'),\n  countInStock: yup\n    .number()\n    .typeError('Must be a number')\n    .required('CountInStock is required'),\n  description: yup.string().required('Description is required'),\n});\n\nexport const reviewFormValidationSchema = yup.object({\n  rating: yup.string().required('Rating is required'),\n});\n\nexport const addressFormValidationSchema = yup.object({\n  address: yup.string().required('Address is required'),\n  city: yup.string().required('City is required'),\n  postalCode: yup.number(),\n  country: yup.string().required('Country is required'),\n});\n","import axios from '../axios';\nimport history from '../history';\nimport {\n  FETCH_PRODUCT_REQUEST,\n  FETCH_PRODUCT_SUCCESS,\n  FETCH_PRODUCT_FAIL,\n  FETCH_PRODUCT_CANCELLED,\n  UPDATE_PRODUCT_REQUEST,\n  UPDATE_PRODUCT_SUCCESS,\n  UPDATE_PRODUCT_FAIL,\n} from '../types/product';\n\nexport const fetchProduct = (id, cancelToken) => async (dispatch) => {\n  dispatch({ type: FETCH_PRODUCT_REQUEST });\n\n  try {\n    const { data } = await axios.get(`/api/products/${id}`, { cancelToken });\n\n    dispatch({ type: FETCH_PRODUCT_SUCCESS, payload: data });\n  } catch (error) {\n    if (axios.isCancel(error)) {\n      dispatch({ type: FETCH_PRODUCT_CANCELLED });\n    } else {\n      dispatch({\n        type: FETCH_PRODUCT_FAIL,\n        payload:\n          error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n      });\n    }\n  }\n};\n\nexport const updateProduct = (id, formValues) => async (dispatch) => {\n  dispatch({ type: UPDATE_PRODUCT_REQUEST });\n\n  try {\n    const {\n      name,\n      price,\n      description,\n      brand,\n      category,\n      countInStock,\n      releaseDate,\n      image,\n      isPreOrder,\n    } = formValues;\n\n    const formData = new FormData();\n\n    formData.append('name', name);\n    formData.append('price', price);\n    formData.append('description', description);\n    formData.append('brand', brand);\n    formData.append('category', category);\n    formData.append('countInStock', countInStock);\n    formData.append('releaseDate', releaseDate);\n    formData.append('isPreOrder', isPreOrder);\n    if (image) {\n      formData.append('productImg', image);\n    }\n\n    const { data } = await axios.put(`/api/products/${id}`, formData);\n\n    history.push('/admin/productList');\n\n    dispatch({ type: UPDATE_PRODUCT_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      type: UPDATE_PRODUCT_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.response,\n    });\n  }\n};\n","import axios from '../axios';\nimport {\n  FETCH_REVIEWS_REQUEST,\n  FETCH_REVIEWS_SUCCESS,\n  FETCH_REVIEWS_FAIL,\n  CREATE_REVIEW_REQUEST,\n  CREATE_REVIEW_SUCCESS,\n  CREATE_REVIEW_FAIL,\n} from '../types/reviews';\nimport { UPDATE_PRODUCT_RATING_AND_NUM_REVIEWS } from '../types/product';\n\nexport const fetchReviews = (productId, pageNumber) => async (dispatch) => {\n  dispatch({ type: FETCH_REVIEWS_REQUEST });\n\n  try {\n    const { data } = await axios.get(\n      `/api/reviews/${productId}?page=${pageNumber}`\n    );\n\n    dispatch({ type: FETCH_REVIEWS_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      type: FETCH_REVIEWS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.response,\n    });\n  }\n};\n\nexport const createReview = (productId, formValues) => async (dispatch) => {\n  dispatch({\n    type: CREATE_REVIEW_REQUEST,\n  });\n\n  try {\n    const { data } = await axios.post(`/api/reviews/${productId}`, formValues);\n\n    dispatch({ type: CREATE_REVIEW_SUCCESS, payload: data });\n\n    dispatch({\n      type: UPDATE_PRODUCT_RATING_AND_NUM_REVIEWS,\n      payload: data.review.rating,\n    });\n  } catch (error) {\n    dispatch({\n      type: CREATE_REVIEW_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.response,\n    });\n  }\n};\n","import React, { useEffect, useRef } from 'react';\nimport { ListGroup, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Formik, Form } from 'formik';\n\nimport { createReview } from '../actions/reviews';\nimport Message from '../components/Message';\nimport { reviewFormValidationSchema } from '../validations';\nimport Input from './Input';\n\nconst initialValues = {\n  rating: 1,\n  comment: '',\n};\n\nconst commentOptions = [\n  { title: '1 - Poor', value: 1 },\n  { title: '2 - Fair', value: 2 },\n  { title: '3 - Good', value: 3 },\n  { title: '4 - Very Good', value: 4 },\n  { title: '5 - Excellent', value: 5 },\n];\n\nconst CommentReview = ({ redirect }) => {\n  const { data: user } = useSelector((state) => state.auth);\n  const { data: product } = useSelector((state) => state.product);\n  const { success } = useSelector((state) => state.reviews);\n  const formik = useRef();\n\n  const dispatch = useDispatch();\n\n  const onReviewSubmitClick = (reviewFormValues) => {\n    dispatch(createReview(product._id, reviewFormValues));\n  };\n\n  // reset submit button after submit\n  useEffect(() => {\n    if (success) {\n      formik.current.resetForm();\n    }\n  }, [success]);\n\n  return (\n    <>\n      <h2>Write a Customer Review</h2>\n      {!user ? (\n        <Message variant='primary'>\n          Please <Link to={`/login?redirect=${redirect}`}>sign in</Link> to\n          write a review\n        </Message>\n      ) : (\n        <ListGroup variant='flush'>\n          <ListGroup.Item>\n            <Formik\n              innerRef={formik}\n              initialValues={initialValues}\n              validationSchema={reviewFormValidationSchema}\n              onSubmit={onReviewSubmitClick}>\n              {({ isSubmitting }) => {\n                return (\n                  <Form>\n                    <Input\n                      label='Rating'\n                      name='rating'\n                      type='select'\n                      options={commentOptions}\n                    />\n                    <Input label='Comment' name='comment' type='textarea' />\n                    <Button\n                      className='d-block ml-auto'\n                      type='submit'\n                      varaint='primary'\n                      disabled={isSubmitting}>\n                      Submit\n                    </Button>\n                  </Form>\n                );\n              }}\n            </Formik>\n          </ListGroup.Item>\n        </ListGroup>\n      )}\n    </>\n  );\n};\n\nexport default CommentReview;\n","import React from 'react';\nimport { ListGroup } from 'react-bootstrap';\n\nimport Rating from '../components/Rating';\n\nconst ProductDetails = ({ product }) => {\n  return (\n    <ListGroup variant='flush'>\n      <ListGroup.Item>\n        <h3>{product.name}</h3>\n      </ListGroup.Item>\n      <ListGroup.Item>\n        <Rating value={product.rating} text={`${product.numReviews} reviews`} />\n      </ListGroup.Item>\n      <ListGroup.Item>Price:{product.price}</ListGroup.Item>\n      <ListGroup.Item>Description:{product.description}</ListGroup.Item>\n    </ListGroup>\n  );\n};\n\nexport default ProductDetails;\n","import React, { useState } from 'react';\nimport { Row, Col, ListGroup, Card, Form, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport history from '../history';\nimport { updateWishProduct } from '../actions/auth';\n\nconst ProductAvailability = ({ product }) => {\n  const dispatch = useDispatch();\n  const [qty, setQty] = useState(1);\n  const { data: user } = useSelector((state) => state.auth);\n\n  const onAddToCartClick = () => {\n    // store the product id and qty in url\n    history.push(`/cart/${product._id}?qty=${qty}`);\n  };\n\n  const onAddToWishListClick = () => {\n    if (user) {\n      dispatch(updateWishProduct(product._id));\n      return;\n    }\n\n    history.push(\n      `/login?redirect=products/${product._id}`\n    );\n  };\n\n  const renderWishlistText =\n    user && user.wishList.find((wish) => wish._id === product._id)\n      ? 'Remove From Wishlist'\n      : 'Add To Wishlist';\n\n  return (\n    <Card>\n      <ListGroup varient='flush'>\n        <ListGroup.Item>\n          <Row>\n            <Col>Price:</Col>\n            <Col>\n              <strong>${product.price}</strong>\n            </Col>\n          </Row>\n        </ListGroup.Item>\n        <ListGroup.Item>\n          <Row>\n            <Col>Status:</Col>\n            <Col>{product.countInStock > 0 ? 'In Stock' : 'Out of Stock'}</Col>\n          </Row>\n        </ListGroup.Item>\n\n        {product.countInStock > 0 && (\n          <ListGroup.Item>\n            <Row>\n              <Col>Qty</Col>\n              <Col>\n                <Form.Control\n                  as='select'\n                  value={qty}\n                  disabled={product.isPreOrder}\n                  onChange={(e) => setQty(e.target.value)}>\n                  {[...Array(product.countInStock).keys()].map((index) => (\n                    <option key={index + 1} value={index + 1}>\n                      {index + 1}\n                    </option>\n                  ))}\n                </Form.Control>\n              </Col>\n            </Row>\n            {product.isPreOrder && <p>*Limit one item per person</p>}\n          </ListGroup.Item>\n        )}\n        <ListGroup.Item>\n          <Button\n            className='btn-block'\n            type='button'\n            disabled={product.countInStock < 1}\n            onClick={onAddToCartClick}>\n            {!product.isPreOrder ? 'Add To Cart' : 'Pre-Order'}\n          </Button>\n          <Button\n            className='btn-block'\n            type='button'\n            onClick={onAddToWishListClick}>\n            {renderWishlistText}\n          </Button>\n        </ListGroup.Item>\n      </ListGroup>\n    </Card>\n  );\n};\n\nexport default ProductAvailability;\n","import React from 'react';\nimport { ListGroup } from 'react-bootstrap';\n\nimport Rating from '../components/Rating';\n\nconst Review = ({ review, style, lastReviewEleRef }) => {\n  return lastReviewEleRef ? (\n    <ListGroup.Item ref={lastReviewEleRef} style={style}>\n      <strong>{review.name}</strong>\n      <Rating value={review.rating} />\n      <p>{review.createdAt.substring(0, 10)}</p>\n      <p style={{ wordBreak: 'break-all', whiteSpace: 'normal' }}>\n        {review.comment}\n      </p>\n    </ListGroup.Item>\n  ) : (\n    <ListGroup.Item style={style}>\n      <strong>{review.name}</strong>\n      <Rating value={review.rating} />\n      <p>{review.createdAt.substring(0, 10)}</p>\n      <p style={{ wordBreak: 'break-all', whiteSpace: 'normal' }}>\n        {review.comment}\n      </p>\n    </ListGroup.Item>\n  );\n};\n\nexport default Review;\n","import React, { useEffect, useRef, useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ListGroup } from 'react-bootstrap';\nimport {\n  List,\n  WindowScroller,\n  AutoSizer,\n  CellMeasurer,\n  CellMeasurerCache,\n} from 'react-virtualized';\n\nimport { RESET_CREATE_REVIEW } from '../types/reviews';\nimport { fetchReviews } from '../actions/reviews';\nimport Message from './Message';\nimport Review from './Review';\nimport Loader from './Loader';\n\nconst ReviewList = ({ productId }) => {\n  const {\n    loading: loadingReview,\n    data: productReview,\n    hasMore,\n    creating: creatingReview,\n    success: createReviewSuccess,\n    error: createReviewError,\n  } = useSelector((state) => state.reviews);\n  const dispatch = useDispatch();\n  const observer = useRef();\n  const pageNumber = useRef(1);\n  const list = useRef();\n  const cache = useRef(\n    new CellMeasurerCache({\n      fixedWidth: true,\n      defaultHeight: 50,\n    })\n  );\n\n  const lastReviewEleRef = useCallback(\n    (node) => {\n      if (loadingReview) {\n        return;\n      }\n\n      if (observer.current) {\n        observer.current.disconnect();\n      }\n\n      observer.current = new IntersectionObserver((entries) => {\n        if (entries[0].isIntersecting && hasMore) {\n          setTimeout(() => {\n            pageNumber.current += 1;\n            dispatch(fetchReviews(productId, pageNumber.current));\n          }, 2000);\n        }\n      });\n\n      if (node) {\n        observer.current.observe(node);\n      }\n    },\n    [dispatch, loadingReview, hasMore, productId]\n  );\n\n  const rowRenderer = ({ key, index, style, parent }) => {\n    const review = productReview.reviews[index];\n\n    return index + 1 === productReview.reviews.length ? (\n      <CellMeasurer\n        key={key}\n        cache={cache.current}\n        parent={parent}\n        columnIndex={0}\n        rowIndex={index}>\n        <Review\n          review={review}\n          style={style}\n          lastReviewEleRef={lastReviewEleRef}\n        />\n      </CellMeasurer>\n    ) : (\n      <CellMeasurer\n        key={key}\n        cache={cache.current}\n        parent={parent}\n        columnIndex={0}\n        rowIndex={index}>\n        <Review review={review} style={style} />\n      </CellMeasurer>\n    );\n  };\n\n  // force update react-virtaulized list\n  // to make row height update dynamically\n  useEffect(() => {\n    if (createReviewSuccess) {\n      cache.current.clearAll();\n      list.current.forceUpdateGrid();\n      dispatch({ type: RESET_CREATE_REVIEW });\n    }\n  }, [createReviewSuccess]);\n\n  return (\n    <>\n      {productReview.page && <h2>Reviews</h2>}\n      {!loadingReview &&\n        !createReviewError &&\n        productReview.reviews &&\n        productReview.reviews.length === 0 && (\n          <Message variant='primary'>No Reviews</Message>\n        )}\n      {createReviewError && (\n        <Message variant='danger'>{createReviewError}</Message>\n      )}\n\n      {creatingReview ? <Loader width='30px' height='30px' /> : null}\n      <WindowScroller>\n        {({ height, isScrolling, onChildScroll, scrollTop }) => {\n          return (\n            <AutoSizer disableHeight>\n              {({ width }) => (\n                <ListGroup>\n                  <List\n                    ref={list}\n                    autoHeight\n                    height={height}\n                    isScrolling={isScrolling}\n                    onScroll={onChildScroll}\n                    rowCount={productReview.reviews.length}\n                    rowHeight={cache.current.rowHeight}\n                    deferredMeasurementCache={cache.current}\n                    rowRenderer={rowRenderer}\n                    scrollTop={scrollTop}\n                    width={width}\n                  />\n                </ListGroup>\n              )}\n            </AutoSizer>\n          );\n        }}\n      </WindowScroller>\n\n      <div>{loadingReview && <Loader width='30px' height='30px' />}</div>\n    </>\n  );\n};\n\nexport default ReviewList;\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Row, Col, Button, Image } from 'react-bootstrap';\nimport Skeleton from 'react-loading-skeleton';\n\nimport history from '../history';\n\nimport { fetchProduct } from '../actions/product';\nimport { fetchReviews } from '../actions/reviews';\n\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport Meta from '../components/Meta';\nimport CommentReview from '../components/CommentReview';\nimport ProductDetails from '../components/ProductDetails';\nimport ProductAvailability from '../components/ProductAvailability';\nimport ReviewList from '../components/ReviewList';\n\nconst Product = ({ match }) => {\n  const { loading, data: product, error } = useSelector(\n    (state) => state.product\n  );\n  const [imgLoaded, setImgLoaded] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const productId = match.params.id;\n\n  useEffect(() => {\n    dispatch(fetchProduct(productId));\n    dispatch(fetchReviews(productId, 1));\n  }, [dispatch, productId]);\n\n  return (\n    <>\n      {loading ? (\n        <Loader />\n      ) : (\n        <>\n          <Meta\n            title={product.name}\n            description='We sell the best products for cheap'\n            keywords='electronics'\n          />\n\n          {error && <Message variant='danger'>{error}</Message>}\n          <Row className='m-auto'>\n            <Button\n              className='mr-auto my-3'\n              variant='secondary'\n              onClick={() => history.goBack()}>\n              Go back\n            </Button>\n          </Row>\n          <Row>\n            <Col md={4} className='d-flex align-items-center'>\n              {!imgLoaded && (\n                <div style={{ width: '100%' }}>\n                  <Skeleton height={300} width={`100%`} />\n                </div>\n              )}\n\n              <Image\n                className='m-auto'\n                src={`/api/products/${product._id}/image`}\n                style={{ objectFit: 'contain', height: '300px' }}\n                fluid\n                alt={product.name}\n                onLoad={() => setImgLoaded(true)}\n              />\n            </Col>\n            <Col md={5}>\n              <ProductDetails product={product} />\n            </Col>\n            <Col md={3}>\n              <ProductAvailability product={product} />\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <CommentReview redirect={match.url} />\n              <ReviewList productId={productId} />\n            </Col>\n          </Row>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Product;\n"],"sourceRoot":""}