{"version":3,"sources":["components/Loader.js","components/Input.js","validations/index.js","components/FormContainer.js","../../../../node_modules/react-bootstrap/esm/Spinner.js","actions/product.js","components/ImageInput.js","views/ProductEdit.js"],"names":["Loader","width","height","animation","role","style","className","BootstrapInput","props","Control","BootstrapTextArea","as","row","BootstrapSelect","options","map","option","key","title","value","BootstrapDate","type","BootstrapCheckbox","Check","BootstrapRadio","Input","name","label","disabled","useField","meta","renderInput","Group","controlId","Label","placeholder","isInvalid","touched","error","render","msg","Feedback","loginFormValidationSchema","yup","email","required","password","min","signupFormValidationSchema","confirmPassword","profileFormValidationSchema","eventFormValidationSchema","redirectUrl","userFormValidationSchema","productFormValidationSchema","price","typeError","brand","category","countInStock","description","reviewFormValidationSchema","rating","addressFormValidationSchema","address","city","postalCode","country","FormContainer","children","xs","md","Spinner","React","forwardRef","_ref","ref","bsPrefix","variant","size","_ref$as","Component","_objectWithoutPropertiesLoose","bsSpinnerPrefix","useBootstrapPrefix","createElement","_extends","classNames","displayName","fetchProduct","id","cancelToken","dispatch","a","FETCH_PRODUCT_REQUEST","axios","get","data","FETCH_PRODUCT_SUCCESS","payload","isCancel","FETCH_PRODUCT_CANCELLED","FETCH_PRODUCT_FAIL","response","message","updateProduct","formValues","UPDATE_PRODUCT_REQUEST","releaseDate","image","isPreOrder","formData","FormData","append","put","history","push","UPDATE_PRODUCT_SUCCESS","UPDATE_PRODUCT_FAIL","ImageInput","src","helpers","previewImage","useRef","rounded","fluid","File","custom","onChange","e","file","target","files","reader","FileReader","setValue","onload","current","result","readAsDataURL","initialValues","Date","toISOString","split","brandOptions","categoryOptions","ProductEdit","match","useState","productFormValues","setProductFormValues","useDispatch","productId","params","useSelector","state","product","loading","useEffect","source","CancelToken","_id","token","cancel","to","validationSchema","onSubmit","enableReinitialize","isSubmitting"],"mappings":"mGAAA,6BAkBeA,IAfA,SAAC,GAA2C,IAAD,IAAxCC,aAAwC,MAAhC,QAAgC,MAAvBC,cAAuB,MAAd,QAAc,EACxD,OACE,kBAAC,IAAD,CACEC,UAAU,SACVC,KAAK,SACLC,MAAO,CACLJ,QACAC,UAEFI,UAAU,kBACV,0BAAMA,UAAU,WAAhB,iB,wFCPAC,EAAiB,SAACC,GAAD,OAAW,kBAAC,IAAKC,QAAYD,IAE9CE,EAAoB,SAACF,GAAD,OACxB,kBAAC,IAAKC,QAAN,eAAcE,GAAG,WAAWC,IAAI,KAAQJ,KAGpCK,EAAkB,SAACL,GACvB,OACE,kBAAC,IAAKC,QAAN,eAAcE,GAAG,UAAaH,GAC3BA,EAAMM,QAAQC,KAAI,SAACC,GAAD,OACjB,4BAAQC,IAAKD,EAAOE,MAAOC,MAAOH,EAAOG,OACtCH,EAAOE,YAOZE,EAAgB,SAACZ,GAAD,OAAW,kBAAC,IAAKC,QAAN,eAAcY,KAAK,QAAWb,KAEzDc,EAAoB,SAACd,GAAD,OAAW,kBAAC,IAAKe,MAAUf,IAE/CgB,EAAiB,SAAChB,GAAD,OAAW,kBAAC,IAAKe,MAAUf,IAmEnCiB,IAjED,SAAC,GAAqD,IAAnDC,EAAkD,EAAlDA,KAAML,EAA4C,EAA5CA,KAAMM,EAAsC,EAAtCA,MAAOC,EAA+B,EAA/BA,SAAUd,EAAqB,EAArBA,QAASK,EAAY,EAAZA,MAAY,EAChDU,YAASH,GAAjBI,EADwD,oBAG3DC,EAAc,SAACV,GACnB,OAAQA,GACN,IAAK,SACH,OAAOR,EAET,IAAK,WACH,OAAOH,EAET,IAAK,OACH,OAAOU,EAET,IAAK,WACH,OAAOE,EAET,IAAK,QACH,OAAOE,EAET,QACE,OAAOjB,IAIb,OACE,kBAAC,IAAKyB,MAAN,CAAYC,UAAWN,GACX,aAATN,GAAgC,UAATA,EACtB,kBAAC,IAAD,CACEK,KAAMA,EACNL,KAAMA,EACNM,MAAOA,EACPR,MAAOA,EACPR,GAAIoB,EAAYV,KAGlB,oCACE,kBAAC,IAAKa,MAAN,KAAaP,GACb,kBAAC,IAAD,CACED,KAAMA,EACNL,KAAMA,EACNc,YAAW,gBAAWR,GACtBS,UAAWN,EAAKO,SAAWP,EAAKQ,MAChCV,SAAUA,EACVd,QAASA,EACTH,GAAIoB,EAAYV,KAElB,kBAAC,IAAD,CACEK,KAAMA,EACNa,OAAQ,SAACC,GAAD,OACN,kBAAC,IAAYC,SAAb,CAAsBpB,KAAK,WAAWmB,U,iCChFpD,6RAEaE,EAA4BC,IAAW,CAClDC,MAAOD,MAEJC,MAAM,wBACNC,SAAS,qBACZC,SAAUH,MAEPE,SAAS,wBACTE,IAAI,EAAG,oCAGCC,EAA6BL,IAAW,CACnDjB,KAAMiB,MAAaE,SAAS,oBAC5BD,MAAOD,MAEJC,MAAM,wBACNC,SAAS,qBACZC,SAAUH,MAEPE,SAAS,wBACTE,IAAI,EAAG,kCACVE,gBAAiBN,MAEdE,SAAS,gCACTE,IAAI,EAAG,oCAGCG,EAA8BP,IAAW,CACpDjB,KAAMiB,MAAaE,SAAS,oBAC5BC,SAAUH,MAAaI,IAAI,EAAG,kCAC9BE,gBAAiBN,MAAaI,IAAI,EAAG,oCAG1BI,EAA4BR,IAAW,CAClDS,YAAaT,MAAaE,SAAS,8BAGxBQ,EAA2BV,IAAW,CACjDjB,KAAMiB,MAAaE,SAAS,oBAC5BD,MAAOD,MAEJE,SAAS,qBACTD,MAAM,0BAGEU,EAA8BX,IAAW,CACpDjB,KAAMiB,MAAaE,SAAS,oBAC5BU,MAAOZ,MAEJa,UAAU,oBACVX,SAAS,qBACZY,MAAOd,MAAaE,SAAS,qBAC7Ba,SAAUf,MAAaE,SAAS,wBAChCc,aAAchB,MAEXa,UAAU,oBACVX,SAAS,4BACZe,YAAajB,MAAaE,SAAS,6BAGxBgB,EAA6BlB,IAAW,CACnDmB,OAAQnB,MAAaE,SAAS,wBAGnBkB,EAA8BpB,IAAW,CACpDqB,QAASrB,MAAaE,SAAS,uBAC/BoB,KAAMtB,MAAaE,SAAS,oBAC5BqB,WAAYvB,MACZwB,QAASxB,MAAaE,SAAS,0B,iCCtEjC,8CAeeuB,IAZO,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACvB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAK/D,UAAU,6BACb,kBAAC,IAAD,CAAKgE,GAAI,GAAIC,GAAI,GACdF,O,iCCRX,yDAKIG,EAAUC,IAAMC,YAAW,SAAUC,EAAMC,GAC7C,IAAIC,EAAWF,EAAKE,SAChBC,EAAUH,EAAKG,QACf3E,EAAYwE,EAAKxE,UACjB4E,EAAOJ,EAAKI,KACZV,EAAWM,EAAKN,SAChBW,EAAUL,EAAKhE,GACfsE,OAAwB,IAAZD,EAAqB,MAAQA,EACzC1E,EAAYqE,EAAKrE,UACjBE,EAAQ0E,YAA8BP,EAAM,CAAC,WAAY,UAAW,YAAa,OAAQ,WAAY,KAAM,cAG3GQ,GADJN,EAAWO,YAAmBP,EAAU,YACP,IAAM1E,EACvC,OAAoBsE,IAAMY,cAAcJ,EAAWK,YAAS,CAC1DV,IAAKA,GACJpE,EAAO,CACRF,UAAWiF,IAAWjF,EAAW6E,EAAiBJ,GAAQI,EAAkB,IAAMJ,EAAMD,GAAW,QAAUA,KAC3GT,MAENG,EAAQgB,YAAc,UACPhB,O,yJCbFiB,EAAe,SAACC,EAAIC,GAAL,8CAAqB,WAAOC,GAAP,iBAAAC,EAAA,6DAC/CD,EAAS,CAAEvE,KAAMyE,MAD8B,kBAItBC,IAAMC,IAAN,wBAA2BN,GAAM,CAAEC,gBAJb,gBAIrCM,EAJqC,EAIrCA,KAERL,EAAS,CAAEvE,KAAM6E,IAAuBC,QAASF,IANJ,gDAQzCF,IAAMK,SAAN,MACFR,EAAS,CAAEvE,KAAMgF,MAEjBT,EAAS,CACPvE,KAAMiF,IACNH,QACE,KAAMI,UAAY,KAAMA,SAASN,KAAKO,QAClC,KAAMD,SAASN,KAAKO,QACpB,KAAMA,UAhB6B,yDAArB,uDAsBfC,EAAgB,SAACf,EAAIgB,GAAL,8CAAoB,WAAOd,GAAP,qCAAAC,EAAA,6DAC/CD,EAAS,CAAEvE,KAAMsF,MAD8B,SAK3CjF,EASEgF,EATFhF,KACA6B,EAQEmD,EARFnD,MACAK,EAOE8C,EAPF9C,YACAH,EAMEiD,EANFjD,MACAC,EAKEgD,EALFhD,SACAC,EAIE+C,EAJF/C,aACAiD,EAGEF,EAHFE,YACAC,EAEEH,EAFFG,MACAC,EACEJ,EADFI,YAGIC,EAAW,IAAIC,UAEZC,OAAO,OAAQvF,GACxBqF,EAASE,OAAO,QAAS1D,GACzBwD,EAASE,OAAO,cAAerD,GAC/BmD,EAASE,OAAO,QAASxD,GACzBsD,EAASE,OAAO,WAAYvD,GAC5BqD,EAASE,OAAO,eAAgBtD,GAChCoD,EAASE,OAAO,cAAeL,GAC/BG,EAASE,OAAO,aAAcH,GAC1BD,GACFE,EAASE,OAAO,aAAcJ,GA3Ba,UA8BtBd,IAAMmB,IAAN,wBAA2BxB,GAAMqB,GA9BX,iBA8BrCd,EA9BqC,EA8BrCA,KAERkB,IAAQC,KAAK,sBAEbxB,EAAS,CAAEvE,KAAMgG,IAAwBlB,QAASF,IAlCL,kDAoC7CL,EAAS,CACPvE,KAAMiG,IACNnB,QACE,KAAMI,UAAY,KAAMA,SAASN,KAAKO,QAClC,KAAMD,SAASN,KAAKO,QACpB,KAAMD,WAzC+B,0DAApB,wD,wFCadgB,IAzCI,SAAC,GAA0B,IAAxB5F,EAAuB,EAAvBA,MAAOD,EAAgB,EAAhBA,KAAM8F,EAAU,EAAVA,IAAU,EACrB3F,YAASH,GAApB+F,EADgC,oBAGrCC,EAAeC,mBAiBrB,OACE,kBAAC,IAAK3F,MAAN,CAAYC,UAAWP,GACrB,kBAAC,IAAKQ,MAAN,KACE,6BAAMP,GACN,kBAAC,IAAD,CAAOiD,IAAK8C,EAAcF,IAAKA,EAAKI,SAAO,EAACC,OAAK,KAEnD,kBAAC,IAAKC,KAAN,CACEpC,GAAG,aACH/D,MAAM,cACNoG,QAAM,EACNC,SAzBe,SAACC,GACpB,IAAMC,EAAOD,EAAEE,OAAOC,MAAM,GAEtBC,EAAS,IAAIC,WAEnBb,EAAQc,SAASL,GAEbA,IACFG,EAAOG,OAAS,SAAUP,GACxBP,EAAae,QAAQjB,IAAMS,EAAEE,OAAOO,QAEtCL,EAAOM,cAAcT,U,mLCNrBU,EAAgB,CACpBlH,KAAM,GACN6B,MAAO,GACPE,MAAO,GACPC,SAAU,GACVC,aAAc,GACdC,YAAa,GACbgD,aAAa,IAAIiC,MAAOC,cAAcC,MAAM,KAAK,IAG7CC,EAAe,CACnB,CAAE9H,MAAO,GAAIC,MAAO,IACpB,CAAED,MAAO,OAAQC,MAAO,QACxB,CAAED,MAAO,WAAYC,MAAO,YAC5B,CAAED,MAAO,SAAUC,MAAO,WAGtB8H,EAAkB,CACtB,CAAE/H,MAAO,GAAIC,MAAO,IACpB,CAAED,MAAO,cAAeC,MAAO,eAC/B,CAAED,MAAO,cAAeC,MAAO,eAC/B,CAAED,MAAO,iBAAkBC,MAAO,kBAClC,CAAED,MAAO,YAAaC,MAAO,aAC7B,CAAED,MAAO,YAAaC,MAAO,aAC7B,CAAED,MAAO,eAAgBC,MAAO,gBAChC,CAAED,MAAO,SAAUC,MAAO,WAyHb+H,UAtHK,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAAY,EACiBC,mBAAS,MAD1B,mBAC1BC,EAD0B,KACPC,EADO,KAG3B1D,EAAW2D,cACXC,EAAYL,EAAMM,OAAO/D,GAJE,EAMSgE,aACxC,SAACC,GAAD,OAAWA,EAAMC,WADXC,EANyB,EAMzBA,QAAeD,EANU,EAMhB3D,KAAe3D,EANC,EAMDA,MAIhCwH,qBAAU,WACR,IAAMC,EAAShE,IAAMiE,YAAYD,SAWjC,OATKH,GAAWJ,IAAcI,EAAQK,IAGpCX,EAAqB,2BAChBM,GADe,IAElBhD,YAAa,IAAIiC,KAAKe,EAAQhD,aAAakC,cAAcC,MAAM,KAAK,MAJtEnD,EAASH,YAAa+D,EAAWO,EAAOG,QAQnC,WACLH,EAAOI,YAER,CAACP,EAASJ,EAAW5D,EAAU0D,IAalC,OACE,oCACE,kBAAC,OAAD,CAAMc,GAAG,qBAAqB9J,UAAU,sBAAxC,WAGA,kBAAC,IAAD,KACGuJ,EACC,kBAAC,IAAD,MAEA,oCACE,4CACCvH,GAAS,kBAAC,IAAD,CAASwC,QAAQ,UAAUxC,GACpCsH,GACC,kBAAC,IAAD,CACEhB,cAAeS,GAAqBT,EACpCyB,iBAAkB/G,IAClBgH,SA3BQ,SAACjB,GAAuB,IACpCzC,EAAgByC,EAAhBzC,YAERhB,EACEa,YAAc+C,EAAD,YAAC,eACTH,GADQ,IAEXzC,YAAa,IAAIiC,KAAKjC,QAsBd2D,oBAAkB,IACjB,YAAuB,IAApBC,EAAmB,EAAnBA,aACF,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO7I,MAAM,OAAOD,KAAK,OAAOL,KAAK,SACrC,kBAAC,IAAD,CAAOM,MAAM,QAAQD,KAAK,QAAQL,KAAK,SACvC,kBAAC,IAAD,CACEM,MAAM,QACND,KAAK,QACL8F,IAAG,wBAAmBgC,EAAnB,YAEL,kBAAC,IAAD,CACE7H,MAAM,QACND,KAAK,QACLL,KAAK,SACLP,QAASkI,IAEX,kBAAC,IAAD,CACErH,MAAM,WACND,KAAK,WACLL,KAAK,SACLP,QAASmI,IAEX,kBAAC,IAAD,CACEtH,MAAM,iBACND,KAAK,eACLL,KAAK,SAEP,kBAAC,IAAD,CACEM,MAAM,cACND,KAAK,cACLL,KAAK,aAEP,kBAAC,IAAD,CACEM,MAAM,eACND,KAAK,cACLL,KAAK,SAEP,kBAAC,IAAD,CACEM,MAAM,eACND,KAAK,aACLL,KAAK,aAGP,kBAAC,IAAD,CACEA,KAAK,SACLyD,QAAQ,UACRxE,UAAU,kBACVsB,SAAU4I,GAJZ","file":"static/js/ProductEdit.d59a1477.chunk.js","sourcesContent":["import React from 'react';\nimport { Spinner } from 'react-bootstrap';\n\nconst Loader = ({ width = '100px', height = '100px' }) => {\n  return (\n    <Spinner\n      animation='border'\n      role='status'\n      style={{\n        width,\n        height,\n      }}\n      className='d-block m-auto'>\n      <span className='sr-only'>Loading...</span>\n    </Spinner>\n  );\n};\n\nexport default Loader;\n","import React from 'react';\nimport { useField, Field, ErrorMessage } from 'formik';\nimport PropTypes from 'prop-types';\n\nimport { Form, FormControl } from 'react-bootstrap';\n\nconst BootstrapInput = (props) => <Form.Control {...props} />;\n\nconst BootstrapTextArea = (props) => (\n  <Form.Control as='textarea' row='5' {...props} />\n);\n\nconst BootstrapSelect = (props) => {\n  return (\n    <Form.Control as='select' {...props}>\n      {props.options.map((option) => (\n        <option key={option.title} value={option.value}>\n          {option.title}\n        </option>\n      ))}\n    </Form.Control>\n  );\n};\n\nconst BootstrapDate = (props) => <Form.Control type='date' {...props} />;\n\nconst BootstrapCheckbox = (props) => <Form.Check {...props} />;\n\nconst BootstrapRadio = (props) => <Form.Check {...props} />;\n\nconst Input = ({ name, type, label, disabled, options, value }) => {\n  const [, meta] = useField(name);\n\n  const renderInput = (type) => {\n    switch (type) {\n      case 'select':\n        return BootstrapSelect;\n\n      case 'textarea':\n        return BootstrapTextArea;\n\n      case 'date':\n        return BootstrapDate;\n\n      case 'checkbox':\n        return BootstrapCheckbox;\n\n      case 'radio':\n        return BootstrapRadio;\n\n      default:\n        return BootstrapInput;\n    }\n  };\n\n  return (\n    <Form.Group controlId={label}>\n      {type === 'checkbox' || type === 'radio' ? (\n        <Field\n          name={name}\n          type={type}\n          label={label}\n          value={value}\n          as={renderInput(type)}\n        />\n      ) : (\n        <>\n          <Form.Label>{label}</Form.Label>\n          <Field\n            name={name}\n            type={type}\n            placeholder={`Enter ${label}`}\n            isInvalid={meta.touched && meta.error}\n            disabled={disabled}\n            options={options}\n            as={renderInput(type)}\n          />\n          <ErrorMessage\n            name={name}\n            render={(msg) => (\n              <FormControl.Feedback type='invalid'>{msg}</FormControl.Feedback>\n            )}\n          />\n        </>\n      )}\n    </Form.Group>\n  );\n};\n\nInput.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n};\n\nexport default Input;\n","import * as yup from 'yup';\n\nexport const loginFormValidationSchema = yup.object({\n  email: yup\n    .string()\n    .email('Invalid email format')\n    .required('Email is required'),\n  password: yup\n    .string()\n    .required('Password is required')\n    .min(6, 'Required at least 6 characters'),\n});\n\nexport const signupFormValidationSchema = yup.object({\n  name: yup.string().required('Name is required'),\n  email: yup\n    .string()\n    .email('Invalid email format')\n    .required('Email is required'),\n  password: yup\n    .string()\n    .required('Password is required')\n    .min(6, 'Required at least 6 characters'),\n  confirmPassword: yup\n    .string()\n    .required('Confirm password is required')\n    .min(6, 'Required at least 6 characters'),\n});\n\nexport const profileFormValidationSchema = yup.object({\n  name: yup.string().required('Name is required'),\n  password: yup.string().min(6, 'Required at least 6 characters'),\n  confirmPassword: yup.string().min(6, 'Required at least 6 characters'),\n});\n\nexport const eventFormValidationSchema = yup.object({\n  redirectUrl: yup.string().required('Redirect url is required'),\n});\n\nexport const userFormValidationSchema = yup.object({\n  name: yup.string().required('Name is required'),\n  email: yup\n    .string()\n    .required('Email is required')\n    .email('Invalid email format'),\n});\n\nexport const productFormValidationSchema = yup.object({\n  name: yup.string().required('Name is required'),\n  price: yup\n    .number()\n    .typeError('Must be a number')\n    .required('Price is required'),\n  brand: yup.string().required('Brand is required'),\n  category: yup.string().required('Category is required'),\n  countInStock: yup\n    .number()\n    .typeError('Must be a number')\n    .required('CountInStock is required'),\n  description: yup.string().required('Description is required'),\n});\n\nexport const reviewFormValidationSchema = yup.object({\n  rating: yup.string().required('Rating is required'),\n});\n\nexport const addressFormValidationSchema = yup.object({\n  address: yup.string().required('Address is required'),\n  city: yup.string().required('City is required'),\n  postalCode: yup.number(),\n  country: yup.string().required('Country is required'),\n});\n","import React from 'react';\nimport { Col, Container, Row } from 'react-bootstrap';\n\nconst FormContainer = ({ children }) => {\n  return (\n    <Container>\n      <Row className=\"justify-content-md-center\">\n        <Col xs={12} md={6}>\n          {children}\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default FormContainer;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar Spinner = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      variant = _ref.variant,\n      animation = _ref.animation,\n      size = _ref.size,\n      children = _ref.children,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"variant\", \"animation\", \"size\", \"children\", \"as\", \"className\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'spinner');\n  var bsSpinnerPrefix = bsPrefix + \"-\" + animation;\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, bsSpinnerPrefix, size && bsSpinnerPrefix + \"-\" + size, variant && \"text-\" + variant)\n  }), children);\n});\nSpinner.displayName = 'Spinner';\nexport default Spinner;","import axios from '../axios';\nimport history from '../history';\nimport {\n  FETCH_PRODUCT_REQUEST,\n  FETCH_PRODUCT_SUCCESS,\n  FETCH_PRODUCT_FAIL,\n  FETCH_PRODUCT_CANCELLED,\n  UPDATE_PRODUCT_REQUEST,\n  UPDATE_PRODUCT_SUCCESS,\n  UPDATE_PRODUCT_FAIL,\n} from '../types/product';\n\nexport const fetchProduct = (id, cancelToken) => async (dispatch) => {\n  dispatch({ type: FETCH_PRODUCT_REQUEST });\n\n  try {\n    const { data } = await axios.get(`/api/products/${id}`, { cancelToken });\n\n    dispatch({ type: FETCH_PRODUCT_SUCCESS, payload: data });\n  } catch (error) {\n    if (axios.isCancel(error)) {\n      dispatch({ type: FETCH_PRODUCT_CANCELLED });\n    } else {\n      dispatch({\n        type: FETCH_PRODUCT_FAIL,\n        payload:\n          error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n      });\n    }\n  }\n};\n\nexport const updateProduct = (id, formValues) => async (dispatch) => {\n  dispatch({ type: UPDATE_PRODUCT_REQUEST });\n\n  try {\n    const {\n      name,\n      price,\n      description,\n      brand,\n      category,\n      countInStock,\n      releaseDate,\n      image,\n      isPreOrder,\n    } = formValues;\n\n    const formData = new FormData();\n\n    formData.append('name', name);\n    formData.append('price', price);\n    formData.append('description', description);\n    formData.append('brand', brand);\n    formData.append('category', category);\n    formData.append('countInStock', countInStock);\n    formData.append('releaseDate', releaseDate);\n    formData.append('isPreOrder', isPreOrder);\n    if (image) {\n      formData.append('productImg', image);\n    }\n\n    const { data } = await axios.put(`/api/products/${id}`, formData);\n\n    history.push('/admin/productList');\n\n    dispatch({ type: UPDATE_PRODUCT_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      type: UPDATE_PRODUCT_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.response,\n    });\n  }\n};\n","import React, { useRef } from 'react';\nimport { Form, Image } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\n\nimport { useField } from 'formik';\n\nconst ImageInput = ({ label, name, src }) => {\n  const [, , helpers] = useField(name);\n\n  const previewImage = useRef();\n\n  const onSelectFile = (e) => {\n    const file = e.target.files[0];\n\n    const reader = new FileReader();\n\n    helpers.setValue(file);\n\n    if (file) {\n      reader.onload = function (e) {\n        previewImage.current.src = e.target.result;\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n  return (\n    <Form.Group controlId={name}>\n      <Form.Label>\n        <div>{label}</div>\n        <Image ref={previewImage} src={src} rounded fluid />\n      </Form.Label>\n      <Form.File\n        id='image-file'\n        label='Choose file'\n        custom\n        onChange={onSelectFile}\n      />\n    </Form.Group>\n  );\n};\n\nImageInput.propTypes = {\n  name: PropTypes.string.isRequired,\n  src: PropTypes.string.isRequired,\n};\n\nexport default ImageInput;\n","import React, { useState, useEffect } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Formik, Form } from 'formik';\n\nimport axios from '../axios';\nimport { productFormValidationSchema } from '../validations';\nimport { fetchProduct, updateProduct } from '../actions/product';\n\nimport FormContainer from '../components/FormContainer';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport Input from '../components/Input';\nimport ImageInput from '../components/ImageInput';\n\nconst initialValues = {\n  name: '',\n  price: '',\n  brand: '',\n  category: '',\n  countInStock: '',\n  description: '',\n  releaseDate: new Date().toISOString().split('T')[0],\n};\n\nconst brandOptions = [\n  { title: '', value: '' },\n  { title: 'Sony', value: 'sony' },\n  { title: 'Nintendo', value: 'nintendo' },\n  { title: 'Others', value: 'others' },\n];\n\nconst categoryOptions = [\n  { title: '', value: '' },\n  { title: 'PS4 console', value: 'ps4 console' },\n  { title: 'PS5 console', value: 'ps5 console' },\n  { title: 'Switch console', value: 'switch console' },\n  { title: 'PS4 games', value: 'ps4 games' },\n  { title: 'PS5 games', value: 'ps5 games' },\n  { title: 'Switch games', value: 'switch games' },\n  { title: 'Others', value: 'others' },\n];\n\nconst ProductEdit = ({ match }) => {\n  const [productFormValues, setProductFormValues] = useState(null);\n\n  const dispatch = useDispatch();\n  const productId = match.params.id;\n\n  const { loading, data: product, error } = useSelector(\n    (state) => state.product\n  );\n\n  useEffect(() => {\n    const source = axios.CancelToken.source();\n\n    if (!product || productId !== product._id) {\n      dispatch(fetchProduct(productId, source.token));\n    } else {\n      setProductFormValues({\n        ...product,\n        releaseDate: new Date(product.releaseDate).toISOString().split('T')[0],\n      });\n    }\n\n    return () => {\n      source.cancel();\n    };\n  }, [product, productId, dispatch, setProductFormValues]);\n\n  const onSubmitClick = (productFormValues) => {\n    const { releaseDate } = productFormValues;\n\n    dispatch(\n      updateProduct(productId, {\n        ...productFormValues,\n        releaseDate: new Date(releaseDate),\n      })\n    );\n  };\n\n  return (\n    <>\n      <Link to='/admin/productList' className='btn btn-light my-3'>\n        Go back\n      </Link>\n      <FormContainer>\n        {loading ? (\n          <Loader />\n        ) : (\n          <>\n            <h1>Edit Product</h1>\n            {error && <Message variant='danger'>{error}</Message>}\n            {product && (\n              <Formik\n                initialValues={productFormValues || initialValues}\n                validationSchema={productFormValidationSchema}\n                onSubmit={onSubmitClick}\n                enableReinitialize>\n                {({ isSubmitting }) => {\n                  return (\n                    <Form>\n                      <Input label='Name' name='name' type='text' />\n                      <Input label='Price' name='price' type='text' />\n                      <ImageInput\n                        label='Image'\n                        name='image'\n                        src={`/api/products/${productId}/image`}\n                      />\n                      <Input\n                        label='Brand'\n                        name='brand'\n                        type='select'\n                        options={brandOptions}\n                      />\n                      <Input\n                        label='Category'\n                        name='category'\n                        type='select'\n                        options={categoryOptions}\n                      />\n                      <Input\n                        label='Count in stock'\n                        name='countInStock'\n                        type='text'\n                      />\n                      <Input\n                        label='Description'\n                        name='description'\n                        type='textarea'\n                      />\n                      <Input\n                        label='Release date'\n                        name='releaseDate'\n                        type='date'\n                      />\n                      <Input\n                        label='Is Pre-order'\n                        name='isPreOrder'\n                        type='checkbox'\n                      />\n\n                      <Button\n                        type='submit'\n                        variant='primary'\n                        className='d-block ml-auto'\n                        disabled={isSubmitting}>\n                        Update\n                      </Button>\n                    </Form>\n                  );\n                }}\n              </Formik>\n            )}\n          </>\n        )}\n      </FormContainer>\n    </>\n  );\n};\n\nexport default ProductEdit;\n"],"sourceRoot":""}