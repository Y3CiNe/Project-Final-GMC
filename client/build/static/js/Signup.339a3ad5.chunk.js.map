{"version":3,"sources":["components/Loader.js","components/Input.js","validations/index.js","components/FormContainer.js","../../../../node_modules/react-bootstrap/esm/Spinner.js","components/ProfileForm.js","views/Signup.js"],"names":["Loader","width","height","animation","role","style","className","BootstrapInput","props","Control","BootstrapTextArea","as","row","BootstrapSelect","options","map","option","key","title","value","BootstrapDate","type","BootstrapCheckbox","Check","BootstrapRadio","Input","name","label","disabled","useField","meta","renderInput","Group","controlId","Label","placeholder","isInvalid","touched","error","render","msg","Feedback","loginFormValidationSchema","yup","email","required","password","min","signupFormValidationSchema","confirmPassword","profileFormValidationSchema","eventFormValidationSchema","redirectUrl","userFormValidationSchema","productFormValidationSchema","price","typeError","brand","category","countInStock","description","reviewFormValidationSchema","rating","addressFormValidationSchema","address","city","postalCode","country","FormContainer","children","xs","md","Spinner","React","forwardRef","_ref","ref","bsPrefix","variant","size","_ref$as","Component","_objectWithoutPropertiesLoose","bsSpinnerPrefix","useBootstrapPrefix","createElement","_extends","classNames","displayName","initialValues","validate","errors","ProfileForm","user","onSubmitClick","useState","savedFormValues","setSavedFormValues","formikRef","useRef","useEffect","current","setSubmitting","innerRef","validationSchema","onSubmit","enableReinitialize","values","isSubmitting","Signup","history","location","dispatch","useDispatch","useSelector","state","auth","loading","data","redirect","search","split","push","userInfo","signup","to"],"mappings":"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","file":"static/js/Signup.339a3ad5.chunk.js","sourcesContent":["import React from 'react';\nimport { Spinner } from 'react-bootstrap';\n\nconst Loader = ({ width = '100px', height = '100px' }) => {\n  return (\n    <Spinner\n      animation='border'\n      role='status'\n      style={{\n        width,\n        height,\n      }}\n      className='d-block m-auto'>\n      <span className='sr-only'>Loading...</span>\n    </Spinner>\n  );\n};\n\nexport default Loader;\n","import React from 'react';\nimport { useField, Field, ErrorMessage } from 'formik';\nimport PropTypes from 'prop-types';\n\nimport { Form, FormControl } from 'react-bootstrap';\n\nconst BootstrapInput = (props) => <Form.Control {...props} />;\n\nconst BootstrapTextArea = (props) => (\n  <Form.Control as='textarea' row='5' {...props} />\n);\n\nconst BootstrapSelect = (props) => {\n  return (\n    <Form.Control as='select' {...props}>\n      {props.options.map((option) => (\n        <option key={option.title} value={option.value}>\n          {option.title}\n        </option>\n      ))}\n    </Form.Control>\n  );\n};\n\nconst BootstrapDate = (props) => <Form.Control type='date' {...props} />;\n\nconst BootstrapCheckbox = (props) => <Form.Check {...props} />;\n\nconst BootstrapRadio = (props) => <Form.Check {...props} />;\n\nconst Input = ({ name, type, label, disabled, options, value }) => {\n  const [, meta] = useField(name);\n\n  const renderInput = (type) => {\n    switch (type) {\n      case 'select':\n        return BootstrapSelect;\n\n      case 'textarea':\n        return BootstrapTextArea;\n\n      case 'date':\n        return BootstrapDate;\n\n      case 'checkbox':\n        return BootstrapCheckbox;\n\n      case 'radio':\n        return BootstrapRadio;\n\n      default:\n        return BootstrapInput;\n    }\n  };\n\n  return (\n    <Form.Group controlId={label}>\n      {type === 'checkbox' || type === 'radio' ? (\n        <Field\n          name={name}\n          type={type}\n          label={label}\n          value={value}\n          as={renderInput(type)}\n        />\n      ) : (\n        <>\n          <Form.Label>{label}</Form.Label>\n          <Field\n            name={name}\n            type={type}\n            placeholder={`Enter ${label}`}\n            isInvalid={meta.touched && meta.error}\n            disabled={disabled}\n            options={options}\n            as={renderInput(type)}\n          />\n          <ErrorMessage\n            name={name}\n            render={(msg) => (\n              <FormControl.Feedback type='invalid'>{msg}</FormControl.Feedback>\n            )}\n          />\n        </>\n      )}\n    </Form.Group>\n  );\n};\n\nInput.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n};\n\nexport default Input;\n","import * as yup from 'yup';\n\nexport const loginFormValidationSchema = yup.object({\n  email: yup\n    .string()\n    .email('Invalid email format')\n    .required('Email is required'),\n  password: yup\n    .string()\n    .required('Password is required')\n    .min(6, 'Required at least 6 characters'),\n});\n\nexport const signupFormValidationSchema = yup.object({\n  name: yup.string().required('Name is required'),\n  email: yup\n    .string()\n    .email('Invalid email format')\n    .required('Email is required'),\n  password: yup\n    .string()\n    .required('Password is required')\n    .min(6, 'Required at least 6 characters'),\n  confirmPassword: yup\n    .string()\n    .required('Confirm password is required')\n    .min(6, 'Required at least 6 characters'),\n});\n\nexport const profileFormValidationSchema = yup.object({\n  name: yup.string().required('Name is required'),\n  password: yup.string().min(6, 'Required at least 6 characters'),\n  confirmPassword: yup.string().min(6, 'Required at least 6 characters'),\n});\n\nexport const eventFormValidationSchema = yup.object({\n  redirectUrl: yup.string().required('Redirect url is required'),\n});\n\nexport const userFormValidationSchema = yup.object({\n  name: yup.string().required('Name is required'),\n  email: yup\n    .string()\n    .required('Email is required')\n    .email('Invalid email format'),\n});\n\nexport const productFormValidationSchema = yup.object({\n  name: yup.string().required('Name is required'),\n  price: yup\n    .number()\n    .typeError('Must be a number')\n    .required('Price is required'),\n  brand: yup.string().required('Brand is required'),\n  category: yup.string().required('Category is required'),\n  countInStock: yup\n    .number()\n    .typeError('Must be a number')\n    .required('CountInStock is required'),\n  description: yup.string().required('Description is required'),\n});\n\nexport const reviewFormValidationSchema = yup.object({\n  rating: yup.string().required('Rating is required'),\n});\n\nexport const addressFormValidationSchema = yup.object({\n  address: yup.string().required('Address is required'),\n  city: yup.string().required('City is required'),\n  postalCode: yup.number(),\n  country: yup.string().required('Country is required'),\n});\n","import React from 'react';\nimport { Col, Container, Row } from 'react-bootstrap';\n\nconst FormContainer = ({ children }) => {\n  return (\n    <Container>\n      <Row className=\"justify-content-md-center\">\n        <Col xs={12} md={6}>\n          {children}\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default FormContainer;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar Spinner = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      variant = _ref.variant,\n      animation = _ref.animation,\n      size = _ref.size,\n      children = _ref.children,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"variant\", \"animation\", \"size\", \"children\", \"as\", \"className\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'spinner');\n  var bsSpinnerPrefix = bsPrefix + \"-\" + animation;\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, bsSpinnerPrefix, size && bsSpinnerPrefix + \"-\" + size, variant && \"text-\" + variant)\n  }), children);\n});\nSpinner.displayName = 'Spinner';\nexport default Spinner;","import React, { useState, useEffect, useRef } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { Formik, Form } from 'formik';\nimport PropTypes from 'prop-types';\n\nimport {\n  signupFormValidationSchema,\n  profileFormValidationSchema,\n} from '../validations';\nimport Input from '../components/Input';\n\nconst initialValues = {\n  name: '',\n  email: '',\n  password: '',\n  confirmPassword: '',\n};\n\nconst validate = ({ password, confirmPassword }) => {\n  let errors = {};\n  if (password !== confirmPassword) {\n    errors.confirmPassword = 'Password not matched';\n  }\n  return errors;\n};\n\nconst ProfileForm = ({ user, onSubmitClick, error }) => {\n  const [savedFormValues, setSavedFormValues] = useState(null);\n  const formikRef = useRef();\n\n  useEffect(() => {\n    if (user) {\n      setSavedFormValues({ ...user, password: '', confirmPassword: '' });\n    }\n  }, [user, setSavedFormValues]);\n\n  const onSubmit = ({ name, email, password }) => {\n    onSubmitClick(name, email, password);\n  };\n\n  // while error occurred (such as user existed), reset the status of button\n  useEffect(() => {\n    if (error) {\n      formikRef.current.setSubmitting(false);\n    }\n  }, [error]);\n\n  return (\n    <Formik\n      innerRef={formikRef}\n      initialValues={savedFormValues || initialValues}\n      validationSchema={\n        user ? profileFormValidationSchema : signupFormValidationSchema\n      }\n      validate={validate}\n      onSubmit={onSubmit}\n      enableReinitialize>\n      {({ values, isSubmitting }) => (\n        <Form>\n          <Input label='Name' name='name' type='text' />\n          <Input\n            label='Email'\n            name='email'\n            type='email'\n            disabled={user && values.email}\n          />\n          <Input label='Password' name='password' type='password' />\n          <Input\n            label='Confirm Password'\n            name='confirmPassword'\n            type='password'\n          />\n          <Button\n            className='d-block ml-auto'\n            type='submit'\n            variant='primary'\n            disabled={isSubmitting}>\n            {user ? 'Update' : 'Sign Up'}\n          </Button>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nProfileForm.propTypes = {\n  user: PropTypes.object,\n  userInfo: PropTypes.object,\n  onSubmitClick: PropTypes.func.isRequired,\n};\n\nexport default ProfileForm;\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Row, Col } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nimport { signup } from '../actions/auth';\nimport FormContainer from '../components/FormContainer';\nimport ProfileForm from '../components/ProfileForm';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport Meta from '../components/Meta';\n\nconst Signup = ({ history, location }) => {\n  const dispatch = useDispatch();\n  const { loading, data: user, error } = useSelector((state) => state.auth);\n  const redirect = location.search ? location.search.split('=')[1] : '/';\n\n  useEffect(() => {\n    if (user) {\n      history.push(redirect);\n    }\n  }, [history, user, redirect]);\n\n  const onSignupClick = (name, email, password) => {\n    dispatch(signup(name, email, password));\n  };\n\n  return (\n    <>\n      <Meta title='Signup' />\n      <FormContainer>\n        <h1>Signup</h1>\n        {error ? <Message variant='danger'>{error}</Message> : null}\n        {loading && <Loader />}\n        <ProfileForm\n          userInfo={user}\n          onSubmitClick={onSignupClick}\n          error={error}\n        />\n        <Row className='py-3'>\n          <Col>\n            Have an Account?\n            <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>\n              Login\n            </Link>\n          </Col>\n        </Row>\n      </FormContainer>\n    </>\n  );\n};\n\nexport default Signup;\n"],"sourceRoot":""}