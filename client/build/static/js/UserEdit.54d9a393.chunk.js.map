{"version":3,"sources":["components/Loader.js","components/Input.js","validations/index.js","components/FormContainer.js","../../../../node_modules/react-bootstrap/esm/Spinner.js","views/UserEdit.js","actions/user.js"],"names":["Loader","width","height","animation","role","style","className","BootstrapInput","props","Control","BootstrapTextArea","as","row","BootstrapSelect","options","map","option","key","title","value","BootstrapDate","type","BootstrapCheckbox","Check","BootstrapRadio","Input","name","label","disabled","useField","meta","renderInput","Group","controlId","Label","placeholder","isInvalid","touched","error","render","msg","Feedback","loginFormValidationSchema","yup","email","required","password","min","signupFormValidationSchema","confirmPassword","profileFormValidationSchema","eventFormValidationSchema","redirectUrl","userFormValidationSchema","productFormValidationSchema","price","typeError","brand","category","countInStock","description","reviewFormValidationSchema","rating","addressFormValidationSchema","address","city","postalCode","country","FormContainer","children","xs","md","Spinner","React","forwardRef","_ref","ref","bsPrefix","variant","size","_ref$as","Component","_objectWithoutPropertiesLoose","bsSpinnerPrefix","useBootstrapPrefix","createElement","_extends","classNames","displayName","initialValues","isAdmin","UserEdit","match","useState","userFormValues","setUserFormValues","useSelector","state","user","loading","data","dispatch","useDispatch","userId","params","id","useEffect","cancelToken","source","axios","CancelToken","_id","token","getState","a","FETCH_USER_REQUEST","get","FETCH_USER_SUCCESS","payload","isCancel","FETCH_USER_CANCELLED","FETCH_USER_FAIL","response","message","cancel","to","Message","validationSchema","onSubmit","formValues","UPDATE_USER_REQUEST","put","history","push","UPDATE_USER_SUCCESS","UPDATE_USER_FAIL","enableReinitialize","isSubmitting","Button"],"mappings":"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","file":"static/js/UserEdit.54d9a393.chunk.js","sourcesContent":["import React from 'react';\nimport { Spinner } from 'react-bootstrap';\n\nconst Loader = ({ width = '100px', height = '100px' }) => {\n  return (\n    <Spinner\n      animation='border'\n      role='status'\n      style={{\n        width,\n        height,\n      }}\n      className='d-block m-auto'>\n      <span className='sr-only'>Loading...</span>\n    </Spinner>\n  );\n};\n\nexport default Loader;\n","import React from 'react';\nimport { useField, Field, ErrorMessage } from 'formik';\nimport PropTypes from 'prop-types';\n\nimport { Form, FormControl } from 'react-bootstrap';\n\nconst BootstrapInput = (props) => <Form.Control {...props} />;\n\nconst BootstrapTextArea = (props) => (\n  <Form.Control as='textarea' row='5' {...props} />\n);\n\nconst BootstrapSelect = (props) => {\n  return (\n    <Form.Control as='select' {...props}>\n      {props.options.map((option) => (\n        <option key={option.title} value={option.value}>\n          {option.title}\n        </option>\n      ))}\n    </Form.Control>\n  );\n};\n\nconst BootstrapDate = (props) => <Form.Control type='date' {...props} />;\n\nconst BootstrapCheckbox = (props) => <Form.Check {...props} />;\n\nconst BootstrapRadio = (props) => <Form.Check {...props} />;\n\nconst Input = ({ name, type, label, disabled, options, value }) => {\n  const [, meta] = useField(name);\n\n  const renderInput = (type) => {\n    switch (type) {\n      case 'select':\n        return BootstrapSelect;\n\n      case 'textarea':\n        return BootstrapTextArea;\n\n      case 'date':\n        return BootstrapDate;\n\n      case 'checkbox':\n        return BootstrapCheckbox;\n\n      case 'radio':\n        return BootstrapRadio;\n\n      default:\n        return BootstrapInput;\n    }\n  };\n\n  return (\n    <Form.Group controlId={label}>\n      {type === 'checkbox' || type === 'radio' ? (\n        <Field\n          name={name}\n          type={type}\n          label={label}\n          value={value}\n          as={renderInput(type)}\n        />\n      ) : (\n        <>\n          <Form.Label>{label}</Form.Label>\n          <Field\n            name={name}\n            type={type}\n            placeholder={`Enter ${label}`}\n            isInvalid={meta.touched && meta.error}\n            disabled={disabled}\n            options={options}\n            as={renderInput(type)}\n          />\n          <ErrorMessage\n            name={name}\n            render={(msg) => (\n              <FormControl.Feedback type='invalid'>{msg}</FormControl.Feedback>\n            )}\n          />\n        </>\n      )}\n    </Form.Group>\n  );\n};\n\nInput.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n};\n\nexport default Input;\n","import * as yup from 'yup';\n\nexport const loginFormValidationSchema = yup.object({\n  email: yup\n    .string()\n    .email('Invalid email format')\n    .required('Email is required'),\n  password: yup\n    .string()\n    .required('Password is required')\n    .min(6, 'Required at least 6 characters'),\n});\n\nexport const signupFormValidationSchema = yup.object({\n  name: yup.string().required('Name is required'),\n  email: yup\n    .string()\n    .email('Invalid email format')\n    .required('Email is required'),\n  password: yup\n    .string()\n    .required('Password is required')\n    .min(6, 'Required at least 6 characters'),\n  confirmPassword: yup\n    .string()\n    .required('Confirm password is required')\n    .min(6, 'Required at least 6 characters'),\n});\n\nexport const profileFormValidationSchema = yup.object({\n  name: yup.string().required('Name is required'),\n  password: yup.string().min(6, 'Required at least 6 characters'),\n  confirmPassword: yup.string().min(6, 'Required at least 6 characters'),\n});\n\nexport const eventFormValidationSchema = yup.object({\n  redirectUrl: yup.string().required('Redirect url is required'),\n});\n\nexport const userFormValidationSchema = yup.object({\n  name: yup.string().required('Name is required'),\n  email: yup\n    .string()\n    .required('Email is required')\n    .email('Invalid email format'),\n});\n\nexport const productFormValidationSchema = yup.object({\n  name: yup.string().required('Name is required'),\n  price: yup\n    .number()\n    .typeError('Must be a number')\n    .required('Price is required'),\n  brand: yup.string().required('Brand is required'),\n  category: yup.string().required('Category is required'),\n  countInStock: yup\n    .number()\n    .typeError('Must be a number')\n    .required('CountInStock is required'),\n  description: yup.string().required('Description is required'),\n});\n\nexport const reviewFormValidationSchema = yup.object({\n  rating: yup.string().required('Rating is required'),\n});\n\nexport const addressFormValidationSchema = yup.object({\n  address: yup.string().required('Address is required'),\n  city: yup.string().required('City is required'),\n  postalCode: yup.number(),\n  country: yup.string().required('Country is required'),\n});\n","import React from 'react';\nimport { Col, Container, Row } from 'react-bootstrap';\n\nconst FormContainer = ({ children }) => {\n  return (\n    <Container>\n      <Row className=\"justify-content-md-center\">\n        <Col xs={12} md={6}>\n          {children}\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default FormContainer;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar Spinner = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      variant = _ref.variant,\n      animation = _ref.animation,\n      size = _ref.size,\n      children = _ref.children,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"variant\", \"animation\", \"size\", \"children\", \"as\", \"className\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'spinner');\n  var bsSpinnerPrefix = bsPrefix + \"-\" + animation;\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, bsSpinnerPrefix, size && bsSpinnerPrefix + \"-\" + size, variant && \"text-\" + variant)\n  }), children);\n});\nSpinner.displayName = 'Spinner';\nexport default Spinner;","import React, { useEffect, useState } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Formik, Form } from 'formik';\n\nimport axios from '../axios';\nimport { fetchUser, updateUser } from '../actions/user';\nimport { userFormValidationSchema } from '../validations';\n\nimport FormContainer from '../components/FormContainer';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport Input from '../components/Input';\n\nconst initialValues = {\n  name: '',\n  email: '',\n  isAdmin: false,\n};\n\nconst UserEdit = ({ match }) => {\n  const [userFormValues, setUserFormValues] = useState(null);\n\n  const { loading, data: user, error } = useSelector((state) => state.user);\n  const dispatch = useDispatch();\n  const userId = match.params.id;\n\n  useEffect(() => {\n    const source = axios.CancelToken.source();\n\n    if (!user || userId !== user._id) {\n      dispatch(fetchUser(userId, source.token));\n    } else {\n      const { name, email, isAdmin } = user;\n\n      setUserFormValues({ name, email, isAdmin });\n    }\n\n    return () => {\n      source.cancel();\n    };\n  }, [dispatch, userId, user]);\n\n  const onSubmitClick = (userFormValues) => {\n    dispatch(updateUser(user._id, userFormValues));\n  };\n\n  return (\n    <>\n      <Link to='/admin/userList' className='btn btn-light my-3'>\n        Go back\n      </Link>\n      <FormContainer>\n        {loading ? (\n          <Loader />\n        ) : (\n          <>\n            <h1>Edit User</h1>\n            {error && <Message variant='danger'>{error}</Message>}\n            {user && (\n              <Formik\n                initialValues={userFormValues || initialValues}\n                validationSchema={userFormValidationSchema}\n                onSubmit={onSubmitClick}\n                enableReinitialize>\n                {({ isSubmitting }) => (\n                  <>\n                    <Form>\n                      <Input label='Name' name='name' type='text' />\n                      <Input label='Email' name='email' type='email' />\n                      <Input label='Is Admin' name='isAdmin' type='checkbox' />\n                      <Button\n                        className='d-block ml-auto'\n                        type='submit'\n                        variant='primary'\n                        disabled={isSubmitting}>\n                        Update\n                      </Button>\n                    </Form>\n                  </>\n                )}\n              </Formik>\n            )}\n          </>\n        )}\n      </FormContainer>\n    </>\n  );\n};\n\nexport default UserEdit;\n","import axios from '../axios';\nimport history from '../history';\nimport {\n  FETCH_USER_REQUEST,\n  FETCH_USER_SUCCESS,\n  FETCH_USER_FAIL,\n  FETCH_USER_CANCELLED,\n  UPDATE_USER_REQUEST,\n  UPDATE_USER_SUCCESS,\n  UPDATE_USER_FAIL,\n} from '../types/user';\n\nexport const fetchUser = (id, cancelToken) => async (dispatch, getState) => {\n  dispatch({ type: FETCH_USER_REQUEST });\n\n  try {\n    const { data } = await axios.get(`/api/users/${id}`, { cancelToken });\n\n    dispatch({ type: FETCH_USER_SUCCESS, payload: data });\n  } catch (error) {\n    if (axios.isCancel(error)) {\n      dispatch({ type: FETCH_USER_CANCELLED });\n    } else {\n      dispatch({\n        type: FETCH_USER_FAIL,\n        payload:\n          error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n      });\n    }\n  }\n};\n\nexport const updateUser = (id, formValues) => async (dispatch, getState) => {\n  dispatch({ type: UPDATE_USER_REQUEST });\n\n  try {\n    const { data } = await axios.put(`/api/users/${id}`, formValues);\n\n    history.push('/admin/userList');\n\n    dispatch({ type: UPDATE_USER_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      type: UPDATE_USER_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n"],"sourceRoot":""}